checkSame(A, B):- (A, B);(not(A),not(B)).
build_tree0(BT):- BT = node(29, node(42, node(1, empty, node(55, node(82, node(21, empty, empty), node(60, empty, empty)), node(5, empty, empty))), node(79, node(68, node(82, empty, empty), node(90, node(61, node(99, empty, empty), node(96, empty, empty)), empty)), node(77, empty, node(2, empty, empty)))), node(65, node(46, node(88, empty, node(69, node(29, empty, empty), empty)), empty), node(4, node(40, empty, node(39, node(79, empty, empty), node(39, empty, empty))), node(18, node(20, empty, node(45, empty, empty)), node(40, empty, empty))))).
get_size0(N):- N = 31.
get_height0(N):- N = 7.
get_inorder0(L):- L = [1, 21, 82, 60, 55, 5, 42, 82, 68, 99, 61, 96, 90, 79, 77, 2, 29, 88, 29, 69, 46, 65, 40, 79, 39, 39, 4, 20, 45, 18, 40].
get_postorder0(L):- L = [21, 60, 82, 5, 55, 1, 82, 99, 96, 61, 90, 68, 2, 77, 79, 42, 29, 69, 88, 46, 79, 39, 39, 40, 45, 20, 40, 18, 4, 65, 29].
get_preorder0(L):- L = [29, 42, 1, 55, 82, 21, 60, 5, 79, 68, 82, 90, 61, 99, 96, 77, 2, 65, 46, 88, 69, 29, 4, 40, 39, 79, 39, 18, 20, 45, 40].
get_tour0(L):- L = [29, 42, 1, 1, 55, 82, 21, 21, 21, 82, 60, 60, 60, 82, 55, 5, 5, 5, 55, 1, 42, 79, 68, 82, 82, 82, 68, 90, 61, 99, 99, 99, 61, 96, 96, 96, 61, 90, 90, 68, 79, 77, 77, 2, 2, 2, 77, 79, 42, 29, 65, 46, 88, 88, 69, 29, 29, 29, 69, 69, 88, 46, 46, 65, 4, 40, 40, 39, 79, 79, 79, 39, 39, 39, 39, 39, 40, 4, 18, 20, 20, 45, 45, 45, 20, 18, 40, 40, 40, 18, 4, 65, 29].
is_balanced0:- fail.
get_string0(S):- S = "(29, (42, (1, (), (55, (82, (21, (), ()), (60, (), ())), (5, (), ()))), (79, (68, (82, (), ()), (90, (61, (99, (), ()), (96, (), ())), ())), (77, (), (2, (), ())))), (65, (46, (88, (), (69, (29, (), ()), ())), ()), (4, (40, (), (39, (79, (), ()), (39, (), ()))), (18, (20, (), (45, (), ())), (40, (), ())))))".
build_tree1(BT):- BT = node(27, node(23, node(90, node(36, empty, node(47, empty, empty)), empty), node(2, node(54, empty, empty), node(62, empty, node(36, empty, empty)))), node(87, node(2, node(86, node(3, empty, empty), node(64, node(58, empty, empty), empty)), node(40, node(58, node(70, empty, empty), empty), node(83, empty, node(71, empty, empty)))), node(13, empty, node(44, node(80, node(11, empty, empty), empty), node(57, empty, empty))))).
get_size1(N):- N = 25.
get_height1(N):- N = 6.
get_inorder1(L):- L = [36, 47, 90, 23, 54, 2, 62, 36, 27, 3, 86, 58, 64, 2, 70, 58, 40, 83, 71, 87, 13, 11, 80, 44, 57].
get_postorder1(L):- L = [47, 36, 90, 54, 36, 62, 2, 23, 3, 58, 64, 86, 70, 58, 71, 83, 40, 2, 11, 80, 57, 44, 13, 87, 27].
get_preorder1(L):- L = [27, 23, 90, 36, 47, 2, 54, 62, 36, 87, 2, 86, 3, 64, 58, 40, 58, 70, 83, 71, 13, 44, 80, 11, 57].
get_tour1(L):- L = [27, 23, 90, 36, 36, 47, 47, 47, 36, 90, 90, 23, 2, 54, 54, 54, 2, 62, 62, 36, 36, 36, 62, 2, 23, 27, 87, 2, 86, 3, 3, 3, 86, 64, 58, 58, 58, 64, 64, 86, 2, 40, 58, 70, 70, 70, 58, 58, 40, 83, 83, 71, 71, 71, 83, 40, 2, 87, 13, 13, 44, 80, 11, 11, 11, 80, 80, 44, 57, 57, 57, 44, 13, 87, 27].
is_balanced1:- fail.
get_string1(S):- S = "(27, (23, (90, (36, (), (47, (), ())), ()), (2, (54, (), ()), (62, (), (36, (), ())))), (87, (2, (86, (3, (), ()), (64, (58, (), ()), ())), (40, (58, (70, (), ()), ()), (83, (), (71, (), ())))), (13, (), (44, (80, (11, (), ()), ()), (57, (), ())))))".
build_tree2(BT):- BT = node(38, node(33, node(6, node(19, node(41, empty, empty), empty), node(29, node(93, empty, empty), node(3, empty, node(84, empty, empty)))), node(94, node(53, node(93, empty, empty), empty), node(18, node(24, node(1, empty, empty), node(5, empty, empty)), empty))), node(56, node(61, node(96, node(15, node(85, empty, empty), node(98, empty, empty)), node(63, empty, empty)), node(14, node(70, node(80, empty, empty), empty), node(76, node(10, empty, empty), empty))), node(47, node(28, node(54, empty, empty), node(28, empty, empty)), node(68, node(9, node(48, empty, empty), node(84, empty, empty)), node(46, node(98, empty, empty), empty))))).
get_size2(N):- N = 38.
get_height2(N):- N = 6.
get_inorder2(L):- L = [41, 19, 6, 93, 29, 3, 84, 33, 93, 53, 94, 1, 24, 5, 18, 38, 85, 15, 98, 96, 63, 61, 80, 70, 14, 10, 76, 56, 54, 28, 28, 47, 48, 9, 84, 68, 98, 46].
get_postorder2(L):- L = [41, 19, 93, 84, 3, 29, 6, 93, 53, 1, 5, 24, 18, 94, 33, 85, 98, 15, 63, 96, 80, 70, 10, 76, 14, 61, 54, 28, 28, 48, 84, 9, 98, 46, 68, 47, 56, 38].
get_preorder2(L):- L = [38, 33, 6, 19, 41, 29, 93, 3, 84, 94, 53, 93, 18, 24, 1, 5, 56, 61, 96, 15, 85, 98, 63, 14, 70, 80, 76, 10, 47, 28, 54, 28, 68, 9, 48, 84, 46, 98].
get_tour2(L):- L = [38, 33, 6, 19, 41, 41, 41, 19, 19, 6, 29, 93, 93, 93, 29, 3, 3, 84, 84, 84, 3, 29, 6, 33, 94, 53, 93, 93, 93, 53, 53, 94, 18, 24, 1, 1, 1, 24, 5, 5, 5, 24, 18, 18, 94, 33, 38, 56, 61, 96, 15, 85, 85, 85, 15, 98, 98, 98, 15, 96, 63, 63, 63, 96, 61, 14, 70, 80, 80, 80, 70, 70, 14, 76, 10, 10, 10, 76, 76, 14, 61, 56, 47, 28, 54, 54, 54, 28, 28, 28, 28, 28, 47, 68, 9, 48, 48, 48, 9, 84, 84, 84, 9, 68, 46, 98, 98, 98, 46, 46, 68, 47, 56, 38].
is_balanced2:- fail.
get_string2(S):- S = "(38, (33, (6, (19, (41, (), ()), ()), (29, (93, (), ()), (3, (), (84, (), ())))), (94, (53, (93, (), ()), ()), (18, (24, (1, (), ()), (5, (), ())), ()))), (56, (61, (96, (15, (85, (), ()), (98, (), ())), (63, (), ())), (14, (70, (80, (), ()), ()), (76, (10, (), ()), ()))), (47, (28, (54, (), ()), (28, (), ())), (68, (9, (48, (), ()), (84, (), ())), (46, (98, (), ()), ())))))".
build_tree3(BT):- BT = node(20, node(83, node(43, node(15, empty, node(29, empty, empty)), node(22, node(35, empty, node(29, empty, empty)), node(38, node(3, empty, empty), empty))), node(62, node(51, node(31, node(34, empty, empty), empty), node(48, node(79, empty, node(37, empty, empty)), empty)), node(3, empty, node(70, empty, empty)))), node(81, node(44, node(79, node(36, empty, empty), node(46, empty, empty)), node(85, node(90, empty, empty), node(32, node(88, empty, empty), node(62, empty, empty)))), node(38, node(48, empty, node(21, empty, empty)), node(21, node(57, empty, node(61, empty, node(77, empty, empty))), node(97, empty, empty))))).
get_size3(N):- N = 37.
get_height3(N):- N = 7.
get_inorder3(L):- L = [15, 29, 43, 35, 29, 22, 3, 38, 83, 34, 31, 51, 79, 37, 48, 62, 3, 70, 20, 36, 79, 46, 44, 90, 85, 88, 32, 62, 81, 48, 21, 38, 57, 61, 77, 21, 97].
get_postorder3(L):- L = [29, 15, 29, 35, 3, 38, 22, 43, 34, 31, 37, 79, 48, 51, 70, 3, 62, 83, 36, 46, 79, 90, 88, 62, 32, 85, 44, 21, 48, 77, 61, 57, 97, 21, 38, 81, 20].
get_preorder3(L):- L = [20, 83, 43, 15, 29, 22, 35, 29, 38, 3, 62, 51, 31, 34, 48, 79, 37, 3, 70, 81, 44, 79, 36, 46, 85, 90, 32, 88, 62, 38, 48, 21, 21, 57, 61, 77, 97].
get_tour3(L):- L = [20, 83, 43, 15, 15, 29, 29, 29, 15, 43, 22, 35, 35, 29, 29, 29, 35, 22, 38, 3, 3, 3, 38, 38, 22, 43, 83, 62, 51, 31, 34, 34, 34, 31, 31, 51, 48, 79, 79, 37, 37, 37, 79, 48, 48, 51, 62, 3, 3, 70, 70, 70, 3, 62, 83, 20, 81, 44, 79, 36, 36, 36, 79, 46, 46, 46, 79, 44, 85, 90, 90, 90, 85, 32, 88, 88, 88, 32, 62, 62, 62, 32, 85, 44, 81, 38, 48, 48, 21, 21, 21, 48, 38, 21, 57, 57, 61, 61, 77, 77, 77, 61, 57, 21, 97, 97, 97, 21, 38, 81, 20].
is_balanced3:- fail.
get_string3(S):- S = "(20, (83, (43, (15, (), (29, (), ())), (22, (35, (), (29, (), ())), (38, (3, (), ()), ()))), (62, (51, (31, (34, (), ()), ()), (48, (79, (), (37, (), ())), ())), (3, (), (70, (), ())))), (81, (44, (79, (36, (), ()), (46, (), ())), (85, (90, (), ()), (32, (88, (), ()), (62, (), ())))), (38, (48, (), (21, (), ())), (21, (57, (), (61, (), (77, (), ()))), (97, (), ())))))".
build_tree4(BT):- BT = node(94, node(44, node(78, node(81, empty, node(20, empty, node(60, empty, empty))), node(77, empty, empty)), node(50, node(17, empty, node(91, empty, empty)), node(52, empty, empty))), node(97, node(44, node(84, node(74, node(15, empty, empty), empty), empty), empty), node(67, node(56, empty, node(85, empty, empty)), node(19, empty, node(30, empty, empty))))).
get_size4(N):- N = 21.
get_height4(N):- N = 6.
get_inorder4(L):- L = [81, 20, 60, 78, 77, 44, 17, 91, 50, 52, 94, 15, 74, 84, 44, 97, 56, 85, 67, 19, 30].
get_postorder4(L):- L = [60, 20, 81, 77, 78, 91, 17, 52, 50, 44, 15, 74, 84, 44, 85, 56, 30, 19, 67, 97, 94].
get_preorder4(L):- L = [94, 44, 78, 81, 20, 60, 77, 50, 17, 91, 52, 97, 44, 84, 74, 15, 67, 56, 85, 19, 30].
get_tour4(L):- L = [94, 44, 78, 81, 81, 20, 20, 60, 60, 60, 20, 81, 78, 77, 77, 77, 78, 44, 50, 17, 17, 91, 91, 91, 17, 50, 52, 52, 52, 50, 44, 94, 97, 44, 84, 74, 15, 15, 15, 74, 74, 84, 84, 44, 44, 97, 67, 56, 56, 85, 85, 85, 56, 67, 19, 19, 30, 30, 30, 19, 67, 97, 94].
is_balanced4:- fail.
get_string4(S):- S = "(94, (44, (78, (81, (), (20, (), (60, (), ()))), (77, (), ())), (50, (17, (), (91, (), ())), (52, (), ()))), (97, (44, (84, (74, (15, (), ()), ()), ()), ()), (67, (56, (), (85, (), ())), (19, (), (30, (), ())))))".
build_tree5(BT):- BT = node(17, node(93, node(86, node(26, empty, empty), node(38, node(23, empty, node(16, empty, node(78, empty, empty))), empty)), node(1, node(71, node(73, empty, empty), node(68, empty, node(99, empty, empty))), node(6, empty, empty))), node(62, node(27, node(10, node(68, empty, node(54, node(24, empty, empty), empty)), node(36, empty, empty)), node(40, node(30, empty, empty), empty)), node(98, node(5, empty, node(25, node(73, empty, empty), empty)), node(17, node(3, node(34, empty, empty), node(87, empty, empty)), node(75, empty, node(43, empty, empty)))))).
get_size5(N):- N = 33.
get_height5(N):- N = 7.
get_inorder5(L):- L = [26, 86, 23, 16, 78, 38, 93, 73, 71, 68, 99, 1, 6, 17, 68, 24, 54, 10, 36, 27, 30, 40, 62, 5, 73, 25, 98, 34, 3, 87, 17, 75, 43].
get_postorder5(L):- L = [26, 78, 16, 23, 38, 86, 73, 99, 68, 71, 6, 1, 93, 24, 54, 68, 36, 10, 30, 40, 27, 73, 25, 5, 34, 87, 3, 43, 75, 17, 98, 62, 17].
get_preorder5(L):- L = [17, 93, 86, 26, 38, 23, 16, 78, 1, 71, 73, 68, 99, 6, 62, 27, 10, 68, 54, 24, 36, 40, 30, 98, 5, 25, 73, 17, 3, 34, 87, 75, 43].
get_tour5(L):- L = [17, 93, 86, 26, 26, 26, 86, 38, 23, 23, 16, 16, 78, 78, 78, 16, 23, 38, 38, 86, 93, 1, 71, 73, 73, 73, 71, 68, 68, 99, 99, 99, 68, 71, 1, 6, 6, 6, 1, 93, 17, 62, 27, 10, 68, 68, 54, 24, 24, 24, 54, 54, 68, 10, 36, 36, 36, 10, 27, 40, 30, 30, 30, 40, 40, 27, 62, 98, 5, 5, 25, 73, 73, 73, 25, 25, 5, 98, 17, 3, 34, 34, 34, 3, 87, 87, 87, 3, 17, 75, 75, 43, 43, 43, 75, 17, 98, 62, 17].
is_balanced5:- fail.
get_string5(S):- S = "(17, (93, (86, (26, (), ()), (38, (23, (), (16, (), (78, (), ()))), ())), (1, (71, (73, (), ()), (68, (), (99, (), ()))), (6, (), ()))), (62, (27, (10, (68, (), (54, (24, (), ()), ())), (36, (), ())), (40, (30, (), ()), ())), (98, (5, (), (25, (73, (), ()), ())), (17, (3, (34, (), ()), (87, (), ())), (75, (), (43, (), ()))))))".
build_tree6(BT):- BT = node(83, node(28, node(13, node(75, node(38, node(97, empty, empty), empty), node(44, empty, empty)), node(91, node(93, empty, empty), node(81, node(25, empty, empty), empty))), node(46, node(90, empty, empty), node(54, empty, node(97, empty, empty)))), node(51, node(10, node(15, node(14, node(15, node(72, empty, empty), empty), node(31, empty, empty)), node(76, node(45, empty, empty), empty)), node(15, node(26, empty, empty), node(42, node(74, empty, node(80, empty, empty)), empty))), node(88, node(52, node(83, node(65, empty, empty), empty), node(96, node(62, empty, empty), empty)), node(16, empty, empty)))).
get_size6(N):- N = 36.
get_height6(N):- N = 7.
get_inorder6(L):- L = [97, 38, 75, 44, 13, 93, 91, 25, 81, 28, 90, 46, 54, 97, 83, 72, 15, 14, 31, 15, 45, 76, 10, 26, 15, 74, 80, 42, 51, 65, 83, 52, 62, 96, 88, 16].
get_postorder6(L):- L = [97, 38, 44, 75, 93, 25, 81, 91, 13, 90, 97, 54, 46, 28, 72, 15, 31, 14, 45, 76, 15, 26, 80, 74, 42, 15, 10, 65, 83, 62, 96, 52, 16, 88, 51, 83].
get_preorder6(L):- L = [83, 28, 13, 75, 38, 97, 44, 91, 93, 81, 25, 46, 90, 54, 97, 51, 10, 15, 14, 15, 72, 31, 76, 45, 15, 26, 42, 74, 80, 88, 52, 83, 65, 96, 62, 16].
get_tour6(L):- L = [83, 28, 13, 75, 38, 97, 97, 97, 38, 38, 75, 44, 44, 44, 75, 13, 91, 93, 93, 93, 91, 81, 25, 25, 25, 81, 81, 91, 13, 28, 46, 90, 90, 90, 46, 54, 54, 97, 97, 97, 54, 46, 28, 83, 51, 10, 15, 14, 15, 72, 72, 72, 15, 15, 14, 31, 31, 31, 14, 15, 76, 45, 45, 45, 76, 76, 15, 10, 15, 26, 26, 26, 15, 42, 74, 74, 80, 80, 80, 74, 42, 42, 15, 10, 51, 88, 52, 83, 65, 65, 65, 83, 83, 52, 96, 62, 62, 62, 96, 96, 52, 88, 16, 16, 16, 88, 51, 83].
is_balanced6:- fail.
get_string6(S):- S = "(83, (28, (13, (75, (38, (97, (), ()), ()), (44, (), ())), (91, (93, (), ()), (81, (25, (), ()), ()))), (46, (90, (), ()), (54, (), (97, (), ())))), (51, (10, (15, (14, (15, (72, (), ()), ()), (31, (), ())), (76, (45, (), ()), ())), (15, (26, (), ()), (42, (74, (), (80, (), ())), ()))), (88, (52, (83, (65, (), ()), ()), (96, (62, (), ()), ())), (16, (), ()))))".
build_tree7(BT):- BT = node(28, node(20, node(60, node(67, node(69, empty, empty), node(41, node(23, empty, empty), empty)), node(97, empty, node(12, empty, node(70, empty, empty)))), node(19, node(32, empty, node(61, empty, node(50, empty, empty))), node(66, node(59, node(2, empty, empty), empty), node(75, node(88, empty, empty), empty)))), node(86, node(47, node(24, node(90, empty, node(25, empty, node(59, empty, empty))), node(53, node(96, empty, empty), empty)), node(91, node(26, empty, empty), empty)), node(20, node(88, node(90, node(58, node(65, empty, empty), node(30, empty, empty)), node(60, empty, empty)), node(78, empty, node(88, empty, empty))), node(19, empty, node(79, empty, empty))))).
get_size7(N):- N = 40.
get_height7(N):- N = 7.
get_inorder7(L):- L = [69, 67, 23, 41, 60, 97, 12, 70, 20, 32, 61, 50, 19, 2, 59, 66, 88, 75, 28, 90, 25, 59, 24, 96, 53, 47, 26, 91, 86, 65, 58, 30, 90, 60, 88, 78, 88, 20, 19, 79].
get_postorder7(L):- L = [69, 23, 41, 67, 70, 12, 97, 60, 50, 61, 32, 2, 59, 88, 75, 66, 19, 20, 59, 25, 90, 96, 53, 24, 26, 91, 47, 65, 30, 58, 60, 90, 88, 78, 88, 79, 19, 20, 86, 28].
get_preorder7(L):- L = [28, 20, 60, 67, 69, 41, 23, 97, 12, 70, 19, 32, 61, 50, 66, 59, 2, 75, 88, 86, 47, 24, 90, 25, 59, 53, 96, 91, 26, 20, 88, 90, 58, 65, 30, 60, 78, 88, 19, 79].
get_tour7(L):- L = [28, 20, 60, 67, 69, 69, 69, 67, 41, 23, 23, 23, 41, 41, 67, 60, 97, 97, 12, 12, 70, 70, 70, 12, 97, 60, 20, 19, 32, 32, 61, 61, 50, 50, 50, 61, 32, 19, 66, 59, 2, 2, 2, 59, 59, 66, 75, 88, 88, 88, 75, 75, 66, 19, 20, 28, 86, 47, 24, 90, 90, 25, 25, 59, 59, 59, 25, 90, 24, 53, 96, 96, 96, 53, 53, 24, 47, 91, 26, 26, 26, 91, 91, 47, 86, 20, 88, 90, 58, 65, 65, 65, 58, 30, 30, 30, 58, 90, 60, 60, 60, 90, 88, 78, 78, 88, 88, 88, 78, 88, 20, 19, 19, 79, 79, 79, 19, 20, 86, 28].
is_balanced7:- fail.
get_string7(S):- S = "(28, (20, (60, (67, (69, (), ()), (41, (23, (), ()), ())), (97, (), (12, (), (70, (), ())))), (19, (32, (), (61, (), (50, (), ()))), (66, (59, (2, (), ()), ()), (75, (88, (), ()), ())))), (86, (47, (24, (90, (), (25, (), (59, (), ()))), (53, (96, (), ()), ())), (91, (26, (), ()), ())), (20, (88, (90, (58, (65, (), ()), (30, (), ())), (60, (), ())), (78, (), (88, (), ()))), (19, (), (79, (), ())))))".
build_tree8(BT):- BT = node(73, node(61, node(26, empty, node(98, node(17, empty, empty), empty)), node(49, node(32, empty, node(39, empty, empty)), empty)), node(44, node(24, node(48, node(51, empty, empty), empty), node(20, node(87, empty, empty), node(95, empty, empty))), node(45, node(28, node(54, empty, empty), node(82, empty, empty)), node(42, node(73, empty, empty), empty)))).
get_size8(N):- N = 21.
get_height8(N):- N = 5.
get_inorder8(L):- L = [26, 17, 98, 61, 32, 39, 49, 73, 51, 48, 24, 87, 20, 95, 44, 54, 28, 82, 45, 73, 42].
get_postorder8(L):- L = [17, 98, 26, 39, 32, 49, 61, 51, 48, 87, 95, 20, 24, 54, 82, 28, 73, 42, 45, 44, 73].
get_preorder8(L):- L = [73, 61, 26, 98, 17, 49, 32, 39, 44, 24, 48, 51, 20, 87, 95, 45, 28, 54, 82, 42, 73].
get_tour8(L):- L = [73, 61, 26, 26, 98, 17, 17, 17, 98, 98, 26, 61, 49, 32, 32, 39, 39, 39, 32, 49, 49, 61, 73, 44, 24, 48, 51, 51, 51, 48, 48, 24, 20, 87, 87, 87, 20, 95, 95, 95, 20, 24, 44, 45, 28, 54, 54, 54, 28, 82, 82, 82, 28, 45, 42, 73, 73, 73, 42, 42, 45, 44, 73].
is_balanced8:- fail.
get_string8(S):- S = "(73, (61, (26, (), (98, (17, (), ()), ())), (49, (32, (), (39, (), ())), ())), (44, (24, (48, (51, (), ()), ()), (20, (87, (), ()), (95, (), ()))), (45, (28, (54, (), ()), (82, (), ())), (42, (73, (), ()), ()))))".
build_tree9(BT):- BT = node(93, node(1, node(78, node(56, node(9, empty, empty), node(9, empty, node(56, empty, empty))), node(27, node(93, empty, empty), node(50, empty, empty))), node(58, node(70, empty, empty), node(55, empty, node(99, empty, empty)))), node(10, node(65, node(5, empty, node(57, empty, empty)), node(38, empty, empty)), node(86, node(72, node(83, empty, empty), node(71, empty, empty)), node(14, node(3, empty, empty), node(14, empty, node(12, empty, empty)))))).
get_size9(N):- N = 27.
get_height9(N):- N = 6.
get_inorder9(L):- L = [9, 56, 9, 56, 78, 93, 27, 50, 1, 70, 58, 55, 99, 93, 5, 57, 65, 38, 10, 83, 72, 71, 86, 3, 14, 14, 12].
get_postorder9(L):- L = [9, 56, 9, 56, 93, 50, 27, 78, 70, 99, 55, 58, 1, 57, 5, 38, 65, 83, 71, 72, 3, 12, 14, 14, 86, 10, 93].
get_preorder9(L):- L = [93, 1, 78, 56, 9, 9, 56, 27, 93, 50, 58, 70, 55, 99, 10, 65, 5, 57, 38, 86, 72, 83, 71, 14, 3, 14, 12].
get_tour9(L):- L = [93, 1, 78, 56, 9, 9, 9, 56, 9, 9, 56, 56, 56, 9, 56, 78, 27, 93, 93, 93, 27, 50, 50, 50, 27, 78, 1, 58, 70, 70, 70, 58, 55, 55, 99, 99, 99, 55, 58, 1, 93, 10, 65, 5, 5, 57, 57, 57, 5, 65, 38, 38, 38, 65, 10, 86, 72, 83, 83, 83, 72, 71, 71, 71, 72, 86, 14, 3, 3, 3, 14, 14, 14, 12, 12, 12, 14, 14, 86, 10, 93].
is_balanced9.
get_string9(S):- S = "(93, (1, (78, (56, (9, (), ()), (9, (), (56, (), ()))), (27, (93, (), ()), (50, (), ()))), (58, (70, (), ()), (55, (), (99, (), ())))), (10, (65, (5, (), (57, (), ())), (38, (), ())), (86, (72, (83, (), ()), (71, (), ())), (14, (3, (), ()), (14, (), (12, (), ()))))))".
build_tree10(BT):- BT = node(15, node(17, node(78, node(28, empty, node(80, empty, node(12, empty, empty))), node(93, node(75, node(64, empty, empty), empty), empty)), node(12, node(63, node(3, node(21, empty, empty), empty), node(60, empty, empty)), node(10, empty, node(71, empty, node(67, node(42, empty, empty), empty))))), node(70, node(7, node(84, node(58, empty, empty), empty), node(66, node(9, empty, empty), empty)), node(97, node(16, node(52, node(10, empty, empty), empty), node(82, node(29, empty, empty), empty)), node(98, node(14, node(44, empty, empty), empty), node(48, node(87, empty, empty), empty))))).
get_size10(N):- N = 35.
get_height10(N):- N = 7.
get_inorder10(L):- L = [28, 80, 12, 78, 64, 75, 93, 17, 21, 3, 63, 60, 12, 10, 71, 42, 67, 15, 58, 84, 7, 9, 66, 70, 10, 52, 16, 29, 82, 97, 44, 14, 98, 87, 48].
get_postorder10(L):- L = [12, 80, 28, 64, 75, 93, 78, 21, 3, 60, 63, 42, 67, 71, 10, 12, 17, 58, 84, 9, 66, 7, 10, 52, 29, 82, 16, 44, 14, 87, 48, 98, 97, 70, 15].
get_preorder10(L):- L = [15, 17, 78, 28, 80, 12, 93, 75, 64, 12, 63, 3, 21, 60, 10, 71, 67, 42, 70, 7, 84, 58, 66, 9, 97, 16, 52, 10, 82, 29, 98, 14, 44, 48, 87].
get_tour10(L):- L = [15, 17, 78, 28, 28, 80, 80, 12, 12, 12, 80, 28, 78, 93, 75, 64, 64, 64, 75, 75, 93, 93, 78, 17, 12, 63, 3, 21, 21, 21, 3, 3, 63, 60, 60, 60, 63, 12, 10, 10, 71, 71, 67, 42, 42, 42, 67, 67, 71, 10, 12, 17, 15, 70, 7, 84, 58, 58, 58, 84, 84, 7, 66, 9, 9, 9, 66, 66, 7, 70, 97, 16, 52, 10, 10, 10, 52, 52, 16, 82, 29, 29, 29, 82, 82, 16, 97, 98, 14, 44, 44, 44, 14, 14, 98, 48, 87, 87, 87, 48, 48, 98, 97, 70, 15].
is_balanced10:- fail.
get_string10(S):- S = "(15, (17, (78, (28, (), (80, (), (12, (), ()))), (93, (75, (64, (), ()), ()), ())), (12, (63, (3, (21, (), ()), ()), (60, (), ())), (10, (), (71, (), (67, (42, (), ()), ()))))), (70, (7, (84, (58, (), ()), ()), (66, (9, (), ()), ())), (97, (16, (52, (10, (), ()), ()), (82, (29, (), ()), ())), (98, (14, (44, (), ()), ()), (48, (87, (), ()), ())))))".
build_tree11(BT):- BT = node(79, node(15, node(2, node(10, node(88, node(19, empty, empty), empty), empty), node(42, node(47, empty, empty), node(48, empty, empty))), empty), node(99, node(7, node(27, node(23, empty, node(74, empty, node(33, empty, empty))), empty), node(37, node(73, empty, empty), node(61, empty, empty))), node(27, node(56, empty, empty), node(11, empty, empty)))).
get_size11(N):- N = 21.
get_height11(N):- N = 7.
get_inorder11(L):- L = [19, 88, 10, 2, 47, 42, 48, 15, 79, 23, 74, 33, 27, 7, 73, 37, 61, 99, 56, 27, 11].
get_postorder11(L):- L = [19, 88, 10, 47, 48, 42, 2, 15, 33, 74, 23, 27, 73, 61, 37, 7, 56, 11, 27, 99, 79].
get_preorder11(L):- L = [79, 15, 2, 10, 88, 19, 42, 47, 48, 99, 7, 27, 23, 74, 33, 37, 73, 61, 27, 56, 11].
get_tour11(L):- L = [79, 15, 2, 10, 88, 19, 19, 19, 88, 88, 10, 10, 2, 42, 47, 47, 47, 42, 48, 48, 48, 42, 2, 15, 15, 79, 99, 7, 27, 23, 23, 74, 74, 33, 33, 33, 74, 23, 27, 27, 7, 37, 73, 73, 73, 37, 61, 61, 61, 37, 7, 99, 27, 56, 56, 56, 27, 11, 11, 11, 27, 99, 79].
is_balanced11:- fail.
get_string11(S):- S = "(79, (15, (2, (10, (88, (19, (), ()), ()), ()), (42, (47, (), ()), (48, (), ()))), ()), (99, (7, (27, (23, (), (74, (), (33, (), ()))), ()), (37, (73, (), ()), (61, (), ()))), (27, (56, (), ()), (11, (), ()))))".
build_tree12(BT):- BT = node(48, node(62, node(10, node(18, node(40, empty, node(88, node(48, empty, empty), empty)), empty), node(9, empty, node(81, empty, empty))), node(87, node(9, node(19, empty, empty), node(78, empty, node(75, empty, empty))), node(5, node(73, node(95, empty, node(54, empty, empty)), node(61, empty, empty)), node(33, empty, node(9, empty, empty))))), node(61, node(20, node(24, empty, node(18, empty, empty)), node(89, node(61, node(98, empty, empty), empty), node(25, empty, node(77, empty, empty)))), node(5, node(49, node(28, node(30, empty, empty), empty), empty), node(79, node(68, node(91, empty, empty), empty), node(97, empty, empty))))).
get_size12(N):- N = 38.
get_height12(N):- N = 7.
get_inorder12(L):- L = [40, 48, 88, 18, 10, 9, 81, 62, 19, 9, 78, 75, 87, 95, 54, 73, 61, 5, 33, 9, 48, 24, 18, 20, 98, 61, 89, 25, 77, 61, 30, 28, 49, 5, 91, 68, 79, 97].
get_postorder12(L):- L = [48, 88, 40, 18, 81, 9, 10, 19, 75, 78, 9, 54, 95, 61, 73, 9, 33, 5, 87, 62, 18, 24, 98, 61, 77, 25, 89, 20, 30, 28, 49, 91, 68, 97, 79, 5, 61, 48].
get_preorder12(L):- L = [48, 62, 10, 18, 40, 88, 48, 9, 81, 87, 9, 19, 78, 75, 5, 73, 95, 54, 61, 33, 9, 61, 20, 24, 18, 89, 61, 98, 25, 77, 5, 49, 28, 30, 79, 68, 91, 97].
get_tour12(L):- L = [48, 62, 10, 18, 40, 40, 88, 48, 48, 48, 88, 88, 40, 18, 18, 10, 9, 9, 81, 81, 81, 9, 10, 62, 87, 9, 19, 19, 19, 9, 78, 78, 75, 75, 75, 78, 9, 87, 5, 73, 95, 95, 54, 54, 54, 95, 73, 61, 61, 61, 73, 5, 33, 33, 9, 9, 9, 33, 5, 87, 62, 48, 61, 20, 24, 24, 18, 18, 18, 24, 20, 89, 61, 98, 98, 98, 61, 61, 89, 25, 25, 77, 77, 77, 25, 89, 20, 61, 5, 49, 28, 30, 30, 30, 28, 28, 49, 49, 5, 79, 68, 91, 91, 91, 68, 68, 79, 97, 97, 97, 79, 5, 61, 48].
is_balanced12:- fail.
get_string12(S):- S = "(48, (62, (10, (18, (40, (), (88, (48, (), ()), ())), ()), (9, (), (81, (), ()))), (87, (9, (19, (), ()), (78, (), (75, (), ()))), (5, (73, (95, (), (54, (), ())), (61, (), ())), (33, (), (9, (), ()))))), (61, (20, (24, (), (18, (), ())), (89, (61, (98, (), ()), ()), (25, (), (77, (), ())))), (5, (49, (28, (30, (), ()), ()), ()), (79, (68, (91, (), ()), ()), (97, (), ())))))".
build_tree13(BT):- BT = node(88, node(10, node(66, node(24, node(84, empty, empty), empty), node(75, empty, node(46, empty, empty))), node(98, node(74, node(20, empty, empty), node(33, empty, node(87, empty, empty))), node(16, empty, node(2, empty, empty)))), node(97, node(39, node(64, empty, node(3, node(94, empty, empty), empty)), node(75, node(68, node(25, empty, empty), node(88, empty, empty)), node(10, node(27, empty, empty), empty))), node(14, node(42, node(69, node(5, empty, empty), node(70, empty, empty)), node(47, node(31, empty, empty), node(77, empty, empty))), node(66, node(46, empty, empty), node(47, node(89, empty, empty), node(65, empty, empty)))))).
get_size13(N):- N = 38.
get_height13(N):- N = 6.
get_inorder13(L):- L = [84, 24, 66, 75, 46, 10, 20, 74, 33, 87, 98, 16, 2, 88, 64, 94, 3, 39, 25, 68, 88, 75, 27, 10, 97, 5, 69, 70, 42, 31, 47, 77, 14, 46, 66, 89, 47, 65].
get_postorder13(L):- L = [84, 24, 46, 75, 66, 20, 87, 33, 74, 2, 16, 98, 10, 94, 3, 64, 25, 88, 68, 27, 10, 75, 39, 5, 70, 69, 31, 77, 47, 42, 46, 89, 65, 47, 66, 14, 97, 88].
get_preorder13(L):- L = [88, 10, 66, 24, 84, 75, 46, 98, 74, 20, 33, 87, 16, 2, 97, 39, 64, 3, 94, 75, 68, 25, 88, 10, 27, 14, 42, 69, 5, 70, 47, 31, 77, 66, 46, 47, 89, 65].
get_tour13(L):- L = [88, 10, 66, 24, 84, 84, 84, 24, 24, 66, 75, 75, 46, 46, 46, 75, 66, 10, 98, 74, 20, 20, 20, 74, 33, 33, 87, 87, 87, 33, 74, 98, 16, 16, 2, 2, 2, 16, 98, 10, 88, 97, 39, 64, 64, 3, 94, 94, 94, 3, 3, 64, 39, 75, 68, 25, 25, 25, 68, 88, 88, 88, 68, 75, 10, 27, 27, 27, 10, 10, 75, 39, 97, 14, 42, 69, 5, 5, 5, 69, 70, 70, 70, 69, 42, 47, 31, 31, 31, 47, 77, 77, 77, 47, 42, 14, 66, 46, 46, 46, 66, 47, 89, 89, 89, 47, 65, 65, 65, 47, 66, 14, 97, 88].
is_balanced13:- fail.
get_string13(S):- S = "(88, (10, (66, (24, (84, (), ()), ()), (75, (), (46, (), ()))), (98, (74, (20, (), ()), (33, (), (87, (), ()))), (16, (), (2, (), ())))), (97, (39, (64, (), (3, (94, (), ()), ())), (75, (68, (25, (), ()), (88, (), ())), (10, (27, (), ()), ()))), (14, (42, (69, (5, (), ()), (70, (), ())), (47, (31, (), ()), (77, (), ()))), (66, (46, (), ()), (47, (89, (), ()), (65, (), ()))))))".
build_tree14(BT):- BT = node(22, node(77, node(92, node(33, node(83, empty, empty), node(6, node(32, empty, empty), node(12, node(99, empty, empty), empty))), node(53, empty, empty)), node(87, node(90, node(72, empty, empty), node(19, empty, empty)), node(20, node(7, empty, node(6, empty, node(65, empty, node(12, empty, empty)))), empty))), node(86, node(40, node(49, empty, node(22, empty, empty)), node(17, empty, node(7, empty, empty))), node(83, node(66, empty, empty), node(92, empty, empty)))).
get_size14(N):- N = 28.
get_height14(N):- N = 8.
get_inorder14(L):- L = [83, 33, 32, 6, 99, 12, 92, 53, 77, 72, 90, 19, 87, 7, 6, 65, 12, 20, 22, 49, 22, 40, 17, 7, 86, 66, 83, 92].
get_postorder14(L):- L = [83, 32, 99, 12, 6, 33, 53, 92, 72, 19, 90, 12, 65, 6, 7, 20, 87, 77, 22, 49, 7, 17, 40, 66, 92, 83, 86, 22].
get_preorder14(L):- L = [22, 77, 92, 33, 83, 6, 32, 12, 99, 53, 87, 90, 72, 19, 20, 7, 6, 65, 12, 86, 40, 49, 22, 17, 7, 83, 66, 92].
get_tour14(L):- L = [22, 77, 92, 33, 83, 83, 83, 33, 6, 32, 32, 32, 6, 12, 99, 99, 99, 12, 12, 6, 33, 92, 53, 53, 53, 92, 77, 87, 90, 72, 72, 72, 90, 19, 19, 19, 90, 87, 20, 7, 7, 6, 6, 65, 65, 12, 12, 12, 65, 6, 7, 20, 20, 87, 77, 22, 86, 40, 49, 49, 22, 22, 22, 49, 40, 17, 17, 7, 7, 7, 17, 40, 86, 83, 66, 66, 66, 83, 92, 92, 92, 83, 86, 22].
is_balanced14:- fail.
get_string14(S):- S = "(22, (77, (92, (33, (83, (), ()), (6, (32, (), ()), (12, (99, (), ()), ()))), (53, (), ())), (87, (90, (72, (), ()), (19, (), ())), (20, (7, (), (6, (), (65, (), (12, (), ())))), ()))), (86, (40, (49, (), (22, (), ())), (17, (), (7, (), ()))), (83, (66, (), ()), (92, (), ()))))".
build_tree15(BT):- BT = node(87, node(47, node(98, node(79, empty, node(49, node(98, empty, empty), node(31, node(48, empty, empty), empty))), node(93, empty, empty)), node(95, node(92, node(55, empty, empty), empty), node(16, empty, node(60, empty, empty)))), node(30, node(87, node(88, node(1, empty, empty), empty), node(35, node(66, empty, empty), node(46, node(75, empty, empty), node(51, empty, empty)))), node(78, node(81, node(33, empty, empty), node(48, empty, empty)), node(31, node(18, node(62, empty, empty), empty), node(72, node(99, empty, empty), empty))))).
get_size15(N):- N = 32.
get_height15(N):- N = 7.
get_inorder15(L):- L = [79, 98, 49, 48, 31, 98, 93, 47, 55, 92, 95, 16, 60, 87, 1, 88, 87, 66, 35, 75, 46, 51, 30, 33, 81, 48, 78, 62, 18, 31, 99, 72].
get_postorder15(L):- L = [98, 48, 31, 49, 79, 93, 98, 55, 92, 60, 16, 95, 47, 1, 88, 66, 75, 51, 46, 35, 87, 33, 48, 81, 62, 18, 99, 72, 31, 78, 30, 87].
get_preorder15(L):- L = [87, 47, 98, 79, 49, 98, 31, 48, 93, 95, 92, 55, 16, 60, 30, 87, 88, 1, 35, 66, 46, 75, 51, 78, 81, 33, 48, 31, 18, 62, 72, 99].
get_tour15(L):- L = [87, 47, 98, 79, 79, 49, 98, 98, 98, 49, 31, 48, 48, 48, 31, 31, 49, 79, 98, 93, 93, 93, 98, 47, 95, 92, 55, 55, 55, 92, 92, 95, 16, 16, 60, 60, 60, 16, 95, 47, 87, 30, 87, 88, 1, 1, 1, 88, 88, 87, 35, 66, 66, 66, 35, 46, 75, 75, 75, 46, 51, 51, 51, 46, 35, 87, 30, 78, 81, 33, 33, 33, 81, 48, 48, 48, 81, 78, 31, 18, 62, 62, 62, 18, 18, 31, 72, 99, 99, 99, 72, 72, 31, 78, 30, 87].
is_balanced15:- fail.
get_string15(S):- S = "(87, (47, (98, (79, (), (49, (98, (), ()), (31, (48, (), ()), ()))), (93, (), ())), (95, (92, (55, (), ()), ()), (16, (), (60, (), ())))), (30, (87, (88, (1, (), ()), ()), (35, (66, (), ()), (46, (75, (), ()), (51, (), ())))), (78, (81, (33, (), ()), (48, (), ())), (31, (18, (62, (), ()), ()), (72, (99, (), ()), ())))))".
build_tree16(BT):- BT = node(37, node(4, node(88, node(85, node(22, empty, empty), node(36, empty, empty)), node(17, node(33, node(90, empty, node(71, empty, empty)), empty), node(31, node(50, empty, empty), empty))), node(94, empty, node(87, node(87, empty, empty), node(19, empty, empty)))), node(37, node(62, node(94, node(42, empty, empty), empty), node(72, node(2, node(71, empty, node(35, empty, empty)), empty), node(76, node(26, empty, node(73, empty, empty)), node(89, empty, empty)))), node(7, node(59, empty, node(66, node(29, empty, empty), node(73, node(4, empty, empty), empty))), node(83, empty, empty)))).
get_size16(N):- N = 35.
get_height16(N):- N = 7.
get_inorder16(L):- L = [22, 85, 36, 88, 90, 71, 33, 17, 50, 31, 4, 94, 87, 87, 19, 37, 42, 94, 62, 71, 35, 2, 72, 26, 73, 76, 89, 37, 59, 29, 66, 4, 73, 7, 83].
get_postorder16(L):- L = [22, 36, 85, 71, 90, 33, 50, 31, 17, 88, 87, 19, 87, 94, 4, 42, 94, 35, 71, 2, 73, 26, 89, 76, 72, 62, 29, 4, 73, 66, 59, 83, 7, 37, 37].
get_preorder16(L):- L = [37, 4, 88, 85, 22, 36, 17, 33, 90, 71, 31, 50, 94, 87, 87, 19, 37, 62, 94, 42, 72, 2, 71, 35, 76, 26, 73, 89, 7, 59, 66, 29, 73, 4, 83].
get_tour16(L):- L = [37, 4, 88, 85, 22, 22, 22, 85, 36, 36, 36, 85, 88, 17, 33, 90, 90, 71, 71, 71, 90, 33, 33, 17, 31, 50, 50, 50, 31, 31, 17, 88, 4, 94, 94, 87, 87, 87, 87, 87, 19, 19, 19, 87, 94, 4, 37, 37, 62, 94, 42, 42, 42, 94, 94, 62, 72, 2, 71, 71, 35, 35, 35, 71, 2, 2, 72, 76, 26, 26, 73, 73, 73, 26, 76, 89, 89, 89, 76, 72, 62, 37, 7, 59, 59, 66, 29, 29, 29, 66, 73, 4, 4, 4, 73, 73, 66, 59, 7, 83, 83, 83, 7, 37, 37].
is_balanced16:- fail.
get_string16(S):- S = "(37, (4, (88, (85, (22, (), ()), (36, (), ())), (17, (33, (90, (), (71, (), ())), ()), (31, (50, (), ()), ()))), (94, (), (87, (87, (), ()), (19, (), ())))), (37, (62, (94, (42, (), ()), ()), (72, (2, (71, (), (35, (), ())), ()), (76, (26, (), (73, (), ())), (89, (), ())))), (7, (59, (), (66, (29, (), ()), (73, (4, (), ()), ()))), (83, (), ()))))".
build_tree17(BT):- BT = node(53, node(68, node(60, node(84, node(46, empty, empty), empty), node(89, empty, node(93, empty, empty))), node(81, node(65, node(53, empty, empty), node(17, empty, empty)), node(13, empty, empty))), node(91, node(84, node(49, node(68, node(67, empty, node(77, empty, empty)), node(95, empty, empty)), node(26, node(70, empty, node(35, empty, empty)), empty)), node(7, empty, node(67, empty, empty))), node(25, node(6, empty, node(75, empty, node(31, empty, empty))), empty))).
get_size17(N):- N = 28.
get_height17(N):- N = 7.
get_inorder17(L):- L = [46, 84, 60, 89, 93, 68, 53, 65, 17, 81, 13, 53, 67, 77, 68, 95, 49, 70, 35, 26, 84, 7, 67, 91, 6, 75, 31, 25].
get_postorder17(L):- L = [46, 84, 93, 89, 60, 53, 17, 65, 13, 81, 68, 77, 67, 95, 68, 35, 70, 26, 49, 67, 7, 84, 31, 75, 6, 25, 91, 53].
get_preorder17(L):- L = [53, 68, 60, 84, 46, 89, 93, 81, 65, 53, 17, 13, 91, 84, 49, 68, 67, 77, 95, 26, 70, 35, 7, 67, 25, 6, 75, 31].
get_tour17(L):- L = [53, 68, 60, 84, 46, 46, 46, 84, 84, 60, 89, 89, 93, 93, 93, 89, 60, 68, 81, 65, 53, 53, 53, 65, 17, 17, 17, 65, 81, 13, 13, 13, 81, 68, 53, 91, 84, 49, 68, 67, 67, 77, 77, 77, 67, 68, 95, 95, 95, 68, 49, 26, 70, 70, 35, 35, 35, 70, 26, 26, 49, 84, 7, 7, 67, 67, 67, 7, 84, 91, 25, 6, 6, 75, 75, 31, 31, 31, 75, 6, 25, 25, 91, 53].
is_balanced17:- fail.
get_string17(S):- S = "(53, (68, (60, (84, (46, (), ()), ()), (89, (), (93, (), ()))), (81, (65, (53, (), ()), (17, (), ())), (13, (), ()))), (91, (84, (49, (68, (67, (), (77, (), ())), (95, (), ())), (26, (70, (), (35, (), ())), ())), (7, (), (67, (), ()))), (25, (6, (), (75, (), (31, (), ()))), ())))".
build_tree18(BT):- BT = node(37, node(57, node(3, node(37, empty, node(96, empty, empty)), node(45, node(91, empty, empty), node(73, empty, empty))), node(13, node(99, node(40, node(40, empty, empty), empty), empty), node(34, empty, empty))), node(17, node(33, node(85, node(24, node(32, empty, empty), node(87, empty, empty)), node(70, empty, node(71, empty, empty))), node(83, node(35, node(91, node(36, empty, empty), empty), node(65, node(14, empty, empty), empty)), node(20, empty, empty))), node(40, node(2, empty, node(19, empty, empty)), node(27, node(42, empty, node(59, empty, node(20, empty, empty))), node(2, empty, empty))))).
get_size18(N):- N = 36.
get_height18(N):- N = 7.
get_inorder18(L):- L = [37, 96, 3, 91, 45, 73, 57, 40, 40, 99, 13, 34, 37, 32, 24, 87, 85, 70, 71, 33, 36, 91, 35, 14, 65, 83, 20, 17, 2, 19, 40, 42, 59, 20, 27, 2].
get_postorder18(L):- L = [96, 37, 91, 73, 45, 3, 40, 40, 99, 34, 13, 57, 32, 87, 24, 71, 70, 85, 36, 91, 14, 65, 35, 20, 83, 33, 19, 2, 20, 59, 42, 2, 27, 40, 17, 37].
get_preorder18(L):- L = [37, 57, 3, 37, 96, 45, 91, 73, 13, 99, 40, 40, 34, 17, 33, 85, 24, 32, 87, 70, 71, 83, 35, 91, 36, 65, 14, 20, 40, 2, 19, 27, 42, 59, 20, 2].
get_tour18(L):- L = [37, 57, 3, 37, 37, 96, 96, 96, 37, 3, 45, 91, 91, 91, 45, 73, 73, 73, 45, 3, 57, 13, 99, 40, 40, 40, 40, 40, 40, 99, 99, 13, 34, 34, 34, 13, 57, 37, 17, 33, 85, 24, 32, 32, 32, 24, 87, 87, 87, 24, 85, 70, 70, 71, 71, 71, 70, 85, 33, 83, 35, 91, 36, 36, 36, 91, 91, 35, 65, 14, 14, 14, 65, 65, 35, 83, 20, 20, 20, 83, 33, 17, 40, 2, 2, 19, 19, 19, 2, 40, 27, 42, 42, 59, 59, 20, 20, 20, 59, 42, 27, 2, 2, 2, 27, 40, 17, 37].
is_balanced18:- fail.
get_string18(S):- S = "(37, (57, (3, (37, (), (96, (), ())), (45, (91, (), ()), (73, (), ()))), (13, (99, (40, (40, (), ()), ()), ()), (34, (), ()))), (17, (33, (85, (24, (32, (), ()), (87, (), ())), (70, (), (71, (), ()))), (83, (35, (91, (36, (), ()), ()), (65, (14, (), ()), ())), (20, (), ()))), (40, (2, (), (19, (), ())), (27, (42, (), (59, (), (20, (), ()))), (2, (), ())))))".
build_tree19(BT):- BT = node(41, node(94, node(51, node(97, empty, empty), node(99, node(52, empty, empty), node(96, empty, empty))), node(42, node(62, node(7, node(89, node(91, empty, empty), empty), empty), node(25, node(97, empty, empty), node(1, empty, empty))), node(16, node(43, node(67, empty, empty), node(20, empty, empty)), empty))), node(82, node(80, node(32, empty, node(34, empty, empty)), node(87, node(52, empty, empty), empty)), node(49, node(41, node(25, node(99, empty, empty), empty), node(16, empty, empty)), node(5, empty, node(65, node(25, empty, empty), empty))))).
get_size19(N):- N = 33.
get_height19(N):- N = 7.
get_inorder19(L):- L = [97, 51, 52, 99, 96, 94, 91, 89, 7, 62, 97, 25, 1, 42, 67, 43, 20, 16, 41, 32, 34, 80, 52, 87, 82, 99, 25, 41, 16, 49, 5, 25, 65].
get_postorder19(L):- L = [97, 52, 96, 99, 51, 91, 89, 7, 97, 1, 25, 62, 67, 20, 43, 16, 42, 94, 34, 32, 52, 87, 80, 99, 25, 16, 41, 25, 65, 5, 49, 82, 41].
get_preorder19(L):- L = [41, 94, 51, 97, 99, 52, 96, 42, 62, 7, 89, 91, 25, 97, 1, 16, 43, 67, 20, 82, 80, 32, 34, 87, 52, 49, 41, 25, 99, 16, 5, 65, 25].
get_tour19(L):- L = [41, 94, 51, 97, 97, 97, 51, 99, 52, 52, 52, 99, 96, 96, 96, 99, 51, 94, 42, 62, 7, 89, 91, 91, 91, 89, 89, 7, 7, 62, 25, 97, 97, 97, 25, 1, 1, 1, 25, 62, 42, 16, 43, 67, 67, 67, 43, 20, 20, 20, 43, 16, 16, 42, 94, 41, 82, 80, 32, 32, 34, 34, 34, 32, 80, 87, 52, 52, 52, 87, 87, 80, 82, 49, 41, 25, 99, 99, 99, 25, 25, 41, 16, 16, 16, 41, 49, 5, 5, 65, 25, 25, 25, 65, 65, 5, 49, 82, 41].
is_balanced19:- fail.
get_string19(S):- S = "(41, (94, (51, (97, (), ()), (99, (52, (), ()), (96, (), ()))), (42, (62, (7, (89, (91, (), ()), ()), ()), (25, (97, (), ()), (1, (), ()))), (16, (43, (67, (), ()), (20, (), ())), ()))), (82, (80, (32, (), (34, (), ())), (87, (52, (), ()), ())), (49, (41, (25, (99, (), ()), ()), (16, (), ())), (5, (), (65, (25, (), ()), ())))))".
build_tree20(BT):- BT = node(25, node(71, node(24, node(34, empty, empty), node(88, empty, node(58, empty, empty))), node(61, node(44, node(17, empty, empty), node(69, node(76, empty, empty), empty)), node(73, node(67, node(20, empty, node(47, empty, empty)), node(64, node(35, empty, empty), empty)), node(40, node(88, empty, empty), empty)))), node(32, node(50, node(79, node(77, node(92, empty, empty), empty), node(40, empty, empty)), node(40, node(38, node(24, empty, empty), empty), empty)), node(60, empty, node(18, node(65, empty, empty), node(97, empty, node(35, empty, node(62, empty, empty))))))).
get_size20(N):- N = 34.
get_height20(N):- N = 7.
get_inorder20(L):- L = [34, 24, 88, 58, 71, 17, 44, 76, 69, 61, 20, 47, 67, 35, 64, 73, 88, 40, 25, 92, 77, 79, 40, 50, 24, 38, 40, 32, 60, 65, 18, 97, 35, 62].
get_postorder20(L):- L = [34, 58, 88, 24, 17, 76, 69, 44, 47, 20, 35, 64, 67, 88, 40, 73, 61, 71, 92, 77, 40, 79, 24, 38, 40, 50, 65, 62, 35, 97, 18, 60, 32, 25].
get_preorder20(L):- L = [25, 71, 24, 34, 88, 58, 61, 44, 17, 69, 76, 73, 67, 20, 47, 64, 35, 40, 88, 32, 50, 79, 77, 92, 40, 40, 38, 24, 60, 18, 65, 97, 35, 62].
get_tour20(L):- L = [25, 71, 24, 34, 34, 34, 24, 88, 88, 58, 58, 58, 88, 24, 71, 61, 44, 17, 17, 17, 44, 69, 76, 76, 76, 69, 69, 44, 61, 73, 67, 20, 20, 47, 47, 47, 20, 67, 64, 35, 35, 35, 64, 64, 67, 73, 40, 88, 88, 88, 40, 40, 73, 61, 71, 25, 32, 50, 79, 77, 92, 92, 92, 77, 77, 79, 40, 40, 40, 79, 50, 40, 38, 24, 24, 24, 38, 38, 40, 40, 50, 32, 60, 60, 18, 65, 65, 65, 18, 97, 97, 35, 35, 62, 62, 62, 35, 97, 18, 60, 32, 25].
is_balanced20:- fail.
get_string20(S):- S = "(25, (71, (24, (34, (), ()), (88, (), (58, (), ()))), (61, (44, (17, (), ()), (69, (76, (), ()), ())), (73, (67, (20, (), (47, (), ())), (64, (35, (), ()), ())), (40, (88, (), ()), ())))), (32, (50, (79, (77, (92, (), ()), ()), (40, (), ())), (40, (38, (24, (), ()), ()), ())), (60, (), (18, (65, (), ()), (97, (), (35, (), (62, (), ())))))))".
build_tree21(BT):- BT = node(98, node(29, node(81, node(57, node(88, empty, node(3, empty, empty)), node(56, empty, empty)), node(97, empty, node(43, empty, empty))), node(23, node(88, node(88, empty, node(20, empty, empty)), node(91, empty, node(39, empty, empty))), node(76, empty, empty))), node(47, node(68, empty, node(39, node(86, empty, empty), empty)), node(5, empty, empty))).
get_size21(N):- N = 21.
get_height21(N):- N = 6.
get_inorder21(L):- L = [88, 3, 57, 56, 81, 97, 43, 29, 88, 20, 88, 91, 39, 23, 76, 98, 68, 86, 39, 47, 5].
get_postorder21(L):- L = [3, 88, 56, 57, 43, 97, 81, 20, 88, 39, 91, 88, 76, 23, 29, 86, 39, 68, 5, 47, 98].
get_preorder21(L):- L = [98, 29, 81, 57, 88, 3, 56, 97, 43, 23, 88, 88, 20, 91, 39, 76, 47, 68, 39, 86, 5].
get_tour21(L):- L = [98, 29, 81, 57, 88, 88, 3, 3, 3, 88, 57, 56, 56, 56, 57, 81, 97, 97, 43, 43, 43, 97, 81, 29, 23, 88, 88, 88, 20, 20, 20, 88, 88, 91, 91, 39, 39, 39, 91, 88, 23, 76, 76, 76, 23, 29, 98, 47, 68, 68, 39, 86, 86, 86, 39, 39, 68, 47, 5, 5, 5, 47, 98].
is_balanced21:- fail.
get_string21(S):- S = "(98, (29, (81, (57, (88, (), (3, (), ())), (56, (), ())), (97, (), (43, (), ()))), (23, (88, (88, (), (20, (), ())), (91, (), (39, (), ()))), (76, (), ()))), (47, (68, (), (39, (86, (), ()), ())), (5, (), ())))".
build_tree22(BT):- BT = node(65, node(95, node(14, node(19, empty, empty), node(97, node(90, empty, empty), node(96, empty, empty))), node(55, node(53, node(1, node(45, node(6, empty, empty), empty), empty), node(46, empty, node(53, node(53, empty, empty), node(45, empty, empty)))), node(34, empty, node(76, empty, empty)))), node(7, node(18, node(4, node(84, empty, node(20, empty, empty)), empty), node(63, node(88, empty, empty), node(53, node(87, empty, empty), empty))), node(1, node(11, node(7, empty, empty), node(18, empty, node(96, empty, node(55, empty, empty)))), node(23, node(31, empty, node(89, empty, empty)), node(68, empty, node(52, empty, empty)))))).
get_size22(N):- N = 38.
get_height22(N):- N = 7.
get_inorder22(L):- L = [19, 14, 90, 97, 96, 95, 6, 45, 1, 53, 46, 53, 53, 45, 55, 34, 76, 65, 84, 20, 4, 18, 88, 63, 87, 53, 7, 7, 11, 18, 96, 55, 1, 31, 89, 23, 68, 52].
get_postorder22(L):- L = [19, 90, 96, 97, 14, 6, 45, 1, 53, 45, 53, 46, 53, 76, 34, 55, 95, 20, 84, 4, 88, 87, 53, 63, 18, 7, 55, 96, 18, 11, 89, 31, 52, 68, 23, 1, 7, 65].
get_preorder22(L):- L = [65, 95, 14, 19, 97, 90, 96, 55, 53, 1, 45, 6, 46, 53, 53, 45, 34, 76, 7, 18, 4, 84, 20, 63, 88, 53, 87, 1, 11, 7, 18, 96, 55, 23, 31, 89, 68, 52].
get_tour22(L):- L = [65, 95, 14, 19, 19, 19, 14, 97, 90, 90, 90, 97, 96, 96, 96, 97, 14, 95, 55, 53, 1, 45, 6, 6, 6, 45, 45, 1, 1, 53, 46, 46, 53, 53, 53, 53, 53, 45, 45, 45, 53, 46, 53, 55, 34, 34, 76, 76, 76, 34, 55, 95, 65, 7, 18, 4, 84, 84, 20, 20, 20, 84, 4, 4, 18, 63, 88, 88, 88, 63, 53, 87, 87, 87, 53, 53, 63, 18, 7, 1, 11, 7, 7, 7, 11, 18, 18, 96, 96, 55, 55, 55, 96, 18, 11, 1, 23, 31, 31, 89, 89, 89, 31, 23, 68, 68, 52, 52, 52, 68, 23, 1, 7, 65].
is_balanced22:- fail.
get_string22(S):- S = "(65, (95, (14, (19, (), ()), (97, (90, (), ()), (96, (), ()))), (55, (53, (1, (45, (6, (), ()), ()), ()), (46, (), (53, (53, (), ()), (45, (), ())))), (34, (), (76, (), ())))), (7, (18, (4, (84, (), (20, (), ())), ()), (63, (88, (), ()), (53, (87, (), ()), ()))), (1, (11, (7, (), ()), (18, (), (96, (), (55, (), ())))), (23, (31, (), (89, (), ())), (68, (), (52, (), ()))))))".
build_tree23(BT):- BT = node(7, node(29, node(11, node(69, empty, empty), node(59, empty, node(5, empty, empty))), node(49, node(38, node(13, empty, empty), empty), node(84, node(12, empty, empty), empty))), node(68, node(36, node(34, empty, node(88, empty, empty)), node(35, node(19, empty, node(26, empty, empty)), empty)), node(11, node(8, node(80, empty, empty), node(88, empty, empty)), node(64, node(66, empty, empty), node(11, empty, node(30, node(91, empty, empty), empty)))))).
get_size23(N):- N = 27.
get_height23(N):- N = 7.
get_inorder23(L):- L = [69, 11, 59, 5, 29, 13, 38, 49, 12, 84, 7, 34, 88, 36, 19, 26, 35, 68, 80, 8, 88, 11, 66, 64, 11, 91, 30].
get_postorder23(L):- L = [69, 5, 59, 11, 13, 38, 12, 84, 49, 29, 88, 34, 26, 19, 35, 36, 80, 88, 8, 66, 91, 30, 11, 64, 11, 68, 7].
get_preorder23(L):- L = [7, 29, 11, 69, 59, 5, 49, 38, 13, 84, 12, 68, 36, 34, 88, 35, 19, 26, 11, 8, 80, 88, 64, 66, 11, 30, 91].
get_tour23(L):- L = [7, 29, 11, 69, 69, 69, 11, 59, 59, 5, 5, 5, 59, 11, 29, 49, 38, 13, 13, 13, 38, 38, 49, 84, 12, 12, 12, 84, 84, 49, 29, 7, 68, 36, 34, 34, 88, 88, 88, 34, 36, 35, 19, 19, 26, 26, 26, 19, 35, 35, 36, 68, 11, 8, 80, 80, 80, 8, 88, 88, 88, 8, 11, 64, 66, 66, 66, 64, 11, 11, 30, 91, 91, 91, 30, 30, 11, 64, 11, 68, 7].
is_balanced23:- fail.
get_string23(S):- S = "(7, (29, (11, (69, (), ()), (59, (), (5, (), ()))), (49, (38, (13, (), ()), ()), (84, (12, (), ()), ()))), (68, (36, (34, (), (88, (), ())), (35, (19, (), (26, (), ())), ())), (11, (8, (80, (), ()), (88, (), ())), (64, (66, (), ()), (11, (), (30, (91, (), ()), ()))))))".
build_tree24(BT):- BT = node(76, node(34, node(86, node(51, empty, node(83, empty, empty)), node(92, node(10, empty, empty), empty)), node(78, node(43, node(36, empty, empty), node(37, empty, empty)), node(30, empty, empty))), node(4, node(19, node(35, node(77, node(3, empty, empty), empty), node(90, empty, empty)), node(41, node(64, node(62, empty, empty), node(64, empty, empty)), empty)), node(41, node(94, empty, empty), node(59, empty, empty)))).
get_size24(N):- N = 25.
get_height24(N):- N = 6.
get_inorder24(L):- L = [51, 83, 86, 10, 92, 34, 36, 43, 37, 78, 30, 76, 3, 77, 35, 90, 19, 62, 64, 64, 41, 4, 94, 41, 59].
get_postorder24(L):- L = [83, 51, 10, 92, 86, 36, 37, 43, 30, 78, 34, 3, 77, 90, 35, 62, 64, 64, 41, 19, 94, 59, 41, 4, 76].
get_preorder24(L):- L = [76, 34, 86, 51, 83, 92, 10, 78, 43, 36, 37, 30, 4, 19, 35, 77, 3, 90, 41, 64, 62, 64, 41, 94, 59].
get_tour24(L):- L = [76, 34, 86, 51, 51, 83, 83, 83, 51, 86, 92, 10, 10, 10, 92, 92, 86, 34, 78, 43, 36, 36, 36, 43, 37, 37, 37, 43, 78, 30, 30, 30, 78, 34, 76, 4, 19, 35, 77, 3, 3, 3, 77, 77, 35, 90, 90, 90, 35, 19, 41, 64, 62, 62, 62, 64, 64, 64, 64, 64, 41, 41, 19, 4, 41, 94, 94, 94, 41, 59, 59, 59, 41, 4, 76].
is_balanced24:- fail.
get_string24(S):- S = "(76, (34, (86, (51, (), (83, (), ())), (92, (10, (), ()), ())), (78, (43, (36, (), ()), (37, (), ())), (30, (), ()))), (4, (19, (35, (77, (3, (), ()), ()), (90, (), ())), (41, (64, (62, (), ()), (64, (), ())), ())), (41, (94, (), ()), (59, (), ()))))".
build_tree25(BT):- BT = node(9, node(91, node(6, node(74, node(14, empty, empty), empty), node(51, node(6, node(58, empty, empty), node(32, empty, empty)), node(92, node(8, empty, empty), empty))), node(56, node(23, node(51, empty, empty), node(37, empty, node(75, empty, empty))), node(45, node(13, node(64, empty, empty), empty), node(36, node(98, empty, empty), node(27, empty, empty))))), node(92, node(66, node(74, empty, empty), node(90, node(3, empty, node(32, empty, empty)), empty)), node(12, node(64, node(59, empty, empty), node(34, empty, empty)), node(69, node(45, node(49, empty, empty), empty), empty)))).
get_size25(N):- N = 35.
get_height25(N):- N = 6.
get_inorder25(L):- L = [14, 74, 6, 58, 6, 32, 51, 8, 92, 91, 51, 23, 37, 75, 56, 64, 13, 45, 98, 36, 27, 9, 74, 66, 3, 32, 90, 92, 59, 64, 34, 12, 49, 45, 69].
get_postorder25(L):- L = [14, 74, 58, 32, 6, 8, 92, 51, 6, 51, 75, 37, 23, 64, 13, 98, 27, 36, 45, 56, 91, 74, 32, 3, 90, 66, 59, 34, 64, 49, 45, 69, 12, 92, 9].
get_preorder25(L):- L = [9, 91, 6, 74, 14, 51, 6, 58, 32, 92, 8, 56, 23, 51, 37, 75, 45, 13, 64, 36, 98, 27, 92, 66, 74, 90, 3, 32, 12, 64, 59, 34, 69, 45, 49].
get_tour25(L):- L = [9, 91, 6, 74, 14, 14, 14, 74, 74, 6, 51, 6, 58, 58, 58, 6, 32, 32, 32, 6, 51, 92, 8, 8, 8, 92, 92, 51, 6, 91, 56, 23, 51, 51, 51, 23, 37, 37, 75, 75, 75, 37, 23, 56, 45, 13, 64, 64, 64, 13, 13, 45, 36, 98, 98, 98, 36, 27, 27, 27, 36, 45, 56, 91, 9, 92, 66, 74, 74, 74, 66, 90, 3, 3, 32, 32, 32, 3, 90, 90, 66, 92, 12, 64, 59, 59, 59, 64, 34, 34, 34, 64, 12, 69, 45, 49, 49, 49, 45, 45, 69, 69, 12, 92, 9].
is_balanced25:- fail.
get_string25(S):- S = "(9, (91, (6, (74, (14, (), ()), ()), (51, (6, (58, (), ()), (32, (), ())), (92, (8, (), ()), ()))), (56, (23, (51, (), ()), (37, (), (75, (), ()))), (45, (13, (64, (), ()), ()), (36, (98, (), ()), (27, (), ()))))), (92, (66, (74, (), ()), (90, (3, (), (32, (), ())), ())), (12, (64, (59, (), ()), (34, (), ())), (69, (45, (49, (), ()), ()), ()))))".
build_tree26(BT):- BT = node(78, node(11, node(23, node(40, node(89, empty, empty), node(5, empty, empty)), node(45, empty, empty)), node(28, node(37, node(72, empty, empty), empty), node(25, empty, node(58, empty, empty)))), node(59, node(16, node(96, node(56, empty, node(77, empty, empty)), node(82, empty, empty)), node(12, node(32, empty, empty), node(99, node(97, empty, empty), empty))), node(12, node(82, node(24, empty, empty), node(74, empty, empty)), node(23, empty, empty)))).
get_size26(N):- N = 27.
get_height26(N):- N = 6.
get_inorder26(L):- L = [89, 40, 5, 23, 45, 11, 72, 37, 28, 25, 58, 78, 56, 77, 96, 82, 16, 32, 12, 97, 99, 59, 24, 82, 74, 12, 23].
get_postorder26(L):- L = [89, 5, 40, 45, 23, 72, 37, 58, 25, 28, 11, 77, 56, 82, 96, 32, 97, 99, 12, 16, 24, 74, 82, 23, 12, 59, 78].
get_preorder26(L):- L = [78, 11, 23, 40, 89, 5, 45, 28, 37, 72, 25, 58, 59, 16, 96, 56, 77, 82, 12, 32, 99, 97, 12, 82, 24, 74, 23].
get_tour26(L):- L = [78, 11, 23, 40, 89, 89, 89, 40, 5, 5, 5, 40, 23, 45, 45, 45, 23, 11, 28, 37, 72, 72, 72, 37, 37, 28, 25, 25, 58, 58, 58, 25, 28, 11, 78, 59, 16, 96, 56, 56, 77, 77, 77, 56, 96, 82, 82, 82, 96, 16, 12, 32, 32, 32, 12, 99, 97, 97, 97, 99, 99, 12, 16, 59, 12, 82, 24, 24, 24, 82, 74, 74, 74, 82, 12, 23, 23, 23, 12, 59, 78].
is_balanced26.
get_string26(S):- S = "(78, (11, (23, (40, (89, (), ()), (5, (), ())), (45, (), ())), (28, (37, (72, (), ()), ()), (25, (), (58, (), ())))), (59, (16, (96, (56, (), (77, (), ())), (82, (), ())), (12, (32, (), ()), (99, (97, (), ()), ()))), (12, (82, (24, (), ()), (74, (), ())), (23, (), ()))))".
build_tree27(BT):- BT = node(92, node(61, node(99, node(83, empty, node(31, node(30, empty, empty), node(60, empty, empty))), node(72, node(33, empty, empty), empty)), node(98, node(74, node(82, node(11, empty, empty), empty), node(3, node(64, empty, empty), empty)), node(52, node(13, empty, empty), empty))), node(72, node(42, node(95, empty, empty), node(15, empty, empty)), node(44, node(36, empty, empty), node(63, empty, empty)))).
get_size27(N):- N = 24.
get_height27(N):- N = 6.
get_inorder27(L):- L = [83, 30, 31, 60, 99, 33, 72, 61, 11, 82, 74, 64, 3, 98, 13, 52, 92, 95, 42, 15, 72, 36, 44, 63].
get_postorder27(L):- L = [30, 60, 31, 83, 33, 72, 99, 11, 82, 64, 3, 74, 13, 52, 98, 61, 95, 15, 42, 36, 63, 44, 72, 92].
get_preorder27(L):- L = [92, 61, 99, 83, 31, 30, 60, 72, 33, 98, 74, 82, 11, 3, 64, 52, 13, 72, 42, 95, 15, 44, 36, 63].
get_tour27(L):- L = [92, 61, 99, 83, 83, 31, 30, 30, 30, 31, 60, 60, 60, 31, 83, 99, 72, 33, 33, 33, 72, 72, 99, 61, 98, 74, 82, 11, 11, 11, 82, 82, 74, 3, 64, 64, 64, 3, 3, 74, 98, 52, 13, 13, 13, 52, 52, 98, 61, 92, 72, 42, 95, 95, 95, 42, 15, 15, 15, 42, 72, 44, 36, 36, 36, 44, 63, 63, 63, 44, 72, 92].
is_balanced27:- fail.
get_string27(S):- S = "(92, (61, (99, (83, (), (31, (30, (), ()), (60, (), ()))), (72, (33, (), ()), ())), (98, (74, (82, (11, (), ()), ()), (3, (64, (), ()), ())), (52, (13, (), ()), ()))), (72, (42, (95, (), ()), (15, (), ())), (44, (36, (), ()), (63, (), ()))))".
build_tree28(BT):- BT = node(47, node(81, node(63, node(77, empty, node(70, empty, empty)), node(90, empty, node(80, empty, empty))), node(91, node(89, node(71, node(1, empty, empty), empty), node(66, empty, empty)), node(51, empty, node(93, empty, empty)))), node(86, node(74, node(70, node(27, empty, empty), empty), node(96, node(89, node(19, empty, empty), empty), empty)), node(22, node(39, node(9, empty, node(7, empty, empty)), node(53, empty, empty)), node(9, node(68, empty, empty), node(4, empty, node(40, empty, empty)))))).
get_size28(N):- N = 30.
get_height28(N):- N = 6.
get_inorder28(L):- L = [77, 70, 63, 90, 80, 81, 1, 71, 89, 66, 91, 51, 93, 47, 27, 70, 74, 19, 89, 96, 86, 9, 7, 39, 53, 22, 68, 9, 4, 40].
get_postorder28(L):- L = [70, 77, 80, 90, 63, 1, 71, 66, 89, 93, 51, 91, 81, 27, 70, 19, 89, 96, 74, 7, 9, 53, 39, 68, 40, 4, 9, 22, 86, 47].
get_preorder28(L):- L = [47, 81, 63, 77, 70, 90, 80, 91, 89, 71, 1, 66, 51, 93, 86, 74, 70, 27, 96, 89, 19, 22, 39, 9, 7, 53, 9, 68, 4, 40].
get_tour28(L):- L = [47, 81, 63, 77, 77, 70, 70, 70, 77, 63, 90, 90, 80, 80, 80, 90, 63, 81, 91, 89, 71, 1, 1, 1, 71, 71, 89, 66, 66, 66, 89, 91, 51, 51, 93, 93, 93, 51, 91, 81, 47, 86, 74, 70, 27, 27, 27, 70, 70, 74, 96, 89, 19, 19, 19, 89, 89, 96, 96, 74, 86, 22, 39, 9, 9, 7, 7, 7, 9, 39, 53, 53, 53, 39, 22, 9, 68, 68, 68, 9, 4, 4, 40, 40, 40, 4, 9, 22, 86, 47].
is_balanced28:- fail.
get_string28(S):- S = "(47, (81, (63, (77, (), (70, (), ())), (90, (), (80, (), ()))), (91, (89, (71, (1, (), ()), ()), (66, (), ())), (51, (), (93, (), ())))), (86, (74, (70, (27, (), ()), ()), (96, (89, (19, (), ()), ()), ())), (22, (39, (9, (), (7, (), ())), (53, (), ())), (9, (68, (), ()), (4, (), (40, (), ()))))))".
build_tree29(BT):- BT = node(69, node(45, node(49, node(44, node(46, empty, empty), node(49, empty, node(96, node(23, empty, empty), empty))), node(67, empty, node(6, node(71, empty, empty), node(54, empty, empty)))), node(79, node(72, empty, empty), node(98, node(97, empty, empty), node(53, node(14, empty, empty), empty)))), node(98, node(25, node(2, node(53, empty, empty), empty), node(87, node(69, empty, node(42, empty, empty)), node(96, node(71, node(22, empty, empty), empty), empty))), node(61, node(15, node(14, node(38, node(50, empty, empty), empty), empty), node(48, empty, empty)), empty))).
get_size29(N):- N = 34.
get_height29(N):- N = 7.
get_inorder29(L):- L = [46, 44, 49, 23, 96, 49, 67, 71, 6, 54, 45, 72, 79, 97, 98, 14, 53, 69, 53, 2, 25, 69, 42, 87, 22, 71, 96, 98, 50, 38, 14, 15, 48, 61].
get_postorder29(L):- L = [46, 23, 96, 49, 44, 71, 54, 6, 67, 49, 72, 97, 14, 53, 98, 79, 45, 53, 2, 42, 69, 22, 71, 96, 87, 25, 50, 38, 14, 48, 15, 61, 98, 69].
get_preorder29(L):- L = [69, 45, 49, 44, 46, 49, 96, 23, 67, 6, 71, 54, 79, 72, 98, 97, 53, 14, 98, 25, 2, 53, 87, 69, 42, 96, 71, 22, 61, 15, 14, 38, 50, 48].
get_tour29(L):- L = [69, 45, 49, 44, 46, 46, 46, 44, 49, 49, 96, 23, 23, 23, 96, 96, 49, 44, 49, 67, 67, 6, 71, 71, 71, 6, 54, 54, 54, 6, 67, 49, 45, 79, 72, 72, 72, 79, 98, 97, 97, 97, 98, 53, 14, 14, 14, 53, 53, 98, 79, 45, 69, 98, 25, 2, 53, 53, 53, 2, 2, 25, 87, 69, 69, 42, 42, 42, 69, 87, 96, 71, 22, 22, 22, 71, 71, 96, 96, 87, 25, 98, 61, 15, 14, 38, 50, 50, 50, 38, 38, 14, 14, 15, 48, 48, 48, 15, 61, 61, 98, 69].
is_balanced29:- fail.
get_string29(S):- S = "(69, (45, (49, (44, (46, (), ()), (49, (), (96, (23, (), ()), ()))), (67, (), (6, (71, (), ()), (54, (), ())))), (79, (72, (), ()), (98, (97, (), ()), (53, (14, (), ()), ())))), (98, (25, (2, (53, (), ()), ()), (87, (69, (), (42, (), ())), (96, (71, (22, (), ()), ()), ()))), (61, (15, (14, (38, (50, (), ()), ()), ()), (48, (), ())), ())))".
build_tree30(BT):- BT = node(14, node(78, node(47, node(77, node(51, empty, node(84, empty, node(81, empty, empty))), node(84, empty, empty)), node(33, empty, empty)), node(61, node(39, empty, node(5, node(52, empty, empty), empty)), node(94, empty, node(93, empty, node(76, empty, empty))))), node(98, node(1, empty, empty), node(90, node(85, empty, empty), node(29, node(95, empty, empty), node(10, node(31, empty, empty), empty))))).
get_size30(N):- N = 24.
get_height30(N):- N = 7.
get_inorder30(L):- L = [51, 84, 81, 77, 84, 47, 33, 78, 39, 52, 5, 61, 94, 93, 76, 14, 1, 98, 85, 90, 95, 29, 31, 10].
get_postorder30(L):- L = [81, 84, 51, 84, 77, 33, 47, 52, 5, 39, 76, 93, 94, 61, 78, 1, 85, 95, 31, 10, 29, 90, 98, 14].
get_preorder30(L):- L = [14, 78, 47, 77, 51, 84, 81, 84, 33, 61, 39, 5, 52, 94, 93, 76, 98, 1, 90, 85, 29, 95, 10, 31].
get_tour30(L):- L = [14, 78, 47, 77, 51, 51, 84, 84, 81, 81, 81, 84, 51, 77, 84, 84, 84, 77, 47, 33, 33, 33, 47, 78, 61, 39, 39, 5, 52, 52, 52, 5, 5, 39, 61, 94, 94, 93, 93, 76, 76, 76, 93, 94, 61, 78, 14, 98, 1, 1, 1, 98, 90, 85, 85, 85, 90, 29, 95, 95, 95, 29, 10, 31, 31, 31, 10, 10, 29, 90, 98, 14].
is_balanced30:- fail.
get_string30(S):- S = "(14, (78, (47, (77, (51, (), (84, (), (81, (), ()))), (84, (), ())), (33, (), ())), (61, (39, (), (5, (52, (), ()), ())), (94, (), (93, (), (76, (), ()))))), (98, (1, (), ()), (90, (85, (), ()), (29, (95, (), ()), (10, (31, (), ()), ())))))".
build_tree31(BT):- BT = node(1, node(38, node(81, node(21, empty, empty), node(52, empty, node(85, empty, empty))), node(98, node(48, node(12, empty, empty), empty), node(52, empty, node(19, empty, empty)))), node(11, node(20, node(31, node(45, node(89, empty, empty), node(55, empty, empty)), empty), node(95, empty, node(17, empty, empty))), node(78, node(60, node(35, empty, empty), empty), node(37, empty, empty)))).
get_size31(N):- N = 23.
get_height31(N):- N = 6.
get_inorder31(L):- L = [21, 81, 52, 85, 38, 12, 48, 98, 52, 19, 1, 89, 45, 55, 31, 20, 95, 17, 11, 35, 60, 78, 37].
get_postorder31(L):- L = [21, 85, 52, 81, 12, 48, 19, 52, 98, 38, 89, 55, 45, 31, 17, 95, 20, 35, 60, 37, 78, 11, 1].
get_preorder31(L):- L = [1, 38, 81, 21, 52, 85, 98, 48, 12, 52, 19, 11, 20, 31, 45, 89, 55, 95, 17, 78, 60, 35, 37].
get_tour31(L):- L = [1, 38, 81, 21, 21, 21, 81, 52, 52, 85, 85, 85, 52, 81, 38, 98, 48, 12, 12, 12, 48, 48, 98, 52, 52, 19, 19, 19, 52, 98, 38, 1, 11, 20, 31, 45, 89, 89, 89, 45, 55, 55, 55, 45, 31, 31, 20, 95, 95, 17, 17, 17, 95, 20, 11, 78, 60, 35, 35, 35, 60, 60, 78, 37, 37, 37, 78, 11, 1].
is_balanced31:- fail.
get_string31(S):- S = "(1, (38, (81, (21, (), ()), (52, (), (85, (), ()))), (98, (48, (12, (), ()), ()), (52, (), (19, (), ())))), (11, (20, (31, (45, (89, (), ()), (55, (), ())), ()), (95, (), (17, (), ()))), (78, (60, (35, (), ()), ()), (37, (), ()))))".
build_tree32(BT):- BT = node(50, node(4, node(89, node(84, node(87, empty, empty), empty), empty), node(15, node(54, empty, node(83, empty, empty)), node(37, node(91, node(38, empty, empty), node(57, empty, empty)), empty))), node(12, node(5, empty, node(25, node(23, empty, empty), node(35, empty, node(49, empty, empty)))), node(11, node(49, empty, node(77, empty, empty)), node(87, node(90, empty, empty), empty)))).
get_size32(N):- N = 23.
get_height32(N):- N = 6.
get_inorder32(L):- L = [87, 84, 89, 4, 54, 83, 15, 38, 91, 57, 37, 50, 5, 23, 25, 35, 49, 12, 49, 77, 11, 90, 87].
get_postorder32(L):- L = [87, 84, 89, 83, 54, 38, 57, 91, 37, 15, 4, 23, 49, 35, 25, 5, 77, 49, 90, 87, 11, 12, 50].
get_preorder32(L):- L = [50, 4, 89, 84, 87, 15, 54, 83, 37, 91, 38, 57, 12, 5, 25, 23, 35, 49, 11, 49, 77, 87, 90].
get_tour32(L):- L = [50, 4, 89, 84, 87, 87, 87, 84, 84, 89, 89, 4, 15, 54, 54, 83, 83, 83, 54, 15, 37, 91, 38, 38, 38, 91, 57, 57, 57, 91, 37, 37, 15, 4, 50, 12, 5, 5, 25, 23, 23, 23, 25, 35, 35, 49, 49, 49, 35, 25, 5, 12, 11, 49, 49, 77, 77, 77, 49, 11, 87, 90, 90, 90, 87, 87, 11, 12, 50].
is_balanced32:- fail.
get_string32(S):- S = "(50, (4, (89, (84, (87, (), ()), ()), ()), (15, (54, (), (83, (), ())), (37, (91, (38, (), ()), (57, (), ())), ()))), (12, (5, (), (25, (23, (), ()), (35, (), (49, (), ())))), (11, (49, (), (77, (), ())), (87, (90, (), ()), ()))))".
build_tree33(BT):- BT = node(60, node(92, node(13, node(19, empty, node(84, empty, node(93, empty, empty))), node(25, node(30, node(46, empty, empty), empty), node(58, node(15, empty, empty), empty))), node(35, node(63, node(11, node(87, empty, node(23, empty, empty)), empty), node(89, node(23, empty, empty), empty)), node(79, empty, node(33, node(89, empty, empty), node(70, empty, empty))))), node(24, node(96, node(19, node(57, empty, empty), empty), node(40, empty, node(38, empty, empty))), node(73, node(26, node(17, empty, empty), empty), node(79, empty, node(46, empty, empty))))).
get_size33(N):- N = 33.
get_height33(N):- N = 7.
get_inorder33(L):- L = [19, 84, 93, 13, 46, 30, 25, 15, 58, 92, 87, 23, 11, 63, 23, 89, 35, 79, 89, 33, 70, 60, 57, 19, 96, 40, 38, 24, 17, 26, 73, 79, 46].
get_postorder33(L):- L = [93, 84, 19, 46, 30, 15, 58, 25, 13, 23, 87, 11, 23, 89, 63, 89, 70, 33, 79, 35, 92, 57, 19, 38, 40, 96, 17, 26, 46, 79, 73, 24, 60].
get_preorder33(L):- L = [60, 92, 13, 19, 84, 93, 25, 30, 46, 58, 15, 35, 63, 11, 87, 23, 89, 23, 79, 33, 89, 70, 24, 96, 19, 57, 40, 38, 73, 26, 17, 79, 46].
get_tour33(L):- L = [60, 92, 13, 19, 19, 84, 84, 93, 93, 93, 84, 19, 13, 25, 30, 46, 46, 46, 30, 30, 25, 58, 15, 15, 15, 58, 58, 25, 13, 92, 35, 63, 11, 87, 87, 23, 23, 23, 87, 11, 11, 63, 89, 23, 23, 23, 89, 89, 63, 35, 79, 79, 33, 89, 89, 89, 33, 70, 70, 70, 33, 79, 35, 92, 60, 24, 96, 19, 57, 57, 57, 19, 19, 96, 40, 40, 38, 38, 38, 40, 96, 24, 73, 26, 17, 17, 17, 26, 26, 73, 79, 79, 46, 46, 46, 79, 73, 24, 60].
is_balanced33:- fail.
get_string33(S):- S = "(60, (92, (13, (19, (), (84, (), (93, (), ()))), (25, (30, (46, (), ()), ()), (58, (15, (), ()), ()))), (35, (63, (11, (87, (), (23, (), ())), ()), (89, (23, (), ()), ())), (79, (), (33, (89, (), ()), (70, (), ()))))), (24, (96, (19, (57, (), ()), ()), (40, (), (38, (), ()))), (73, (26, (17, (), ()), ()), (79, (), (46, (), ())))))".
build_tree34(BT):- BT = node(44, node(11, node(34, empty, node(31, node(28, empty, empty), empty)), node(99, node(7, empty, node(99, node(13, empty, empty), node(36, empty, empty))), node(49, empty, empty))), node(12, node(76, node(88, node(81, empty, empty), node(57, empty, empty)), node(14, empty, empty)), node(67, node(48, node(48, empty, node(3, empty, empty)), empty), node(23, empty, empty)))).
get_size34(N):- N = 22.
get_height34(N):- N = 6.
get_inorder34(L):- L = [34, 28, 31, 11, 7, 13, 99, 36, 99, 49, 44, 81, 88, 57, 76, 14, 12, 48, 3, 48, 67, 23].
get_postorder34(L):- L = [28, 31, 34, 13, 36, 99, 7, 49, 99, 11, 81, 57, 88, 14, 76, 3, 48, 48, 23, 67, 12, 44].
get_preorder34(L):- L = [44, 11, 34, 31, 28, 99, 7, 99, 13, 36, 49, 12, 76, 88, 81, 57, 14, 67, 48, 48, 3, 23].
get_tour34(L):- L = [44, 11, 34, 34, 31, 28, 28, 28, 31, 31, 34, 11, 99, 7, 7, 99, 13, 13, 13, 99, 36, 36, 36, 99, 7, 99, 49, 49, 49, 99, 11, 44, 12, 76, 88, 81, 81, 81, 88, 57, 57, 57, 88, 76, 14, 14, 14, 76, 12, 67, 48, 48, 48, 3, 3, 3, 48, 48, 48, 67, 23, 23, 23, 67, 12, 44].
is_balanced34:- fail.
get_string34(S):- S = "(44, (11, (34, (), (31, (28, (), ()), ())), (99, (7, (), (99, (13, (), ()), (36, (), ()))), (49, (), ()))), (12, (76, (88, (81, (), ()), (57, (), ())), (14, (), ())), (67, (48, (48, (), (3, (), ())), ()), (23, (), ()))))".
build_tree35(BT):- BT = node(34, node(7, node(41, node(16, node(58, node(13, empty, empty), node(35, empty, empty)), empty), node(86, empty, empty)), node(80, node(58, node(9, node(58, empty, empty), node(60, empty, empty)), empty), node(28, empty, node(32, empty, empty)))), node(87, node(44, node(12, empty, node(47, empty, empty)), node(37, node(76, empty, empty), empty)), node(72, node(60, node(66, empty, empty), node(72, node(46, empty, empty), empty)), node(30, node(16, empty, empty), empty)))).
get_size35(N):- N = 28.
get_height35(N):- N = 6.
get_inorder35(L):- L = [13, 58, 35, 16, 41, 86, 7, 58, 9, 60, 58, 80, 28, 32, 34, 12, 47, 44, 76, 37, 87, 66, 60, 46, 72, 72, 16, 30].
get_postorder35(L):- L = [13, 35, 58, 16, 86, 41, 58, 60, 9, 58, 32, 28, 80, 7, 47, 12, 76, 37, 44, 66, 46, 72, 60, 16, 30, 72, 87, 34].
get_preorder35(L):- L = [34, 7, 41, 16, 58, 13, 35, 86, 80, 58, 9, 58, 60, 28, 32, 87, 44, 12, 47, 37, 76, 72, 60, 66, 72, 46, 30, 16].
get_tour35(L):- L = [34, 7, 41, 16, 58, 13, 13, 13, 58, 35, 35, 35, 58, 16, 16, 41, 86, 86, 86, 41, 7, 80, 58, 9, 58, 58, 58, 9, 60, 60, 60, 9, 58, 58, 80, 28, 28, 32, 32, 32, 28, 80, 7, 34, 87, 44, 12, 12, 47, 47, 47, 12, 44, 37, 76, 76, 76, 37, 37, 44, 87, 72, 60, 66, 66, 66, 60, 72, 46, 46, 46, 72, 72, 60, 72, 30, 16, 16, 16, 30, 30, 72, 87, 34].
is_balanced35:- fail.
get_string35(S):- S = "(34, (7, (41, (16, (58, (13, (), ()), (35, (), ())), ()), (86, (), ())), (80, (58, (9, (58, (), ()), (60, (), ())), ()), (28, (), (32, (), ())))), (87, (44, (12, (), (47, (), ())), (37, (76, (), ()), ())), (72, (60, (66, (), ()), (72, (46, (), ()), ())), (30, (16, (), ()), ()))))".
build_tree36(BT):- BT = node(65, node(4, node(84, node(72, empty, node(24, node(87, empty, empty), empty)), node(38, node(6, empty, node(98, empty, empty)), node(14, node(59, empty, empty), empty))), node(99, node(52, node(25, node(65, empty, empty), empty), node(11, empty, node(95, empty, node(75, empty, node(24, empty, empty))))), node(45, empty, empty))), node(71, node(43, node(13, empty, node(65, empty, node(78, empty, empty))), node(77, empty, node(31, empty, node(52, empty, empty)))), node(31, node(74, node(30, node(44, empty, empty), empty), node(22, node(18, empty, empty), node(26, empty, empty))), node(3, empty, node(16, empty, empty))))).
get_size36(N):- N = 37.
get_height36(N):- N = 8.
get_inorder36(L):- L = [72, 87, 24, 84, 6, 98, 38, 59, 14, 4, 65, 25, 52, 11, 95, 75, 24, 99, 45, 65, 13, 65, 78, 43, 77, 31, 52, 71, 44, 30, 74, 18, 22, 26, 31, 3, 16].
get_postorder36(L):- L = [87, 24, 72, 98, 6, 59, 14, 38, 84, 65, 25, 24, 75, 95, 11, 52, 45, 99, 4, 78, 65, 13, 52, 31, 77, 43, 44, 30, 18, 26, 22, 74, 16, 3, 31, 71, 65].
get_preorder36(L):- L = [65, 4, 84, 72, 24, 87, 38, 6, 98, 14, 59, 99, 52, 25, 65, 11, 95, 75, 24, 45, 71, 43, 13, 65, 78, 77, 31, 52, 31, 74, 30, 44, 22, 18, 26, 3, 16].
get_tour36(L):- L = [65, 4, 84, 72, 72, 24, 87, 87, 87, 24, 24, 72, 84, 38, 6, 6, 98, 98, 98, 6, 38, 14, 59, 59, 59, 14, 14, 38, 84, 4, 99, 52, 25, 65, 65, 65, 25, 25, 52, 11, 11, 95, 95, 75, 75, 24, 24, 24, 75, 95, 11, 52, 99, 45, 45, 45, 99, 4, 65, 71, 43, 13, 13, 65, 65, 78, 78, 78, 65, 13, 43, 77, 77, 31, 31, 52, 52, 52, 31, 77, 43, 71, 31, 74, 30, 44, 44, 44, 30, 30, 74, 22, 18, 18, 18, 22, 26, 26, 26, 22, 74, 31, 3, 3, 16, 16, 16, 3, 31, 71, 65].
is_balanced36:- fail.
get_string36(S):- S = "(65, (4, (84, (72, (), (24, (87, (), ()), ())), (38, (6, (), (98, (), ())), (14, (59, (), ()), ()))), (99, (52, (25, (65, (), ()), ()), (11, (), (95, (), (75, (), (24, (), ()))))), (45, (), ()))), (71, (43, (13, (), (65, (), (78, (), ()))), (77, (), (31, (), (52, (), ())))), (31, (74, (30, (44, (), ()), ()), (22, (18, (), ()), (26, (), ()))), (3, (), (16, (), ())))))".
build_tree37(BT):- BT = node(41, node(66, node(28, node(35, node(66, node(13, empty, empty), empty), empty), node(8, node(62, empty, empty), empty)), node(76, node(69, empty, node(3, empty, empty)), node(16, node(28, empty, empty), node(7, empty, node(42, empty, empty))))), node(60, node(16, node(9, empty, node(4, empty, empty)), node(10, node(87, node(93, empty, empty), node(73, empty, empty)), node(69, empty, empty))), node(50, node(52, node(92, node(39, empty, empty), node(5, empty, empty)), node(84, empty, node(23, empty, empty))), node(62, empty, node(51, node(57, node(69, empty, empty), empty), node(4, empty, empty)))))).
get_size37(N):- N = 36.
get_height37(N):- N = 7.
get_inorder37(L):- L = [13, 66, 35, 28, 62, 8, 66, 69, 3, 76, 28, 16, 7, 42, 41, 9, 4, 16, 93, 87, 73, 10, 69, 60, 39, 92, 5, 52, 84, 23, 50, 62, 69, 57, 51, 4].
get_postorder37(L):- L = [13, 66, 35, 62, 8, 28, 3, 69, 28, 42, 7, 16, 76, 66, 4, 9, 93, 73, 87, 69, 10, 16, 39, 5, 92, 23, 84, 52, 69, 57, 4, 51, 62, 50, 60, 41].
get_preorder37(L):- L = [41, 66, 28, 35, 66, 13, 8, 62, 76, 69, 3, 16, 28, 7, 42, 60, 16, 9, 4, 10, 87, 93, 73, 69, 50, 52, 92, 39, 5, 84, 23, 62, 51, 57, 69, 4].
get_tour37(L):- L = [41, 66, 28, 35, 66, 13, 13, 13, 66, 66, 35, 35, 28, 8, 62, 62, 62, 8, 8, 28, 66, 76, 69, 69, 3, 3, 3, 69, 76, 16, 28, 28, 28, 16, 7, 7, 42, 42, 42, 7, 16, 76, 66, 41, 60, 16, 9, 9, 4, 4, 4, 9, 16, 10, 87, 93, 93, 93, 87, 73, 73, 73, 87, 10, 69, 69, 69, 10, 16, 60, 50, 52, 92, 39, 39, 39, 92, 5, 5, 5, 92, 52, 84, 84, 23, 23, 23, 84, 52, 50, 62, 62, 51, 57, 69, 69, 69, 57, 57, 51, 4, 4, 4, 51, 62, 50, 60, 41].
is_balanced37:- fail.
get_string37(S):- S = "(41, (66, (28, (35, (66, (13, (), ()), ()), ()), (8, (62, (), ()), ())), (76, (69, (), (3, (), ())), (16, (28, (), ()), (7, (), (42, (), ()))))), (60, (16, (9, (), (4, (), ())), (10, (87, (93, (), ()), (73, (), ())), (69, (), ()))), (50, (52, (92, (39, (), ()), (5, (), ())), (84, (), (23, (), ()))), (62, (), (51, (57, (69, (), ()), ()), (4, (), ()))))))".
build_tree38(BT):- BT = node(55, node(76, node(63, node(94, empty, node(94, empty, node(22, empty, empty))), node(75, node(3, node(36, empty, empty), node(41, empty, empty)), node(9, empty, empty))), node(82, node(20, empty, node(87, empty, node(25, empty, node(86, empty, empty)))), node(3, empty, node(91, empty, empty)))), node(20, node(26, node(5, empty, node(85, empty, node(84, empty, empty))), node(77, node(76, node(56, empty, empty), node(58, empty, empty)), empty)), node(42, node(25, empty, empty), node(38, node(22, empty, empty), node(29, empty, empty))))).
get_size38(N):- N = 32.
get_height38(N):- N = 7.
get_inorder38(L):- L = [94, 94, 22, 63, 36, 3, 41, 75, 9, 76, 20, 87, 25, 86, 82, 3, 91, 55, 5, 85, 84, 26, 56, 76, 58, 77, 20, 25, 42, 22, 38, 29].
get_postorder38(L):- L = [22, 94, 94, 36, 41, 3, 9, 75, 63, 86, 25, 87, 20, 91, 3, 82, 76, 84, 85, 5, 56, 58, 76, 77, 26, 25, 22, 29, 38, 42, 20, 55].
get_preorder38(L):- L = [55, 76, 63, 94, 94, 22, 75, 3, 36, 41, 9, 82, 20, 87, 25, 86, 3, 91, 20, 26, 5, 85, 84, 77, 76, 56, 58, 42, 25, 38, 22, 29].
get_tour38(L):- L = [55, 76, 63, 94, 94, 94, 94, 22, 22, 22, 94, 94, 63, 75, 3, 36, 36, 36, 3, 41, 41, 41, 3, 75, 9, 9, 9, 75, 63, 76, 82, 20, 20, 87, 87, 25, 25, 86, 86, 86, 25, 87, 20, 82, 3, 3, 91, 91, 91, 3, 82, 76, 55, 20, 26, 5, 5, 85, 85, 84, 84, 84, 85, 5, 26, 77, 76, 56, 56, 56, 76, 58, 58, 58, 76, 77, 77, 26, 20, 42, 25, 25, 25, 42, 38, 22, 22, 22, 38, 29, 29, 29, 38, 42, 20, 55].
is_balanced38:- fail.
get_string38(S):- S = "(55, (76, (63, (94, (), (94, (), (22, (), ()))), (75, (3, (36, (), ()), (41, (), ())), (9, (), ()))), (82, (20, (), (87, (), (25, (), (86, (), ())))), (3, (), (91, (), ())))), (20, (26, (5, (), (85, (), (84, (), ()))), (77, (76, (56, (), ()), (58, (), ())), ())), (42, (25, (), ()), (38, (22, (), ()), (29, (), ())))))".
build_tree39(BT):- BT = node(79, node(68, node(55, node(2, node(55, empty, empty), node(59, node(86, empty, empty), empty)), node(82, empty, node(40, node(9, empty, empty), node(97, empty, empty)))), node(26, node(47, node(42, empty, empty), empty), node(89, node(22, node(95, empty, empty), node(76, empty, empty)), node(18, node(98, empty, empty), empty)))), node(16, node(99, node(93, node(56, empty, empty), node(88, empty, empty)), node(26, empty, node(76, empty, empty))), node(30, node(10, node(64, node(65, empty, empty), empty), node(74, empty, node(4, empty, empty))), node(36, node(16, empty, empty), node(76, empty, empty))))).
get_size39(N):- N = 36.
get_height39(N):- N = 6.
get_inorder39(L):- L = [55, 2, 86, 59, 55, 82, 9, 40, 97, 68, 42, 47, 26, 95, 22, 76, 89, 98, 18, 79, 56, 93, 88, 99, 26, 76, 16, 65, 64, 10, 74, 4, 30, 16, 36, 76].
get_postorder39(L):- L = [55, 86, 59, 2, 9, 97, 40, 82, 55, 42, 47, 95, 76, 22, 98, 18, 89, 26, 68, 56, 88, 93, 76, 26, 99, 65, 64, 4, 74, 10, 16, 76, 36, 30, 16, 79].
get_preorder39(L):- L = [79, 68, 55, 2, 55, 59, 86, 82, 40, 9, 97, 26, 47, 42, 89, 22, 95, 76, 18, 98, 16, 99, 93, 56, 88, 26, 76, 30, 10, 64, 65, 74, 4, 36, 16, 76].
get_tour39(L):- L = [79, 68, 55, 2, 55, 55, 55, 2, 59, 86, 86, 86, 59, 59, 2, 55, 82, 82, 40, 9, 9, 9, 40, 97, 97, 97, 40, 82, 55, 68, 26, 47, 42, 42, 42, 47, 47, 26, 89, 22, 95, 95, 95, 22, 76, 76, 76, 22, 89, 18, 98, 98, 98, 18, 18, 89, 26, 68, 79, 16, 99, 93, 56, 56, 56, 93, 88, 88, 88, 93, 99, 26, 26, 76, 76, 76, 26, 99, 16, 30, 10, 64, 65, 65, 65, 64, 64, 10, 74, 74, 4, 4, 4, 74, 10, 30, 36, 16, 16, 16, 36, 76, 76, 76, 36, 30, 16, 79].
is_balanced39:- fail.
get_string39(S):- S = "(79, (68, (55, (2, (55, (), ()), (59, (86, (), ()), ())), (82, (), (40, (9, (), ()), (97, (), ())))), (26, (47, (42, (), ()), ()), (89, (22, (95, (), ()), (76, (), ())), (18, (98, (), ()), ())))), (16, (99, (93, (56, (), ()), (88, (), ())), (26, (), (76, (), ()))), (30, (10, (64, (65, (), ()), ()), (74, (), (4, (), ()))), (36, (16, (), ()), (76, (), ())))))".
build_tree40(BT):- BT = node(32, node(7, node(32, empty, empty), node(63, empty, node(42, node(56, node(29, empty, empty), empty), node(64, node(34, empty, empty), node(24, empty, empty))))), node(2, node(2, node(12, empty, empty), node(49, node(35, empty, empty), node(44, node(77, empty, empty), empty))), node(14, node(38, node(82, node(90, empty, empty), node(93, empty, empty)), empty), node(33, empty, node(62, empty, empty))))).
get_size40(N):- N = 24.
get_height40(N):- N = 6.
get_inorder40(L):- L = [32, 7, 63, 29, 56, 42, 34, 64, 24, 32, 12, 2, 35, 49, 77, 44, 2, 90, 82, 93, 38, 14, 33, 62].
get_postorder40(L):- L = [32, 29, 56, 34, 24, 64, 42, 63, 7, 12, 35, 77, 44, 49, 2, 90, 93, 82, 38, 62, 33, 14, 2, 32].
get_preorder40(L):- L = [32, 7, 32, 63, 42, 56, 29, 64, 34, 24, 2, 2, 12, 49, 35, 44, 77, 14, 38, 82, 90, 93, 33, 62].
get_tour40(L):- L = [32, 7, 32, 32, 32, 7, 63, 63, 42, 56, 29, 29, 29, 56, 56, 42, 64, 34, 34, 34, 64, 24, 24, 24, 64, 42, 63, 7, 32, 2, 2, 12, 12, 12, 2, 49, 35, 35, 35, 49, 44, 77, 77, 77, 44, 44, 49, 2, 2, 14, 38, 82, 90, 90, 90, 82, 93, 93, 93, 82, 38, 38, 14, 33, 33, 62, 62, 62, 33, 14, 2, 32].
is_balanced40:- fail.
get_string40(S):- S = "(32, (7, (32, (), ()), (63, (), (42, (56, (29, (), ()), ()), (64, (34, (), ()), (24, (), ()))))), (2, (2, (12, (), ()), (49, (35, (), ()), (44, (77, (), ()), ()))), (14, (38, (82, (90, (), ()), (93, (), ())), ()), (33, (), (62, (), ())))))".
build_tree41(BT):- BT = node(91, node(93, node(15, node(48, node(33, empty, empty), node(1, node(23, empty, node(99, empty, empty)), empty)), node(27, empty, empty)), node(66, node(29, node(67, empty, empty), node(38, empty, empty)), node(24, node(18, empty, empty), node(77, empty, empty)))), node(71, node(35, node(29, empty, empty), node(74, node(90, empty, empty), node(67, empty, node(62, empty, empty)))), node(13, node(19, node(59, empty, empty), node(55, node(28, empty, empty), empty)), empty))).
get_size41(N):- N = 28.
get_height41(N):- N = 7.
get_inorder41(L):- L = [33, 48, 23, 99, 1, 15, 27, 93, 67, 29, 38, 66, 18, 24, 77, 91, 29, 35, 90, 74, 67, 62, 71, 59, 19, 28, 55, 13].
get_postorder41(L):- L = [33, 99, 23, 1, 48, 27, 15, 67, 38, 29, 18, 77, 24, 66, 93, 29, 90, 62, 67, 74, 35, 59, 28, 55, 19, 13, 71, 91].
get_preorder41(L):- L = [91, 93, 15, 48, 33, 1, 23, 99, 27, 66, 29, 67, 38, 24, 18, 77, 71, 35, 29, 74, 90, 67, 62, 13, 19, 59, 55, 28].
get_tour41(L):- L = [91, 93, 15, 48, 33, 33, 33, 48, 1, 23, 23, 99, 99, 99, 23, 1, 1, 48, 15, 27, 27, 27, 15, 93, 66, 29, 67, 67, 67, 29, 38, 38, 38, 29, 66, 24, 18, 18, 18, 24, 77, 77, 77, 24, 66, 93, 91, 71, 35, 29, 29, 29, 35, 74, 90, 90, 90, 74, 67, 67, 62, 62, 62, 67, 74, 35, 71, 13, 19, 59, 59, 59, 19, 55, 28, 28, 28, 55, 55, 19, 13, 13, 71, 91].
is_balanced41:- fail.
get_string41(S):- S = "(91, (93, (15, (48, (33, (), ()), (1, (23, (), (99, (), ())), ())), (27, (), ())), (66, (29, (67, (), ()), (38, (), ())), (24, (18, (), ()), (77, (), ())))), (71, (35, (29, (), ()), (74, (90, (), ()), (67, (), (62, (), ())))), (13, (19, (59, (), ()), (55, (28, (), ()), ())), ())))".
build_tree42(BT):- BT = node(13, node(86, node(99, node(99, node(63, empty, empty), empty), node(74, node(44, empty, empty), node(22, node(26, empty, empty), empty))), node(35, node(91, node(66, empty, empty), node(77, node(22, empty, node(56, empty, empty)), node(97, empty, empty))), node(5, node(78, empty, empty), node(89, empty, empty)))), node(95, node(69, node(56, empty, node(24, empty, empty)), node(62, node(19, empty, empty), node(2, empty, empty))), node(96, node(49, empty, node(34, empty, empty)), node(1, empty, node(31, node(26, empty, empty), node(80, empty, empty)))))).
get_size42(N):- N = 33.
get_height42(N):- N = 7.
get_inorder42(L):- L = [63, 99, 99, 44, 74, 26, 22, 86, 66, 91, 22, 56, 77, 97, 35, 78, 5, 89, 13, 56, 24, 69, 19, 62, 2, 95, 49, 34, 96, 1, 26, 31, 80].
get_postorder42(L):- L = [63, 99, 44, 26, 22, 74, 99, 66, 56, 22, 97, 77, 91, 78, 89, 5, 35, 86, 24, 56, 19, 2, 62, 69, 34, 49, 26, 80, 31, 1, 96, 95, 13].
get_preorder42(L):- L = [13, 86, 99, 99, 63, 74, 44, 22, 26, 35, 91, 66, 77, 22, 56, 97, 5, 78, 89, 95, 69, 56, 24, 62, 19, 2, 96, 49, 34, 1, 31, 26, 80].
get_tour42(L):- L = [13, 86, 99, 99, 63, 63, 63, 99, 99, 99, 74, 44, 44, 44, 74, 22, 26, 26, 26, 22, 22, 74, 99, 86, 35, 91, 66, 66, 66, 91, 77, 22, 22, 56, 56, 56, 22, 77, 97, 97, 97, 77, 91, 35, 5, 78, 78, 78, 5, 89, 89, 89, 5, 35, 86, 13, 95, 69, 56, 56, 24, 24, 24, 56, 69, 62, 19, 19, 19, 62, 2, 2, 2, 62, 69, 95, 96, 49, 49, 34, 34, 34, 49, 96, 1, 1, 31, 26, 26, 26, 31, 80, 80, 80, 31, 1, 96, 95, 13].
is_balanced42:- fail.
get_string42(S):- S = "(13, (86, (99, (99, (63, (), ()), ()), (74, (44, (), ()), (22, (26, (), ()), ()))), (35, (91, (66, (), ()), (77, (22, (), (56, (), ())), (97, (), ()))), (5, (78, (), ()), (89, (), ())))), (95, (69, (56, (), (24, (), ())), (62, (19, (), ()), (2, (), ()))), (96, (49, (), (34, (), ())), (1, (), (31, (26, (), ()), (80, (), ()))))))".
build_tree43(BT):- BT = node(95, node(86, node(55, node(40, node(99, empty, node(69, empty, empty)), node(86, empty, empty)), empty), node(87, node(94, empty, node(16, empty, node(39, empty, empty))), node(69, node(50, empty, empty), node(26, empty, empty)))), node(2, node(15, node(20, node(59, empty, empty), node(83, empty, empty)), node(63, node(70, empty, empty), empty)), node(18, node(3, node(56, empty, empty), node(11, empty, node(62, empty, empty))), node(98, empty, empty)))).
get_size43(N):- N = 27.
get_height43(N):- N = 6.
get_inorder43(L):- L = [99, 69, 40, 86, 55, 86, 94, 16, 39, 87, 50, 69, 26, 95, 59, 20, 83, 15, 70, 63, 2, 56, 3, 11, 62, 18, 98].
get_postorder43(L):- L = [69, 99, 86, 40, 55, 39, 16, 94, 50, 26, 69, 87, 86, 59, 83, 20, 70, 63, 15, 56, 62, 11, 3, 98, 18, 2, 95].
get_preorder43(L):- L = [95, 86, 55, 40, 99, 69, 86, 87, 94, 16, 39, 69, 50, 26, 2, 15, 20, 59, 83, 63, 70, 18, 3, 56, 11, 62, 98].
get_tour43(L):- L = [95, 86, 55, 40, 99, 99, 69, 69, 69, 99, 40, 86, 86, 86, 40, 55, 55, 86, 87, 94, 94, 16, 16, 39, 39, 39, 16, 94, 87, 69, 50, 50, 50, 69, 26, 26, 26, 69, 87, 86, 95, 2, 15, 20, 59, 59, 59, 20, 83, 83, 83, 20, 15, 63, 70, 70, 70, 63, 63, 15, 2, 18, 3, 56, 56, 56, 3, 11, 11, 62, 62, 62, 11, 3, 18, 98, 98, 98, 18, 2, 95].
is_balanced43:- fail.
get_string43(S):- S = "(95, (86, (55, (40, (99, (), (69, (), ())), (86, (), ())), ()), (87, (94, (), (16, (), (39, (), ()))), (69, (50, (), ()), (26, (), ())))), (2, (15, (20, (59, (), ()), (83, (), ())), (63, (70, (), ()), ())), (18, (3, (56, (), ()), (11, (), (62, (), ()))), (98, (), ()))))".
build_tree44(BT):- BT = node(14, node(30, node(15, node(56, empty, node(32, node(1, empty, empty), empty)), node(63, empty, node(77, empty, empty))), node(56, node(1, node(41, node(26, empty, empty), node(80, empty, empty)), node(20, node(47, empty, node(34, empty, empty)), node(60, empty, empty))), node(77, node(19, empty, empty), empty))), node(27, node(95, node(85, node(34, node(78, empty, empty), empty), node(37, empty, empty)), node(40, empty, empty)), node(71, node(7, empty, empty), empty))).
get_size44(N):- N = 28.
get_height44(N):- N = 7.
get_inorder44(L):- L = [56, 1, 32, 15, 63, 77, 30, 26, 41, 80, 1, 47, 34, 20, 60, 56, 19, 77, 14, 78, 34, 85, 37, 95, 40, 27, 7, 71].
get_postorder44(L):- L = [1, 32, 56, 77, 63, 15, 26, 80, 41, 34, 47, 60, 20, 1, 19, 77, 56, 30, 78, 34, 37, 85, 40, 95, 7, 71, 27, 14].
get_preorder44(L):- L = [14, 30, 15, 56, 32, 1, 63, 77, 56, 1, 41, 26, 80, 20, 47, 34, 60, 77, 19, 27, 95, 85, 34, 78, 37, 40, 71, 7].
get_tour44(L):- L = [14, 30, 15, 56, 56, 32, 1, 1, 1, 32, 32, 56, 15, 63, 63, 77, 77, 77, 63, 15, 30, 56, 1, 41, 26, 26, 26, 41, 80, 80, 80, 41, 1, 20, 47, 47, 34, 34, 34, 47, 20, 60, 60, 60, 20, 1, 56, 77, 19, 19, 19, 77, 77, 56, 30, 14, 27, 95, 85, 34, 78, 78, 78, 34, 34, 85, 37, 37, 37, 85, 95, 40, 40, 40, 95, 27, 71, 7, 7, 7, 71, 71, 27, 14].
is_balanced44:- fail.
get_string44(S):- S = "(14, (30, (15, (56, (), (32, (1, (), ()), ())), (63, (), (77, (), ()))), (56, (1, (41, (26, (), ()), (80, (), ())), (20, (47, (), (34, (), ())), (60, (), ()))), (77, (19, (), ()), ()))), (27, (95, (85, (34, (78, (), ()), ()), (37, (), ())), (40, (), ())), (71, (7, (), ()), ())))".
build_tree45(BT):- BT = node(50, node(61, node(69, node(20, node(54, empty, node(73, empty, empty)), node(44, empty, empty)), node(11, node(85, empty, empty), node(6, empty, node(14, empty, empty)))), node(74, node(44, node(39, empty, empty), empty), node(22, empty, node(10, empty, node(65, empty, empty))))), node(8, node(27, node(89, node(1, empty, empty), node(97, empty, empty)), node(19, node(32, empty, empty), node(29, empty, empty))), node(67, node(84, node(70, empty, empty), node(16, empty, empty)), node(17, empty, empty)))).
get_size45(N):- N = 30.
get_height45(N):- N = 6.
get_inorder45(L):- L = [54, 73, 20, 44, 69, 85, 11, 6, 14, 61, 39, 44, 74, 22, 10, 65, 50, 1, 89, 97, 27, 32, 19, 29, 8, 70, 84, 16, 67, 17].
get_postorder45(L):- L = [73, 54, 44, 20, 85, 14, 6, 11, 69, 39, 44, 65, 10, 22, 74, 61, 1, 97, 89, 32, 29, 19, 27, 70, 16, 84, 17, 67, 8, 50].
get_preorder45(L):- L = [50, 61, 69, 20, 54, 73, 44, 11, 85, 6, 14, 74, 44, 39, 22, 10, 65, 8, 27, 89, 1, 97, 19, 32, 29, 67, 84, 70, 16, 17].
get_tour45(L):- L = [50, 61, 69, 20, 54, 54, 73, 73, 73, 54, 20, 44, 44, 44, 20, 69, 11, 85, 85, 85, 11, 6, 6, 14, 14, 14, 6, 11, 69, 61, 74, 44, 39, 39, 39, 44, 44, 74, 22, 22, 10, 10, 65, 65, 65, 10, 22, 74, 61, 50, 8, 27, 89, 1, 1, 1, 89, 97, 97, 97, 89, 27, 19, 32, 32, 32, 19, 29, 29, 29, 19, 27, 8, 67, 84, 70, 70, 70, 84, 16, 16, 16, 84, 67, 17, 17, 17, 67, 8, 50].
is_balanced45:- fail.
get_string45(S):- S = "(50, (61, (69, (20, (54, (), (73, (), ())), (44, (), ())), (11, (85, (), ()), (6, (), (14, (), ())))), (74, (44, (39, (), ()), ()), (22, (), (10, (), (65, (), ()))))), (8, (27, (89, (1, (), ()), (97, (), ())), (19, (32, (), ()), (29, (), ()))), (67, (84, (70, (), ()), (16, (), ())), (17, (), ()))))".
build_tree46(BT):- BT = node(25, node(58, node(24, node(9, node(87, empty, empty), node(48, node(99, node(83, empty, empty), node(63, empty, empty)), node(5, node(15, empty, empty), empty))), node(91, node(43, empty, empty), node(41, node(17, empty, empty), empty))), node(92, node(90, node(43, empty, empty), node(57, empty, node(73, empty, node(57, empty, empty)))), node(50, empty, node(32, empty, empty)))), node(52, node(17, node(53, node(18, empty, node(7, empty, empty)), empty), empty), node(39, node(64, node(36, node(2, empty, empty), node(40, empty, empty)), node(84, empty, empty)), node(83, empty, node(50, empty, empty))))).
get_size46(N):- N = 36.
get_height46(N):- N = 7.
get_inorder46(L):- L = [87, 9, 83, 99, 63, 48, 15, 5, 24, 43, 91, 17, 41, 58, 43, 90, 57, 73, 57, 92, 50, 32, 25, 18, 7, 53, 17, 52, 2, 36, 40, 64, 84, 39, 83, 50].
get_postorder46(L):- L = [87, 83, 63, 99, 15, 5, 48, 9, 43, 17, 41, 91, 24, 43, 57, 73, 57, 90, 32, 50, 92, 58, 7, 18, 53, 17, 2, 40, 36, 84, 64, 50, 83, 39, 52, 25].
get_preorder46(L):- L = [25, 58, 24, 9, 87, 48, 99, 83, 63, 5, 15, 91, 43, 41, 17, 92, 90, 43, 57, 73, 57, 50, 32, 52, 17, 53, 18, 7, 39, 64, 36, 2, 40, 84, 83, 50].
get_tour46(L):- L = [25, 58, 24, 9, 87, 87, 87, 9, 48, 99, 83, 83, 83, 99, 63, 63, 63, 99, 48, 5, 15, 15, 15, 5, 5, 48, 9, 24, 91, 43, 43, 43, 91, 41, 17, 17, 17, 41, 41, 91, 24, 58, 92, 90, 43, 43, 43, 90, 57, 57, 73, 73, 57, 57, 57, 73, 57, 90, 92, 50, 50, 32, 32, 32, 50, 92, 58, 25, 52, 17, 53, 18, 18, 7, 7, 7, 18, 53, 53, 17, 17, 52, 39, 64, 36, 2, 2, 2, 36, 40, 40, 40, 36, 64, 84, 84, 84, 64, 39, 83, 83, 50, 50, 50, 83, 39, 52, 25].
is_balanced46:- fail.
get_string46(S):- S = "(25, (58, (24, (9, (87, (), ()), (48, (99, (83, (), ()), (63, (), ())), (5, (15, (), ()), ()))), (91, (43, (), ()), (41, (17, (), ()), ()))), (92, (90, (43, (), ()), (57, (), (73, (), (57, (), ())))), (50, (), (32, (), ())))), (52, (17, (53, (18, (), (7, (), ())), ()), ()), (39, (64, (36, (2, (), ()), (40, (), ())), (84, (), ())), (83, (), (50, (), ())))))".
build_tree47(BT):- BT = node(73, node(44, node(27, node(82, node(85, empty, empty), node(69, node(53, empty, empty), empty)), node(13, node(2, node(48, empty, empty), node(17, empty, empty)), node(30, empty, empty))), node(39, node(95, node(99, empty, node(38, empty, empty)), node(65, empty, empty)), node(17, node(96, empty, empty), empty))), node(24, node(6, node(13, node(19, empty, empty), node(26, node(95, empty, empty), node(94, empty, node(94, empty, empty)))), node(92, node(1, empty, empty), node(42, empty, node(22, node(41, empty, empty), node(18, empty, empty))))), node(41, node(98, node(16, empty, empty), node(52, empty, node(70, empty, empty))), node(14, empty, node(99, empty, empty))))).
get_size47(N):- N = 40.
get_height47(N):- N = 7.
get_inorder47(L):- L = [85, 82, 53, 69, 27, 48, 2, 17, 13, 30, 44, 99, 38, 95, 65, 39, 96, 17, 73, 19, 13, 95, 26, 94, 94, 6, 1, 92, 42, 41, 22, 18, 24, 16, 98, 52, 70, 41, 14, 99].
get_postorder47(L):- L = [85, 53, 69, 82, 48, 17, 2, 30, 13, 27, 38, 99, 65, 95, 96, 17, 39, 44, 19, 95, 94, 94, 26, 13, 1, 41, 18, 22, 42, 92, 6, 16, 70, 52, 98, 99, 14, 41, 24, 73].
get_preorder47(L):- L = [73, 44, 27, 82, 85, 69, 53, 13, 2, 48, 17, 30, 39, 95, 99, 38, 65, 17, 96, 24, 6, 13, 19, 26, 95, 94, 94, 92, 1, 42, 22, 41, 18, 41, 98, 16, 52, 70, 14, 99].
get_tour47(L):- L = [73, 44, 27, 82, 85, 85, 85, 82, 69, 53, 53, 53, 69, 69, 82, 27, 13, 2, 48, 48, 48, 2, 17, 17, 17, 2, 13, 30, 30, 30, 13, 27, 44, 39, 95, 99, 99, 38, 38, 38, 99, 95, 65, 65, 65, 95, 39, 17, 96, 96, 96, 17, 17, 39, 44, 73, 24, 6, 13, 19, 19, 19, 13, 26, 95, 95, 95, 26, 94, 94, 94, 94, 94, 94, 26, 13, 6, 92, 1, 1, 1, 92, 42, 42, 22, 41, 41, 41, 22, 18, 18, 18, 22, 42, 92, 6, 24, 41, 98, 16, 16, 16, 98, 52, 52, 70, 70, 70, 52, 98, 41, 14, 14, 99, 99, 99, 14, 41, 24, 73].
is_balanced47:- fail.
get_string47(S):- S = "(73, (44, (27, (82, (85, (), ()), (69, (53, (), ()), ())), (13, (2, (48, (), ()), (17, (), ())), (30, (), ()))), (39, (95, (99, (), (38, (), ())), (65, (), ())), (17, (96, (), ()), ()))), (24, (6, (13, (19, (), ()), (26, (95, (), ()), (94, (), (94, (), ())))), (92, (1, (), ()), (42, (), (22, (41, (), ()), (18, (), ()))))), (41, (98, (16, (), ()), (52, (), (70, (), ()))), (14, (), (99, (), ())))))".
build_tree48(BT):- BT = node(91, node(95, node(96, node(76, node(7, empty, empty), empty), node(76, empty, node(7, empty, node(26, empty, empty)))), node(17, node(48, node(61, node(74, empty, empty), empty), node(66, empty, empty)), node(20, node(36, empty, empty), node(62, node(90, empty, empty), node(78, empty, empty))))), node(16, node(5, node(92, node(99, empty, empty), node(28, empty, node(44, empty, empty))), node(25, node(20, empty, empty), node(73, empty, empty))), node(5, node(30, empty, node(22, empty, empty)), node(88, node(3, empty, empty), node(34, empty, empty))))).
get_size48(N):- N = 33.
get_height48(N):- N = 6.
get_inorder48(L):- L = [7, 76, 96, 76, 7, 26, 95, 74, 61, 48, 66, 17, 36, 20, 90, 62, 78, 91, 99, 92, 28, 44, 5, 20, 25, 73, 16, 30, 22, 5, 3, 88, 34].
get_postorder48(L):- L = [7, 76, 26, 7, 76, 96, 74, 61, 66, 48, 36, 90, 78, 62, 20, 17, 95, 99, 44, 28, 92, 20, 73, 25, 5, 22, 30, 3, 34, 88, 5, 16, 91].
get_preorder48(L):- L = [91, 95, 96, 76, 7, 76, 7, 26, 17, 48, 61, 74, 66, 20, 36, 62, 90, 78, 16, 5, 92, 99, 28, 44, 25, 20, 73, 5, 30, 22, 88, 3, 34].
get_tour48(L):- L = [91, 95, 96, 76, 7, 7, 7, 76, 76, 96, 76, 76, 7, 7, 26, 26, 26, 7, 76, 96, 95, 17, 48, 61, 74, 74, 74, 61, 61, 48, 66, 66, 66, 48, 17, 20, 36, 36, 36, 20, 62, 90, 90, 90, 62, 78, 78, 78, 62, 20, 17, 95, 91, 16, 5, 92, 99, 99, 99, 92, 28, 28, 44, 44, 44, 28, 92, 5, 25, 20, 20, 20, 25, 73, 73, 73, 25, 5, 16, 5, 30, 30, 22, 22, 22, 30, 5, 88, 3, 3, 3, 88, 34, 34, 34, 88, 5, 16, 91].
is_balanced48:- fail.
get_string48(S):- S = "(91, (95, (96, (76, (7, (), ()), ()), (76, (), (7, (), (26, (), ())))), (17, (48, (61, (74, (), ()), ()), (66, (), ())), (20, (36, (), ()), (62, (90, (), ()), (78, (), ()))))), (16, (5, (92, (99, (), ()), (28, (), (44, (), ()))), (25, (20, (), ()), (73, (), ()))), (5, (30, (), (22, (), ())), (88, (3, (), ()), (34, (), ())))))".
build_tree49(BT):- BT = node(32, node(89, node(40, node(63, empty, empty), node(30, node(46, empty, empty), node(38, node(26, empty, empty), empty))), node(64, node(8, empty, node(62, empty, node(58, empty, empty))), node(8, empty, empty))), node(60, node(89, node(35, empty, node(95, empty, empty)), empty), node(44, node(26, empty, node(18, node(22, empty, empty), empty)), node(82, empty, empty)))).
get_size49(N):- N = 22.
get_height49(N):- N = 6.
get_inorder49(L):- L = [63, 40, 46, 30, 26, 38, 89, 8, 62, 58, 64, 8, 32, 35, 95, 89, 60, 26, 22, 18, 44, 82].
get_postorder49(L):- L = [63, 46, 26, 38, 30, 40, 58, 62, 8, 8, 64, 89, 95, 35, 89, 22, 18, 26, 82, 44, 60, 32].
get_preorder49(L):- L = [32, 89, 40, 63, 30, 46, 38, 26, 64, 8, 62, 58, 8, 60, 89, 35, 95, 44, 26, 18, 22, 82].
get_tour49(L):- L = [32, 89, 40, 63, 63, 63, 40, 30, 46, 46, 46, 30, 38, 26, 26, 26, 38, 38, 30, 40, 89, 64, 8, 8, 62, 62, 58, 58, 58, 62, 8, 64, 8, 8, 8, 64, 89, 32, 60, 89, 35, 35, 95, 95, 95, 35, 89, 89, 60, 44, 26, 26, 18, 22, 22, 22, 18, 18, 26, 44, 82, 82, 82, 44, 60, 32].
is_balanced49:- fail.
get_string49(S):- S = "(32, (89, (40, (63, (), ()), (30, (46, (), ()), (38, (26, (), ()), ()))), (64, (8, (), (62, (), (58, (), ()))), (8, (), ()))), (60, (89, (35, (), (95, (), ())), ()), (44, (26, (), (18, (22, (), ()), ())), (82, (), ()))))".
build_tree50(BT):- BT = node(46, node(96, node(94, node(88, node(8, empty, empty), node(32, node(21, empty, empty), empty)), node(85, empty, empty)), node(49, empty, node(28, empty, empty))), node(48, node(79, node(95, node(59, node(93, empty, empty), node(7, empty, empty)), node(15, empty, empty)), node(13, node(61, empty, empty), node(2, empty, node(83, empty, empty)))), node(65, node(25, empty, node(59, node(46, empty, empty), empty)), node(94, node(72, empty, empty), empty)))).
get_size50(N):- N = 27.
get_height50(N):- N = 6.
get_inorder50(L):- L = [8, 88, 21, 32, 94, 85, 96, 49, 28, 46, 93, 59, 7, 95, 15, 79, 61, 13, 2, 83, 48, 25, 46, 59, 65, 72, 94].
get_postorder50(L):- L = [8, 21, 32, 88, 85, 94, 28, 49, 96, 93, 7, 59, 15, 95, 61, 83, 2, 13, 79, 46, 59, 25, 72, 94, 65, 48, 46].
get_preorder50(L):- L = [46, 96, 94, 88, 8, 32, 21, 85, 49, 28, 48, 79, 95, 59, 93, 7, 15, 13, 61, 2, 83, 65, 25, 59, 46, 94, 72].
get_tour50(L):- L = [46, 96, 94, 88, 8, 8, 8, 88, 32, 21, 21, 21, 32, 32, 88, 94, 85, 85, 85, 94, 96, 49, 49, 28, 28, 28, 49, 96, 46, 48, 79, 95, 59, 93, 93, 93, 59, 7, 7, 7, 59, 95, 15, 15, 15, 95, 79, 13, 61, 61, 61, 13, 2, 2, 83, 83, 83, 2, 13, 79, 48, 65, 25, 25, 59, 46, 46, 46, 59, 59, 25, 65, 94, 72, 72, 72, 94, 94, 65, 48, 46].
is_balanced50:- fail.
get_string50(S):- S = "(46, (96, (94, (88, (8, (), ()), (32, (21, (), ()), ())), (85, (), ())), (49, (), (28, (), ()))), (48, (79, (95, (59, (93, (), ()), (7, (), ())), (15, (), ())), (13, (61, (), ()), (2, (), (83, (), ())))), (65, (25, (), (59, (46, (), ()), ())), (94, (72, (), ()), ()))))".
build_tree51(BT):- BT = node(6, node(32, node(91, node(73, node(46, empty, empty), node(42, empty, empty)), node(89, empty, empty)), node(3, node(4, empty, empty), node(47, empty, node(71, node(42, empty, empty), empty)))), node(79, node(87, node(12, node(8, empty, empty), node(30, node(75, empty, empty), empty)), node(2, empty, empty)), node(30, node(73, node(72, empty, empty), node(76, empty, empty)), node(42, node(9, empty, node(70, empty, empty)), node(12, empty, node(58, empty, empty)))))).
get_size51(N):- N = 28.
get_height51(N):- N = 6.
get_inorder51(L):- L = [46, 73, 42, 91, 89, 32, 4, 3, 47, 42, 71, 6, 8, 12, 75, 30, 87, 2, 79, 72, 73, 76, 30, 9, 70, 42, 12, 58].
get_postorder51(L):- L = [46, 42, 73, 89, 91, 4, 42, 71, 47, 3, 32, 8, 75, 30, 12, 2, 87, 72, 76, 73, 70, 9, 58, 12, 42, 30, 79, 6].
get_preorder51(L):- L = [6, 32, 91, 73, 46, 42, 89, 3, 4, 47, 71, 42, 79, 87, 12, 8, 30, 75, 2, 30, 73, 72, 76, 42, 9, 70, 12, 58].
get_tour51(L):- L = [6, 32, 91, 73, 46, 46, 46, 73, 42, 42, 42, 73, 91, 89, 89, 89, 91, 32, 3, 4, 4, 4, 3, 47, 47, 71, 42, 42, 42, 71, 71, 47, 3, 32, 6, 79, 87, 12, 8, 8, 8, 12, 30, 75, 75, 75, 30, 30, 12, 87, 2, 2, 2, 87, 79, 30, 73, 72, 72, 72, 73, 76, 76, 76, 73, 30, 42, 9, 9, 70, 70, 70, 9, 42, 12, 12, 58, 58, 58, 12, 42, 30, 79, 6].
is_balanced51:- fail.
get_string51(S):- S = "(6, (32, (91, (73, (46, (), ()), (42, (), ())), (89, (), ())), (3, (4, (), ()), (47, (), (71, (42, (), ()), ())))), (79, (87, (12, (8, (), ()), (30, (75, (), ()), ())), (2, (), ())), (30, (73, (72, (), ()), (76, (), ())), (42, (9, (), (70, (), ())), (12, (), (58, (), ()))))))".
build_tree52(BT):- BT = node(44, node(13, node(1, node(88, empty, node(22, empty, node(49, empty, empty))), node(28, node(99, empty, empty), empty)), node(12, node(64, node(15, empty, empty), node(90, empty, empty)), node(95, empty, node(72, empty, empty)))), node(30, node(25, node(71, node(57, empty, node(77, empty, empty)), node(82, empty, empty)), node(11, empty, node(38, empty, empty))), node(33, node(10, node(11, empty, empty), node(34, node(95, node(96, empty, empty), node(29, node(86, empty, empty), empty)), empty)), node(5, empty, empty)))).
get_size52(N):- N = 31.
get_height52(N):- N = 8.
get_inorder52(L):- L = [88, 22, 49, 1, 99, 28, 13, 15, 64, 90, 12, 95, 72, 44, 57, 77, 71, 82, 25, 11, 38, 30, 11, 10, 96, 95, 86, 29, 34, 33, 5].
get_postorder52(L):- L = [49, 22, 88, 99, 28, 1, 15, 90, 64, 72, 95, 12, 13, 77, 57, 82, 71, 38, 11, 25, 11, 96, 86, 29, 95, 34, 10, 5, 33, 30, 44].
get_preorder52(L):- L = [44, 13, 1, 88, 22, 49, 28, 99, 12, 64, 15, 90, 95, 72, 30, 25, 71, 57, 77, 82, 11, 38, 33, 10, 11, 34, 95, 96, 29, 86, 5].
get_tour52(L):- L = [44, 13, 1, 88, 88, 22, 22, 49, 49, 49, 22, 88, 1, 28, 99, 99, 99, 28, 28, 1, 13, 12, 64, 15, 15, 15, 64, 90, 90, 90, 64, 12, 95, 95, 72, 72, 72, 95, 12, 13, 44, 30, 25, 71, 57, 57, 77, 77, 77, 57, 71, 82, 82, 82, 71, 25, 11, 11, 38, 38, 38, 11, 25, 30, 33, 10, 11, 11, 11, 10, 34, 95, 96, 96, 96, 95, 29, 86, 86, 86, 29, 29, 95, 34, 34, 10, 33, 5, 5, 5, 33, 30, 44].
is_balanced52:- fail.
get_string52(S):- S = "(44, (13, (1, (88, (), (22, (), (49, (), ()))), (28, (99, (), ()), ())), (12, (64, (15, (), ()), (90, (), ())), (95, (), (72, (), ())))), (30, (25, (71, (57, (), (77, (), ())), (82, (), ())), (11, (), (38, (), ()))), (33, (10, (11, (), ()), (34, (95, (96, (), ()), (29, (86, (), ()), ())), ())), (5, (), ()))))".
build_tree53(BT):- BT = node(71, node(80, node(89, node(22, node(55, empty, node(90, empty, empty)), node(85, empty, empty)), node(43, node(48, empty, empty), empty)), node(95, node(29, node(13, empty, empty), node(59, node(21, empty, empty), empty)), node(13, node(6, node(63, empty, node(36, empty, empty)), empty), node(14, node(45, empty, empty), empty)))), node(99, node(81, node(66, node(42, empty, node(4, empty, empty)), node(38, empty, empty)), node(98, empty, empty)), node(96, node(94, empty, node(6, empty, empty)), node(18, node(73, empty, empty), node(16, node(26, empty, node(78, empty, empty)), empty))))).
get_size53(N):- N = 35.
get_height53(N):- N = 7.
get_inorder53(L):- L = [55, 90, 22, 85, 89, 48, 43, 80, 13, 29, 21, 59, 95, 63, 36, 6, 13, 45, 14, 71, 42, 4, 66, 38, 81, 98, 99, 94, 6, 96, 73, 18, 26, 78, 16].
get_postorder53(L):- L = [90, 55, 85, 22, 48, 43, 89, 13, 21, 59, 29, 36, 63, 6, 45, 14, 13, 95, 80, 4, 42, 38, 66, 98, 81, 6, 94, 73, 78, 26, 16, 18, 96, 99, 71].
get_preorder53(L):- L = [71, 80, 89, 22, 55, 90, 85, 43, 48, 95, 29, 13, 59, 21, 13, 6, 63, 36, 14, 45, 99, 81, 66, 42, 4, 38, 98, 96, 94, 6, 18, 73, 16, 26, 78].
get_tour53(L):- L = [71, 80, 89, 22, 55, 55, 90, 90, 90, 55, 22, 85, 85, 85, 22, 89, 43, 48, 48, 48, 43, 43, 89, 80, 95, 29, 13, 13, 13, 29, 59, 21, 21, 21, 59, 59, 29, 95, 13, 6, 63, 63, 36, 36, 36, 63, 6, 6, 13, 14, 45, 45, 45, 14, 14, 13, 95, 80, 71, 99, 81, 66, 42, 42, 4, 4, 4, 42, 66, 38, 38, 38, 66, 81, 98, 98, 98, 81, 99, 96, 94, 94, 6, 6, 6, 94, 96, 18, 73, 73, 73, 18, 16, 26, 26, 78, 78, 78, 26, 16, 16, 18, 96, 99, 71].
is_balanced53:- fail.
get_string53(S):- S = "(71, (80, (89, (22, (55, (), (90, (), ())), (85, (), ())), (43, (48, (), ()), ())), (95, (29, (13, (), ()), (59, (21, (), ()), ())), (13, (6, (63, (), (36, (), ())), ()), (14, (45, (), ()), ())))), (99, (81, (66, (42, (), (4, (), ())), (38, (), ())), (98, (), ())), (96, (94, (), (6, (), ())), (18, (73, (), ()), (16, (26, (), (78, (), ())), ())))))".
build_tree54(BT):- BT = node(71, node(65, node(15, node(40, node(46, empty, node(5, empty, empty)), node(7, empty, node(72, empty, empty))), empty), node(48, node(81, node(51, empty, node(69, empty, empty)), node(38, empty, empty)), node(27, empty, node(58, node(30, empty, empty), node(5, empty, node(64, empty, empty)))))), node(59, node(27, node(46, node(48, empty, empty), empty), node(27, node(65, node(77, empty, empty), empty), empty)), node(68, node(93, node(6, node(19, empty, node(9, empty, empty)), empty), node(43, empty, node(15, empty, empty))), node(58, node(51, empty, empty), node(58, empty, node(80, empty, empty)))))).
get_size54(N):- N = 36.
get_height54(N):- N = 7.
get_inorder54(L):- L = [46, 5, 40, 7, 72, 15, 65, 51, 69, 81, 38, 48, 27, 30, 58, 5, 64, 71, 48, 46, 27, 77, 65, 27, 59, 19, 9, 6, 93, 43, 15, 68, 51, 58, 58, 80].
get_postorder54(L):- L = [5, 46, 72, 7, 40, 15, 69, 51, 38, 81, 30, 64, 5, 58, 27, 48, 65, 48, 46, 77, 65, 27, 27, 9, 19, 6, 15, 43, 93, 51, 80, 58, 58, 68, 59, 71].
get_preorder54(L):- L = [71, 65, 15, 40, 46, 5, 7, 72, 48, 81, 51, 69, 38, 27, 58, 30, 5, 64, 59, 27, 46, 48, 27, 65, 77, 68, 93, 6, 19, 9, 43, 15, 58, 51, 58, 80].
get_tour54(L):- L = [71, 65, 15, 40, 46, 46, 5, 5, 5, 46, 40, 7, 7, 72, 72, 72, 7, 40, 15, 15, 65, 48, 81, 51, 51, 69, 69, 69, 51, 81, 38, 38, 38, 81, 48, 27, 27, 58, 30, 30, 30, 58, 5, 5, 64, 64, 64, 5, 58, 27, 48, 65, 71, 59, 27, 46, 48, 48, 48, 46, 46, 27, 27, 65, 77, 77, 77, 65, 65, 27, 27, 27, 59, 68, 93, 6, 19, 19, 9, 9, 9, 19, 6, 6, 93, 43, 43, 15, 15, 15, 43, 93, 68, 58, 51, 51, 51, 58, 58, 58, 80, 80, 80, 58, 58, 68, 59, 71].
is_balanced54:- fail.
get_string54(S):- S = "(71, (65, (15, (40, (46, (), (5, (), ())), (7, (), (72, (), ()))), ()), (48, (81, (51, (), (69, (), ())), (38, (), ())), (27, (), (58, (30, (), ()), (5, (), (64, (), ())))))), (59, (27, (46, (48, (), ()), ()), (27, (65, (77, (), ()), ()), ())), (68, (93, (6, (19, (), (9, (), ())), ()), (43, (), (15, (), ()))), (58, (51, (), ()), (58, (), (80, (), ()))))))".
build_tree55(BT):- BT = node(24, node(68, node(41, node(68, node(49, node(15, empty, empty), empty), node(97, empty, empty)), node(29, node(71, empty, node(41, empty, empty)), empty)), node(55, node(71, empty, empty), node(36, node(98, empty, node(67, empty, empty)), node(26, empty, empty)))), node(31, node(48, empty, node(21, empty, empty)), node(52, node(21, empty, empty), node(51, empty, node(36, empty, empty))))).
get_size55(N):- N = 23.
get_height55(N):- N = 6.
get_inorder55(L):- L = [15, 49, 68, 97, 41, 71, 41, 29, 68, 71, 55, 98, 67, 36, 26, 24, 48, 21, 31, 21, 52, 51, 36].
get_postorder55(L):- L = [15, 49, 97, 68, 41, 71, 29, 41, 71, 67, 98, 26, 36, 55, 68, 21, 48, 21, 36, 51, 52, 31, 24].
get_preorder55(L):- L = [24, 68, 41, 68, 49, 15, 97, 29, 71, 41, 55, 71, 36, 98, 67, 26, 31, 48, 21, 52, 21, 51, 36].
get_tour55(L):- L = [24, 68, 41, 68, 49, 15, 15, 15, 49, 49, 68, 97, 97, 97, 68, 41, 29, 71, 71, 41, 41, 41, 71, 29, 29, 41, 68, 55, 71, 71, 71, 55, 36, 98, 98, 67, 67, 67, 98, 36, 26, 26, 26, 36, 55, 68, 24, 31, 48, 48, 21, 21, 21, 48, 31, 52, 21, 21, 21, 52, 51, 51, 36, 36, 36, 51, 52, 31, 24].
is_balanced55:- fail.
get_string55(S):- S = "(24, (68, (41, (68, (49, (15, (), ()), ()), (97, (), ())), (29, (71, (), (41, (), ())), ())), (55, (71, (), ()), (36, (98, (), (67, (), ())), (26, (), ())))), (31, (48, (), (21, (), ())), (52, (21, (), ()), (51, (), (36, (), ())))))".
build_tree56(BT):- BT = node(91, node(69, node(75, empty, node(74, empty, empty)), node(3, node(61, empty, empty), node(40, node(89, node(97, empty, empty), node(37, empty, empty)), node(66, empty, empty)))), node(4, node(97, node(16, node(76, node(27, empty, empty), node(97, empty, empty)), empty), node(32, node(85, empty, empty), node(1, empty, empty))), node(55, node(28, empty, empty), node(51, node(32, node(1, empty, empty), empty), node(97, node(56, empty, empty), empty))))).
get_size56(N):- N = 27.
get_height56(N):- N = 6.
get_inorder56(L):- L = [75, 74, 69, 61, 3, 97, 89, 37, 40, 66, 91, 27, 76, 97, 16, 97, 85, 32, 1, 4, 28, 55, 1, 32, 51, 56, 97].
get_postorder56(L):- L = [74, 75, 61, 97, 37, 89, 66, 40, 3, 69, 27, 97, 76, 16, 85, 1, 32, 97, 28, 1, 32, 56, 97, 51, 55, 4, 91].
get_preorder56(L):- L = [91, 69, 75, 74, 3, 61, 40, 89, 97, 37, 66, 4, 97, 16, 76, 27, 97, 32, 85, 1, 55, 28, 51, 32, 1, 97, 56].
get_tour56(L):- L = [91, 69, 75, 75, 74, 74, 74, 75, 69, 3, 61, 61, 61, 3, 40, 89, 97, 97, 97, 89, 37, 37, 37, 89, 40, 66, 66, 66, 40, 3, 69, 91, 4, 97, 16, 76, 27, 27, 27, 76, 97, 97, 97, 76, 16, 16, 97, 32, 85, 85, 85, 32, 1, 1, 1, 32, 97, 4, 55, 28, 28, 28, 55, 51, 32, 1, 1, 1, 32, 32, 51, 97, 56, 56, 56, 97, 97, 51, 55, 4, 91].
is_balanced56:- fail.
get_string56(S):- S = "(91, (69, (75, (), (74, (), ())), (3, (61, (), ()), (40, (89, (97, (), ()), (37, (), ())), (66, (), ())))), (4, (97, (16, (76, (27, (), ()), (97, (), ())), ()), (32, (85, (), ()), (1, (), ()))), (55, (28, (), ()), (51, (32, (1, (), ()), ()), (97, (56, (), ()), ())))))".
build_tree57(BT):- BT = node(21, node(53, node(57, node(68, node(46, empty, empty), empty), node(11, empty, node(65, node(54, empty, empty), empty))), node(65, node(73, node(77, empty, node(15, empty, empty)), node(16, empty, empty)), node(35, empty, node(59, empty, empty)))), node(10, node(21, node(1, node(2, empty, node(10, empty, empty)), empty), node(31, empty, node(40, empty, node(19, empty, empty)))), node(99, node(25, node(67, empty, empty), empty), node(64, empty, node(93, node(42, empty, empty), empty))))).
get_size57(N):- N = 29.
get_height57(N):- N = 6.
get_inorder57(L):- L = [46, 68, 57, 11, 54, 65, 53, 77, 15, 73, 16, 65, 35, 59, 21, 2, 10, 1, 21, 31, 40, 19, 10, 67, 25, 99, 64, 42, 93].
get_postorder57(L):- L = [46, 68, 54, 65, 11, 57, 15, 77, 16, 73, 59, 35, 65, 53, 10, 2, 1, 19, 40, 31, 21, 67, 25, 42, 93, 64, 99, 10, 21].
get_preorder57(L):- L = [21, 53, 57, 68, 46, 11, 65, 54, 65, 73, 77, 15, 16, 35, 59, 10, 21, 1, 2, 10, 31, 40, 19, 99, 25, 67, 64, 93, 42].
get_tour57(L):- L = [21, 53, 57, 68, 46, 46, 46, 68, 68, 57, 11, 11, 65, 54, 54, 54, 65, 65, 11, 57, 53, 65, 73, 77, 77, 15, 15, 15, 77, 73, 16, 16, 16, 73, 65, 35, 35, 59, 59, 59, 35, 65, 53, 21, 10, 21, 1, 2, 2, 10, 10, 10, 2, 1, 1, 21, 31, 31, 40, 40, 19, 19, 19, 40, 31, 21, 10, 99, 25, 67, 67, 67, 25, 25, 99, 64, 64, 93, 42, 42, 42, 93, 93, 64, 99, 10, 21].
is_balanced57:- fail.
get_string57(S):- S = "(21, (53, (57, (68, (46, (), ()), ()), (11, (), (65, (54, (), ()), ()))), (65, (73, (77, (), (15, (), ())), (16, (), ())), (35, (), (59, (), ())))), (10, (21, (1, (2, (), (10, (), ())), ()), (31, (), (40, (), (19, (), ())))), (99, (25, (67, (), ()), ()), (64, (), (93, (42, (), ()), ())))))".
build_tree58(BT):- BT = node(25, node(60, node(53, node(28, node(30, empty, empty), empty), node(35, empty, empty)), node(36, node(19, empty, node(24, empty, empty)), node(23, empty, empty))), node(17, node(59, node(63, node(21, node(29, empty, empty), node(48, empty, empty)), node(28, empty, node(67, empty, empty))), node(52, empty, empty)), node(36, node(5, node(12, empty, empty), node(92, node(49, empty, empty), empty)), node(40, node(80, node(63, empty, empty), node(62, empty, empty)), node(81, empty, node(57, empty, empty)))))).
get_size58(N):- N = 30.
get_height58(N):- N = 6.
get_inorder58(L):- L = [30, 28, 53, 35, 60, 19, 24, 36, 23, 25, 29, 21, 48, 63, 28, 67, 59, 52, 17, 12, 5, 49, 92, 36, 63, 80, 62, 40, 81, 57].
get_postorder58(L):- L = [30, 28, 35, 53, 24, 19, 23, 36, 60, 29, 48, 21, 67, 28, 63, 52, 59, 12, 49, 92, 5, 63, 62, 80, 57, 81, 40, 36, 17, 25].
get_preorder58(L):- L = [25, 60, 53, 28, 30, 35, 36, 19, 24, 23, 17, 59, 63, 21, 29, 48, 28, 67, 52, 36, 5, 12, 92, 49, 40, 80, 63, 62, 81, 57].
get_tour58(L):- L = [25, 60, 53, 28, 30, 30, 30, 28, 28, 53, 35, 35, 35, 53, 60, 36, 19, 19, 24, 24, 24, 19, 36, 23, 23, 23, 36, 60, 25, 17, 59, 63, 21, 29, 29, 29, 21, 48, 48, 48, 21, 63, 28, 28, 67, 67, 67, 28, 63, 59, 52, 52, 52, 59, 17, 36, 5, 12, 12, 12, 5, 92, 49, 49, 49, 92, 92, 5, 36, 40, 80, 63, 63, 63, 80, 62, 62, 62, 80, 40, 81, 81, 57, 57, 57, 81, 40, 36, 17, 25].
is_balanced58:- fail.
get_string58(S):- S = "(25, (60, (53, (28, (30, (), ()), ()), (35, (), ())), (36, (19, (), (24, (), ())), (23, (), ()))), (17, (59, (63, (21, (29, (), ()), (48, (), ())), (28, (), (67, (), ()))), (52, (), ())), (36, (5, (12, (), ()), (92, (49, (), ()), ())), (40, (80, (63, (), ()), (62, (), ())), (81, (), (57, (), ()))))))".
build_tree59(BT):- BT = node(68, node(35, node(3, node(5, node(6, empty, node(15, empty, empty)), node(27, node(79, empty, empty), node(72, empty, node(5, empty, empty)))), node(11, node(57, node(54, empty, empty), empty), node(46, empty, empty))), node(25, node(25, node(68, empty, empty), node(5, node(33, empty, empty), node(66, empty, empty))), node(44, empty, node(94, empty, empty)))), node(70, node(29, node(2, node(7, empty, empty), node(66, empty, node(12, empty, empty))), node(13, node(78, node(96, empty, empty), empty), node(64, empty, empty))), node(90, node(39, node(17, empty, empty), empty), node(19, empty, node(31, empty, empty))))).
get_size59(N):- N = 37.
get_height59(N):- N = 7.
get_inorder59(L):- L = [6, 15, 5, 79, 27, 72, 5, 3, 54, 57, 11, 46, 35, 68, 25, 33, 5, 66, 25, 44, 94, 68, 7, 2, 66, 12, 29, 96, 78, 13, 64, 70, 17, 39, 90, 19, 31].
get_postorder59(L):- L = [15, 6, 79, 5, 72, 27, 5, 54, 57, 46, 11, 3, 68, 33, 66, 5, 25, 94, 44, 25, 35, 7, 12, 66, 2, 96, 78, 64, 13, 29, 17, 39, 31, 19, 90, 70, 68].
get_preorder59(L):- L = [68, 35, 3, 5, 6, 15, 27, 79, 72, 5, 11, 57, 54, 46, 25, 25, 68, 5, 33, 66, 44, 94, 70, 29, 2, 7, 66, 12, 13, 78, 96, 64, 90, 39, 17, 19, 31].
get_tour59(L):- L = [68, 35, 3, 5, 6, 6, 15, 15, 15, 6, 5, 27, 79, 79, 79, 27, 72, 72, 5, 5, 5, 72, 27, 5, 3, 11, 57, 54, 54, 54, 57, 57, 11, 46, 46, 46, 11, 3, 35, 25, 25, 68, 68, 68, 25, 5, 33, 33, 33, 5, 66, 66, 66, 5, 25, 25, 44, 44, 94, 94, 94, 44, 25, 35, 68, 70, 29, 2, 7, 7, 7, 2, 66, 66, 12, 12, 12, 66, 2, 29, 13, 78, 96, 96, 96, 78, 78, 13, 64, 64, 64, 13, 29, 70, 90, 39, 17, 17, 17, 39, 39, 90, 19, 19, 31, 31, 31, 19, 90, 70, 68].
is_balanced59.
get_string59(S):- S = "(68, (35, (3, (5, (6, (), (15, (), ())), (27, (79, (), ()), (72, (), (5, (), ())))), (11, (57, (54, (), ()), ()), (46, (), ()))), (25, (25, (68, (), ()), (5, (33, (), ()), (66, (), ()))), (44, (), (94, (), ())))), (70, (29, (2, (7, (), ()), (66, (), (12, (), ()))), (13, (78, (96, (), ()), ()), (64, (), ()))), (90, (39, (17, (), ()), ()), (19, (), (31, (), ())))))".
build_tree60(BT):- BT = node(6, node(43, node(10, empty, node(10, node(63, node(18, empty, node(42, empty, empty)), node(29, empty, node(16, empty, empty))), empty)), node(38, node(47, node(26, empty, empty), node(2, node(52, empty, empty), node(5, empty, empty))), node(86, node(58, empty, empty), node(4, empty, empty)))), node(1, node(20, node(61, empty, node(84, node(4, empty, empty), empty)), node(74, node(23, node(13, empty, empty), node(78, empty, node(73, empty, empty))), empty)), node(54, node(15, node(83, node(41, empty, empty), empty), node(59, empty, empty)), node(5, empty, node(92, empty, empty))))).
get_size60(N):- N = 35.
get_height60(N):- N = 7.
get_inorder60(L):- L = [10, 18, 42, 63, 29, 16, 10, 43, 26, 47, 52, 2, 5, 38, 58, 86, 4, 6, 61, 4, 84, 20, 13, 23, 78, 73, 74, 1, 41, 83, 15, 59, 54, 5, 92].
get_postorder60(L):- L = [42, 18, 16, 29, 63, 10, 10, 26, 52, 5, 2, 47, 58, 4, 86, 38, 43, 4, 84, 61, 13, 73, 78, 23, 74, 20, 41, 83, 59, 15, 92, 5, 54, 1, 6].
get_preorder60(L):- L = [6, 43, 10, 10, 63, 18, 42, 29, 16, 38, 47, 26, 2, 52, 5, 86, 58, 4, 1, 20, 61, 84, 4, 74, 23, 13, 78, 73, 54, 15, 83, 41, 59, 5, 92].
get_tour60(L):- L = [6, 43, 10, 10, 10, 63, 18, 18, 42, 42, 42, 18, 63, 29, 29, 16, 16, 16, 29, 63, 10, 10, 10, 43, 38, 47, 26, 26, 26, 47, 2, 52, 52, 52, 2, 5, 5, 5, 2, 47, 38, 86, 58, 58, 58, 86, 4, 4, 4, 86, 38, 43, 6, 1, 20, 61, 61, 84, 4, 4, 4, 84, 84, 61, 20, 74, 23, 13, 13, 13, 23, 78, 78, 73, 73, 73, 78, 23, 74, 74, 20, 1, 54, 15, 83, 41, 41, 41, 83, 83, 15, 59, 59, 59, 15, 54, 5, 5, 92, 92, 92, 5, 54, 1, 6].
is_balanced60:- fail.
get_string60(S):- S = "(6, (43, (10, (), (10, (63, (18, (), (42, (), ())), (29, (), (16, (), ()))), ())), (38, (47, (26, (), ()), (2, (52, (), ()), (5, (), ()))), (86, (58, (), ()), (4, (), ())))), (1, (20, (61, (), (84, (4, (), ()), ())), (74, (23, (13, (), ()), (78, (), (73, (), ()))), ())), (54, (15, (83, (41, (), ()), ()), (59, (), ())), (5, (), (92, (), ())))))".
build_tree61(BT):- BT = node(35, node(26, node(12, node(9, node(13, empty, node(40, empty, empty)), node(28, node(42, empty, empty), empty)), node(50, node(17, empty, empty), node(79, empty, node(56, empty, empty)))), node(73, node(31, empty, node(64, node(24, empty, empty), empty)), node(81, node(42, empty, empty), empty))), node(32, node(50, node(90, empty, node(45, node(68, empty, empty), empty)), node(91, node(86, node(7, node(78, empty, empty), empty), empty), node(96, empty, node(43, empty, empty)))), node(82, node(35, node(79, empty, empty), empty), node(64, node(91, empty, node(97, empty, empty)), empty)))).
get_size61(N):- N = 35.
get_height61(N):- N = 7.
get_inorder61(L):- L = [13, 40, 9, 42, 28, 12, 17, 50, 79, 56, 26, 31, 24, 64, 73, 42, 81, 35, 90, 68, 45, 50, 78, 7, 86, 91, 96, 43, 32, 79, 35, 82, 91, 97, 64].
get_postorder61(L):- L = [40, 13, 42, 28, 9, 17, 56, 79, 50, 12, 24, 64, 31, 42, 81, 73, 26, 68, 45, 90, 78, 7, 86, 43, 96, 91, 50, 79, 35, 97, 91, 64, 82, 32, 35].
get_preorder61(L):- L = [35, 26, 12, 9, 13, 40, 28, 42, 50, 17, 79, 56, 73, 31, 64, 24, 81, 42, 32, 50, 90, 45, 68, 91, 86, 7, 78, 96, 43, 82, 35, 79, 64, 91, 97].
get_tour61(L):- L = [35, 26, 12, 9, 13, 13, 40, 40, 40, 13, 9, 28, 42, 42, 42, 28, 28, 9, 12, 50, 17, 17, 17, 50, 79, 79, 56, 56, 56, 79, 50, 12, 26, 73, 31, 31, 64, 24, 24, 24, 64, 64, 31, 73, 81, 42, 42, 42, 81, 81, 73, 26, 35, 32, 50, 90, 90, 45, 68, 68, 68, 45, 45, 90, 50, 91, 86, 7, 78, 78, 78, 7, 7, 86, 86, 91, 96, 96, 43, 43, 43, 96, 91, 50, 32, 82, 35, 79, 79, 79, 35, 35, 82, 64, 91, 91, 97, 97, 97, 91, 64, 64, 82, 32, 35].
is_balanced61:- fail.
get_string61(S):- S = "(35, (26, (12, (9, (13, (), (40, (), ())), (28, (42, (), ()), ())), (50, (17, (), ()), (79, (), (56, (), ())))), (73, (31, (), (64, (24, (), ()), ())), (81, (42, (), ()), ()))), (32, (50, (90, (), (45, (68, (), ()), ())), (91, (86, (7, (78, (), ()), ()), ()), (96, (), (43, (), ())))), (82, (35, (79, (), ()), ()), (64, (91, (), (97, (), ())), ()))))".
build_tree62(BT):- BT = node(68, node(90, node(6, node(34, empty, node(71, empty, node(77, empty, empty))), node(61, node(47, empty, node(64, node(24, empty, empty), empty)), node(53, empty, node(5, empty, empty)))), node(34, node(59, node(7, empty, empty), node(92, empty, empty)), node(21, empty, node(72, empty, empty)))), node(45, node(27, node(71, node(32, empty, empty), empty), node(34, empty, node(6, node(92, empty, empty), empty))), node(11, node(83, node(7, empty, empty), empty), node(58, node(16, empty, empty), empty)))).
get_size62(N):- N = 30.
get_height62(N):- N = 7.
get_inorder62(L):- L = [34, 71, 77, 6, 47, 24, 64, 61, 53, 5, 90, 7, 59, 92, 34, 21, 72, 68, 32, 71, 27, 34, 92, 6, 45, 7, 83, 11, 16, 58].
get_postorder62(L):- L = [77, 71, 34, 24, 64, 47, 5, 53, 61, 6, 7, 92, 59, 72, 21, 34, 90, 32, 71, 92, 6, 34, 27, 7, 83, 16, 58, 11, 45, 68].
get_preorder62(L):- L = [68, 90, 6, 34, 71, 77, 61, 47, 64, 24, 53, 5, 34, 59, 7, 92, 21, 72, 45, 27, 71, 32, 34, 6, 92, 11, 83, 7, 58, 16].
get_tour62(L):- L = [68, 90, 6, 34, 34, 71, 71, 77, 77, 77, 71, 34, 6, 61, 47, 47, 64, 24, 24, 24, 64, 64, 47, 61, 53, 53, 5, 5, 5, 53, 61, 6, 90, 34, 59, 7, 7, 7, 59, 92, 92, 92, 59, 34, 21, 21, 72, 72, 72, 21, 34, 90, 68, 45, 27, 71, 32, 32, 32, 71, 71, 27, 34, 34, 6, 92, 92, 92, 6, 6, 34, 27, 45, 11, 83, 7, 7, 7, 83, 83, 11, 58, 16, 16, 16, 58, 58, 11, 45, 68].
is_balanced62:- fail.
get_string62(S):- S = "(68, (90, (6, (34, (), (71, (), (77, (), ()))), (61, (47, (), (64, (24, (), ()), ())), (53, (), (5, (), ())))), (34, (59, (7, (), ()), (92, (), ())), (21, (), (72, (), ())))), (45, (27, (71, (32, (), ()), ()), (34, (), (6, (92, (), ()), ()))), (11, (83, (7, (), ()), ()), (58, (16, (), ()), ()))))".
build_tree63(BT):- BT = node(59, node(84, node(52, node(44, empty, empty), node(7, node(29, empty, empty), node(78, node(81, empty, empty), node(26, empty, empty)))), node(65, node(64, node(38, empty, empty), node(33, empty, empty)), node(40, empty, node(7, node(97, empty, empty), empty)))), node(6, node(72, node(50, empty, node(62, empty, empty)), node(22, node(86, node(25, empty, node(84, empty, empty)), node(20, empty, empty)), node(53, empty, node(19, empty, empty)))), node(61, node(39, node(8, node(12, empty, empty), empty), node(44, node(78, empty, empty), node(30, empty, empty))), node(35, node(27, empty, node(46, empty, empty)), node(78, empty, node(17, empty, empty)))))).
get_size63(N):- N = 39.
get_height63(N):- N = 7.
get_inorder63(L):- L = [44, 52, 29, 7, 81, 78, 26, 84, 38, 64, 33, 65, 40, 97, 7, 59, 50, 62, 72, 25, 84, 86, 20, 22, 53, 19, 6, 12, 8, 39, 78, 44, 30, 61, 27, 46, 35, 78, 17].
get_postorder63(L):- L = [44, 29, 81, 26, 78, 7, 52, 38, 33, 64, 97, 7, 40, 65, 84, 62, 50, 84, 25, 20, 86, 19, 53, 22, 72, 12, 8, 78, 30, 44, 39, 46, 27, 17, 78, 35, 61, 6, 59].
get_preorder63(L):- L = [59, 84, 52, 44, 7, 29, 78, 81, 26, 65, 64, 38, 33, 40, 7, 97, 6, 72, 50, 62, 22, 86, 25, 84, 20, 53, 19, 61, 39, 8, 12, 44, 78, 30, 35, 27, 46, 78, 17].
get_tour63(L):- L = [59, 84, 52, 44, 44, 44, 52, 7, 29, 29, 29, 7, 78, 81, 81, 81, 78, 26, 26, 26, 78, 7, 52, 84, 65, 64, 38, 38, 38, 64, 33, 33, 33, 64, 65, 40, 40, 7, 97, 97, 97, 7, 7, 40, 65, 84, 59, 6, 72, 50, 50, 62, 62, 62, 50, 72, 22, 86, 25, 25, 84, 84, 84, 25, 86, 20, 20, 20, 86, 22, 53, 53, 19, 19, 19, 53, 22, 72, 6, 61, 39, 8, 12, 12, 12, 8, 8, 39, 44, 78, 78, 78, 44, 30, 30, 30, 44, 39, 61, 35, 27, 27, 46, 46, 46, 27, 35, 78, 78, 17, 17, 17, 78, 35, 61, 6, 59].
is_balanced63:- fail.
get_string63(S):- S = "(59, (84, (52, (44, (), ()), (7, (29, (), ()), (78, (81, (), ()), (26, (), ())))), (65, (64, (38, (), ()), (33, (), ())), (40, (), (7, (97, (), ()), ())))), (6, (72, (50, (), (62, (), ())), (22, (86, (25, (), (84, (), ())), (20, (), ())), (53, (), (19, (), ())))), (61, (39, (8, (12, (), ()), ()), (44, (78, (), ()), (30, (), ()))), (35, (27, (), (46, (), ())), (78, (), (17, (), ()))))))".
build_tree64(BT):- BT = node(50, node(21, node(19, node(95, node(56, empty, empty), empty), node(14, node(46, empty, empty), node(92, node(67, empty, empty), node(35, empty, empty)))), node(22, empty, node(10, node(42, empty, empty), node(86, empty, empty)))), node(61, node(32, empty, node(29, empty, node(44, node(51, empty, empty), empty))), node(95, node(91, node(67, empty, empty), empty), node(75, empty, node(85, empty, empty))))).
get_size64(N):- N = 24.
get_height64(N):- N = 6.
get_inorder64(L):- L = [56, 95, 19, 46, 14, 67, 92, 35, 21, 22, 42, 10, 86, 50, 32, 29, 51, 44, 61, 67, 91, 95, 75, 85].
get_postorder64(L):- L = [56, 95, 46, 67, 35, 92, 14, 19, 42, 86, 10, 22, 21, 51, 44, 29, 32, 67, 91, 85, 75, 95, 61, 50].
get_preorder64(L):- L = [50, 21, 19, 95, 56, 14, 46, 92, 67, 35, 22, 10, 42, 86, 61, 32, 29, 44, 51, 95, 91, 67, 75, 85].
get_tour64(L):- L = [50, 21, 19, 95, 56, 56, 56, 95, 95, 19, 14, 46, 46, 46, 14, 92, 67, 67, 67, 92, 35, 35, 35, 92, 14, 19, 21, 22, 22, 10, 42, 42, 42, 10, 86, 86, 86, 10, 22, 21, 50, 61, 32, 32, 29, 29, 44, 51, 51, 51, 44, 44, 29, 32, 61, 95, 91, 67, 67, 67, 91, 91, 95, 75, 75, 85, 85, 85, 75, 95, 61, 50].
is_balanced64:- fail.
get_string64(S):- S = "(50, (21, (19, (95, (56, (), ()), ()), (14, (46, (), ()), (92, (67, (), ()), (35, (), ())))), (22, (), (10, (42, (), ()), (86, (), ())))), (61, (32, (), (29, (), (44, (51, (), ()), ()))), (95, (91, (67, (), ()), ()), (75, (), (85, (), ())))))".
build_tree65(BT):- BT = node(95, node(26, node(76, node(21, node(93, node(51, empty, empty), empty), node(88, empty, node(51, empty, empty))), node(72, node(73, empty, node(89, empty, empty)), empty)), node(94, node(99, node(92, empty, node(13, empty, empty)), node(56, empty, node(10, empty, node(73, empty, empty)))), node(59, node(60, empty, empty), node(79, node(99, node(27, empty, empty), node(29, empty, empty)), empty)))), node(40, node(30, node(21, node(29, empty, empty), node(86, node(68, empty, empty), empty)), node(87, empty, empty)), node(65, node(36, node(70, empty, empty), node(35, node(1, empty, empty), empty)), node(3, empty, node(2, node(65, empty, empty), empty))))).
get_size65(N):- N = 39.
get_height65(N):- N = 7.
get_inorder65(L):- L = [51, 93, 21, 88, 51, 76, 73, 89, 72, 26, 92, 13, 99, 56, 10, 73, 94, 60, 59, 27, 99, 29, 79, 95, 29, 21, 68, 86, 30, 87, 40, 70, 36, 1, 35, 65, 3, 65, 2].
get_postorder65(L):- L = [51, 93, 51, 88, 21, 89, 73, 72, 76, 13, 92, 73, 10, 56, 99, 60, 27, 29, 99, 79, 59, 94, 26, 29, 68, 86, 21, 87, 30, 70, 1, 35, 36, 65, 2, 3, 65, 40, 95].
get_preorder65(L):- L = [95, 26, 76, 21, 93, 51, 88, 51, 72, 73, 89, 94, 99, 92, 13, 56, 10, 73, 59, 60, 79, 99, 27, 29, 40, 30, 21, 29, 86, 68, 87, 65, 36, 70, 35, 1, 3, 2, 65].
get_tour65(L):- L = [95, 26, 76, 21, 93, 51, 51, 51, 93, 93, 21, 88, 88, 51, 51, 51, 88, 21, 76, 72, 73, 73, 89, 89, 89, 73, 72, 72, 76, 26, 94, 99, 92, 92, 13, 13, 13, 92, 99, 56, 56, 10, 10, 73, 73, 73, 10, 56, 99, 94, 59, 60, 60, 60, 59, 79, 99, 27, 27, 27, 99, 29, 29, 29, 99, 79, 79, 59, 94, 26, 95, 40, 30, 21, 29, 29, 29, 21, 86, 68, 68, 68, 86, 86, 21, 30, 87, 87, 87, 30, 40, 65, 36, 70, 70, 70, 36, 35, 1, 1, 1, 35, 35, 36, 65, 3, 3, 2, 65, 65, 65, 2, 2, 3, 65, 40, 95].
is_balanced65:- fail.
get_string65(S):- S = "(95, (26, (76, (21, (93, (51, (), ()), ()), (88, (), (51, (), ()))), (72, (73, (), (89, (), ())), ())), (94, (99, (92, (), (13, (), ())), (56, (), (10, (), (73, (), ())))), (59, (60, (), ()), (79, (99, (27, (), ()), (29, (), ())), ())))), (40, (30, (21, (29, (), ()), (86, (68, (), ()), ())), (87, (), ())), (65, (36, (70, (), ()), (35, (1, (), ()), ())), (3, (), (2, (65, (), ()), ())))))".
build_tree66(BT):- BT = node(26, node(32, node(73, node(94, empty, node(61, empty, empty)), node(89, empty, empty)), node(24, node(9, node(94, empty, empty), empty), empty)), node(84, node(61, node(20, empty, node(80, node(27, empty, empty), empty)), node(78, empty, empty)), node(51, empty, node(24, node(40, empty, empty), node(75, node(94, empty, empty), node(37, empty, empty)))))).
get_size66(N):- N = 21.
get_height66(N):- N = 6.
get_inorder66(L):- L = [94, 61, 73, 89, 32, 94, 9, 24, 26, 20, 27, 80, 61, 78, 84, 51, 40, 24, 94, 75, 37].
get_postorder66(L):- L = [61, 94, 89, 73, 94, 9, 24, 32, 27, 80, 20, 78, 61, 40, 94, 37, 75, 24, 51, 84, 26].
get_preorder66(L):- L = [26, 32, 73, 94, 61, 89, 24, 9, 94, 84, 61, 20, 80, 27, 78, 51, 24, 40, 75, 94, 37].
get_tour66(L):- L = [26, 32, 73, 94, 94, 61, 61, 61, 94, 73, 89, 89, 89, 73, 32, 24, 9, 94, 94, 94, 9, 9, 24, 24, 32, 26, 84, 61, 20, 20, 80, 27, 27, 27, 80, 80, 20, 61, 78, 78, 78, 61, 84, 51, 51, 24, 40, 40, 40, 24, 75, 94, 94, 94, 75, 37, 37, 37, 75, 24, 51, 84, 26].
is_balanced66:- fail.
get_string66(S):- S = "(26, (32, (73, (94, (), (61, (), ())), (89, (), ())), (24, (9, (94, (), ()), ()), ())), (84, (61, (20, (), (80, (27, (), ()), ())), (78, (), ())), (51, (), (24, (40, (), ()), (75, (94, (), ()), (37, (), ()))))))".
build_tree67(BT):- BT = node(45, node(57, node(18, node(86, node(90, empty, empty), node(80, empty, empty)), node(9, node(37, empty, empty), node(43, node(44, empty, empty), node(30, empty, empty)))), node(39, node(29, node(68, empty, empty), node(24, node(91, node(43, empty, empty), empty), empty)), node(68, node(26, empty, empty), node(76, empty, empty)))), node(39, node(70, node(97, empty, node(97, empty, node(54, empty, empty))), node(59, node(63, empty, empty), empty)), node(98, node(40, node(4, empty, empty), node(86, empty, empty)), node(95, empty, node(39, empty, empty))))).
get_size67(N):- N = 33.
get_height67(N):- N = 7.
get_inorder67(L):- L = [90, 86, 80, 18, 37, 9, 44, 43, 30, 57, 68, 29, 43, 91, 24, 39, 26, 68, 76, 45, 97, 97, 54, 70, 63, 59, 39, 4, 40, 86, 98, 95, 39].
get_postorder67(L):- L = [90, 80, 86, 37, 44, 30, 43, 9, 18, 68, 43, 91, 24, 29, 26, 76, 68, 39, 57, 54, 97, 97, 63, 59, 70, 4, 86, 40, 39, 95, 98, 39, 45].
get_preorder67(L):- L = [45, 57, 18, 86, 90, 80, 9, 37, 43, 44, 30, 39, 29, 68, 24, 91, 43, 68, 26, 76, 39, 70, 97, 97, 54, 59, 63, 98, 40, 4, 86, 95, 39].
get_tour67(L):- L = [45, 57, 18, 86, 90, 90, 90, 86, 80, 80, 80, 86, 18, 9, 37, 37, 37, 9, 43, 44, 44, 44, 43, 30, 30, 30, 43, 9, 18, 57, 39, 29, 68, 68, 68, 29, 24, 91, 43, 43, 43, 91, 91, 24, 24, 29, 39, 68, 26, 26, 26, 68, 76, 76, 76, 68, 39, 57, 45, 39, 70, 97, 97, 97, 97, 54, 54, 54, 97, 97, 70, 59, 63, 63, 63, 59, 59, 70, 39, 98, 40, 4, 4, 4, 40, 86, 86, 86, 40, 98, 95, 95, 39, 39, 39, 95, 98, 39, 45].
is_balanced67:- fail.
get_string67(S):- S = "(45, (57, (18, (86, (90, (), ()), (80, (), ())), (9, (37, (), ()), (43, (44, (), ()), (30, (), ())))), (39, (29, (68, (), ()), (24, (91, (43, (), ()), ()), ())), (68, (26, (), ()), (76, (), ())))), (39, (70, (97, (), (97, (), (54, (), ()))), (59, (63, (), ()), ())), (98, (40, (4, (), ()), (86, (), ())), (95, (), (39, (), ())))))".
build_tree68(BT):- BT = node(52, node(85, node(42, node(2, node(77, empty, empty), node(44, empty, empty)), empty), node(99, node(44, empty, node(81, empty, node(62, empty, empty))), empty)), node(98, node(58, node(9, empty, node(85, empty, empty)), node(61, node(87, empty, empty), node(42, empty, empty))), node(96, node(58, node(19, empty, empty), node(76, node(64, empty, empty), empty)), node(77, empty, empty)))).
get_size68(N):- N = 23.
get_height68(N):- N = 6.
get_inorder68(L):- L = [77, 2, 44, 42, 85, 44, 81, 62, 99, 52, 9, 85, 58, 87, 61, 42, 98, 19, 58, 64, 76, 96, 77].
get_postorder68(L):- L = [77, 44, 2, 42, 62, 81, 44, 99, 85, 85, 9, 87, 42, 61, 58, 19, 64, 76, 58, 77, 96, 98, 52].
get_preorder68(L):- L = [52, 85, 42, 2, 77, 44, 99, 44, 81, 62, 98, 58, 9, 85, 61, 87, 42, 96, 58, 19, 76, 64, 77].
get_tour68(L):- L = [52, 85, 42, 2, 77, 77, 77, 2, 44, 44, 44, 2, 42, 42, 85, 99, 44, 44, 81, 81, 62, 62, 62, 81, 44, 99, 99, 85, 52, 98, 58, 9, 9, 85, 85, 85, 9, 58, 61, 87, 87, 87, 61, 42, 42, 42, 61, 58, 98, 96, 58, 19, 19, 19, 58, 76, 64, 64, 64, 76, 76, 58, 96, 77, 77, 77, 96, 98, 52].
is_balanced68:- fail.
get_string68(S):- S = "(52, (85, (42, (2, (77, (), ()), (44, (), ())), ()), (99, (44, (), (81, (), (62, (), ()))), ())), (98, (58, (9, (), (85, (), ())), (61, (87, (), ()), (42, (), ()))), (96, (58, (19, (), ()), (76, (64, (), ()), ())), (77, (), ()))))".
build_tree69(BT):- BT = node(54, node(62, node(58, node(6, node(84, empty, empty), node(76, empty, empty)), node(27, node(38, empty, empty), node(44, empty, empty))), node(42, node(94, node(62, empty, empty), empty), node(6, node(57, empty, empty), node(9, empty, empty)))), node(86, node(94, node(85, node(6, node(26, empty, empty), empty), node(55, empty, empty)), node(69, node(72, empty, node(4, empty, empty)), node(7, empty, empty))), node(21, node(46, empty, node(15, node(66, empty, empty), empty)), empty))).
get_size69(N):- N = 29.
get_height69(N):- N = 6.
get_inorder69(L):- L = [84, 6, 76, 58, 38, 27, 44, 62, 62, 94, 42, 57, 6, 9, 54, 26, 6, 85, 55, 94, 72, 4, 69, 7, 86, 46, 66, 15, 21].
get_postorder69(L):- L = [84, 76, 6, 38, 44, 27, 58, 62, 94, 57, 9, 6, 42, 62, 26, 6, 55, 85, 4, 72, 7, 69, 94, 66, 15, 46, 21, 86, 54].
get_preorder69(L):- L = [54, 62, 58, 6, 84, 76, 27, 38, 44, 42, 94, 62, 6, 57, 9, 86, 94, 85, 6, 26, 55, 69, 72, 4, 7, 21, 46, 15, 66].
get_tour69(L):- L = [54, 62, 58, 6, 84, 84, 84, 6, 76, 76, 76, 6, 58, 27, 38, 38, 38, 27, 44, 44, 44, 27, 58, 62, 42, 94, 62, 62, 62, 94, 94, 42, 6, 57, 57, 57, 6, 9, 9, 9, 6, 42, 62, 54, 86, 94, 85, 6, 26, 26, 26, 6, 6, 85, 55, 55, 55, 85, 94, 69, 72, 72, 4, 4, 4, 72, 69, 7, 7, 7, 69, 94, 86, 21, 46, 46, 15, 66, 66, 66, 15, 15, 46, 21, 21, 86, 54].
is_balanced69:- fail.
get_string69(S):- S = "(54, (62, (58, (6, (84, (), ()), (76, (), ())), (27, (38, (), ()), (44, (), ()))), (42, (94, (62, (), ()), ()), (6, (57, (), ()), (9, (), ())))), (86, (94, (85, (6, (26, (), ()), ()), (55, (), ())), (69, (72, (), (4, (), ())), (7, (), ()))), (21, (46, (), (15, (66, (), ()), ())), ())))".
build_tree70(BT):- BT = node(87, node(53, node(95, node(56, node(55, node(80, empty, empty), empty), node(18, empty, empty)), node(95, node(24, empty, empty), node(22, empty, node(28, node(16, empty, empty), empty)))), node(26, node(48, node(42, empty, empty), node(12, empty, node(30, empty, node(6, empty, node(27, empty, empty))))), node(95, node(55, empty, empty), node(58, empty, empty)))), node(84, node(78, node(97, empty, node(52, empty, empty)), node(75, empty, node(93, empty, empty))), node(35, node(86, node(44, node(80, empty, empty), node(42, empty, empty)), node(33, empty, node(93, empty, empty))), node(50, empty, empty)))).
get_size70(N):- N = 36.
get_height70(N):- N = 8.
get_inorder70(L):- L = [80, 55, 56, 18, 95, 24, 95, 22, 16, 28, 53, 42, 48, 12, 30, 6, 27, 26, 55, 95, 58, 87, 97, 52, 78, 75, 93, 84, 80, 44, 42, 86, 33, 93, 35, 50].
get_postorder70(L):- L = [80, 55, 18, 56, 24, 16, 28, 22, 95, 95, 42, 27, 6, 30, 12, 48, 55, 58, 95, 26, 53, 52, 97, 93, 75, 78, 80, 42, 44, 93, 33, 86, 50, 35, 84, 87].
get_preorder70(L):- L = [87, 53, 95, 56, 55, 80, 18, 95, 24, 22, 28, 16, 26, 48, 42, 12, 30, 6, 27, 95, 55, 58, 84, 78, 97, 52, 75, 93, 35, 86, 44, 80, 42, 33, 93, 50].
get_tour70(L):- L = [87, 53, 95, 56, 55, 80, 80, 80, 55, 55, 56, 18, 18, 18, 56, 95, 95, 24, 24, 24, 95, 22, 22, 28, 16, 16, 16, 28, 28, 22, 95, 95, 53, 26, 48, 42, 42, 42, 48, 12, 12, 30, 30, 6, 6, 27, 27, 27, 6, 30, 12, 48, 26, 95, 55, 55, 55, 95, 58, 58, 58, 95, 26, 53, 87, 84, 78, 97, 97, 52, 52, 52, 97, 78, 75, 75, 93, 93, 93, 75, 78, 84, 35, 86, 44, 80, 80, 80, 44, 42, 42, 42, 44, 86, 33, 33, 93, 93, 93, 33, 86, 35, 50, 50, 50, 35, 84, 87].
is_balanced70:- fail.
get_string70(S):- S = "(87, (53, (95, (56, (55, (80, (), ()), ()), (18, (), ())), (95, (24, (), ()), (22, (), (28, (16, (), ()), ())))), (26, (48, (42, (), ()), (12, (), (30, (), (6, (), (27, (), ()))))), (95, (55, (), ()), (58, (), ())))), (84, (78, (97, (), (52, (), ())), (75, (), (93, (), ()))), (35, (86, (44, (80, (), ()), (42, (), ())), (33, (), (93, (), ()))), (50, (), ()))))".
build_tree71(BT):- BT = node(40, node(59, node(79, node(22, empty, node(4, node(76, node(27, empty, empty), empty), node(94, empty, empty))), node(85, node(26, node(96, empty, node(24, empty, empty)), empty), node(36, empty, empty))), node(63, node(43, node(41, empty, empty), node(2, empty, empty)), node(13, node(64, empty, empty), node(64, empty, empty)))), node(24, node(27, node(54, empty, empty), node(75, node(93, empty, empty), empty)), node(32, node(1, node(2, empty, node(44, empty, empty)), node(92, node(74, empty, empty), empty)), node(53, node(10, empty, empty), empty)))).
get_size71(N):- N = 33.
get_height71(N):- N = 7.
get_inorder71(L):- L = [22, 27, 76, 4, 94, 79, 96, 24, 26, 85, 36, 59, 41, 43, 2, 63, 64, 13, 64, 40, 54, 27, 93, 75, 24, 2, 44, 1, 74, 92, 32, 10, 53].
get_postorder71(L):- L = [27, 76, 94, 4, 22, 24, 96, 26, 36, 85, 79, 41, 2, 43, 64, 64, 13, 63, 59, 54, 93, 75, 27, 44, 2, 74, 92, 1, 10, 53, 32, 24, 40].
get_preorder71(L):- L = [40, 59, 79, 22, 4, 76, 27, 94, 85, 26, 96, 24, 36, 63, 43, 41, 2, 13, 64, 64, 24, 27, 54, 75, 93, 32, 1, 2, 44, 92, 74, 53, 10].
get_tour71(L):- L = [40, 59, 79, 22, 22, 4, 76, 27, 27, 27, 76, 76, 4, 94, 94, 94, 4, 22, 79, 85, 26, 96, 96, 24, 24, 24, 96, 26, 26, 85, 36, 36, 36, 85, 79, 59, 63, 43, 41, 41, 41, 43, 2, 2, 2, 43, 63, 13, 64, 64, 64, 13, 64, 64, 64, 13, 63, 59, 40, 24, 27, 54, 54, 54, 27, 75, 93, 93, 93, 75, 75, 27, 24, 32, 1, 2, 2, 44, 44, 44, 2, 1, 92, 74, 74, 74, 92, 92, 1, 32, 53, 10, 10, 10, 53, 53, 32, 24, 40].
is_balanced71:- fail.
get_string71(S):- S = "(40, (59, (79, (22, (), (4, (76, (27, (), ()), ()), (94, (), ()))), (85, (26, (96, (), (24, (), ())), ()), (36, (), ()))), (63, (43, (41, (), ()), (2, (), ())), (13, (64, (), ()), (64, (), ())))), (24, (27, (54, (), ()), (75, (93, (), ()), ())), (32, (1, (2, (), (44, (), ())), (92, (74, (), ()), ())), (53, (10, (), ()), ()))))".
build_tree72(BT):- BT = node(79, node(20, node(27, node(17, node(81, empty, empty), node(89, node(70, empty, empty), empty)), node(22, node(11, empty, node(31, empty, empty)), empty)), node(51, node(11, node(35, empty, empty), node(66, empty, empty)), node(85, node(36, node(29, empty, empty), empty), node(69, node(37, empty, empty), empty)))), node(60, node(8, node(98, empty, node(64, node(77, empty, node(28, empty, node(92, empty, empty))), empty)), node(12, empty, empty)), node(19, node(81, node(69, node(97, empty, empty), empty), node(31, empty, empty)), node(88, node(66, empty, node(41, node(34, empty, empty), empty)), node(4, node(26, empty, node(23, empty, empty)), empty))))).
get_size72(N):- N = 39.
get_height72(N):- N = 8.
get_inorder72(L):- L = [81, 17, 70, 89, 27, 11, 31, 22, 20, 35, 11, 66, 51, 29, 36, 85, 37, 69, 79, 98, 77, 28, 92, 64, 8, 12, 60, 97, 69, 81, 31, 19, 66, 34, 41, 88, 26, 23, 4].
get_postorder72(L):- L = [81, 70, 89, 17, 31, 11, 22, 27, 35, 66, 11, 29, 36, 37, 69, 85, 51, 20, 92, 28, 77, 64, 98, 12, 8, 97, 69, 31, 81, 34, 41, 66, 23, 26, 4, 88, 19, 60, 79].
get_preorder72(L):- L = [79, 20, 27, 17, 81, 89, 70, 22, 11, 31, 51, 11, 35, 66, 85, 36, 29, 69, 37, 60, 8, 98, 64, 77, 28, 92, 12, 19, 81, 69, 97, 31, 88, 66, 41, 34, 4, 26, 23].
get_tour72(L):- L = [79, 20, 27, 17, 81, 81, 81, 17, 89, 70, 70, 70, 89, 89, 17, 27, 22, 11, 11, 31, 31, 31, 11, 22, 22, 27, 20, 51, 11, 35, 35, 35, 11, 66, 66, 66, 11, 51, 85, 36, 29, 29, 29, 36, 36, 85, 69, 37, 37, 37, 69, 69, 85, 51, 20, 79, 60, 8, 98, 98, 64, 77, 77, 28, 28, 92, 92, 92, 28, 77, 64, 64, 98, 8, 12, 12, 12, 8, 60, 19, 81, 69, 97, 97, 97, 69, 69, 81, 31, 31, 31, 81, 19, 88, 66, 66, 41, 34, 34, 34, 41, 41, 66, 88, 4, 26, 26, 23, 23, 23, 26, 4, 4, 88, 19, 60, 79].
is_balanced72:- fail.
get_string72(S):- S = "(79, (20, (27, (17, (81, (), ()), (89, (70, (), ()), ())), (22, (11, (), (31, (), ())), ())), (51, (11, (35, (), ()), (66, (), ())), (85, (36, (29, (), ()), ()), (69, (37, (), ()), ())))), (60, (8, (98, (), (64, (77, (), (28, (), (92, (), ()))), ())), (12, (), ())), (19, (81, (69, (97, (), ()), ()), (31, (), ())), (88, (66, (), (41, (34, (), ()), ())), (4, (26, (), (23, (), ())), ())))))".
build_tree73(BT):- BT = node(67, node(64, node(69, node(30, node(71, empty, empty), node(74, node(5, empty, empty), empty)), node(94, node(43, empty, empty), node(96, empty, node(10, empty, empty)))), node(47, node(25, empty, empty), empty)), node(72, node(84, node(48, node(9, node(58, node(44, empty, empty), empty), empty), node(37, empty, empty)), node(98, node(49, node(24, empty, empty), node(94, empty, empty)), node(55, empty, empty))), node(81, node(5, node(76, empty, node(84, empty, empty)), node(70, empty, empty)), node(45, node(16, empty, node(14, empty, empty)), node(79, empty, node(72, empty, empty)))))).
get_size73(N):- N = 35.
get_height73(N):- N = 7.
get_inorder73(L):- L = [71, 30, 5, 74, 69, 43, 94, 96, 10, 64, 25, 47, 67, 44, 58, 9, 48, 37, 84, 24, 49, 94, 98, 55, 72, 76, 84, 5, 70, 81, 16, 14, 45, 79, 72].
get_postorder73(L):- L = [71, 5, 74, 30, 43, 10, 96, 94, 69, 25, 47, 64, 44, 58, 9, 37, 48, 24, 94, 49, 55, 98, 84, 84, 76, 70, 5, 14, 16, 72, 79, 45, 81, 72, 67].
get_preorder73(L):- L = [67, 64, 69, 30, 71, 74, 5, 94, 43, 96, 10, 47, 25, 72, 84, 48, 9, 58, 44, 37, 98, 49, 24, 94, 55, 81, 5, 76, 84, 70, 45, 16, 14, 79, 72].
get_tour73(L):- L = [67, 64, 69, 30, 71, 71, 71, 30, 74, 5, 5, 5, 74, 74, 30, 69, 94, 43, 43, 43, 94, 96, 96, 10, 10, 10, 96, 94, 69, 64, 47, 25, 25, 25, 47, 47, 64, 67, 72, 84, 48, 9, 58, 44, 44, 44, 58, 58, 9, 9, 48, 37, 37, 37, 48, 84, 98, 49, 24, 24, 24, 49, 94, 94, 94, 49, 98, 55, 55, 55, 98, 84, 72, 81, 5, 76, 76, 84, 84, 84, 76, 5, 70, 70, 70, 5, 81, 45, 16, 16, 14, 14, 14, 16, 45, 79, 79, 72, 72, 72, 79, 45, 81, 72, 67].
is_balanced73:- fail.
get_string73(S):- S = "(67, (64, (69, (30, (71, (), ()), (74, (5, (), ()), ())), (94, (43, (), ()), (96, (), (10, (), ())))), (47, (25, (), ()), ())), (72, (84, (48, (9, (58, (44, (), ()), ()), ()), (37, (), ())), (98, (49, (24, (), ()), (94, (), ())), (55, (), ()))), (81, (5, (76, (), (84, (), ())), (70, (), ())), (45, (16, (), (14, (), ())), (79, (), (72, (), ()))))))".
build_tree74(BT):- BT = node(66, node(47, node(51, node(7, empty, node(94, empty, empty)), node(57, empty, node(40, empty, node(79, empty, empty)))), node(3, node(4, empty, node(65, empty, empty)), node(45, node(94, empty, empty), node(16, empty, node(33, empty, empty))))), node(49, node(35, node(87, node(99, empty, node(42, empty, node(1, empty, empty))), empty), node(97, node(85, empty, empty), empty)), node(50, node(87, node(16, empty, node(83, empty, empty)), empty), node(56, node(9, empty, empty), empty)))).
get_size74(N):- N = 29.
get_height74(N):- N = 7.
get_inorder74(L):- L = [7, 94, 51, 57, 40, 79, 47, 4, 65, 3, 94, 45, 16, 33, 66, 99, 42, 1, 87, 35, 85, 97, 49, 16, 83, 87, 50, 9, 56].
get_postorder74(L):- L = [94, 7, 79, 40, 57, 51, 65, 4, 94, 33, 16, 45, 3, 47, 1, 42, 99, 87, 85, 97, 35, 83, 16, 87, 9, 56, 50, 49, 66].
get_preorder74(L):- L = [66, 47, 51, 7, 94, 57, 40, 79, 3, 4, 65, 45, 94, 16, 33, 49, 35, 87, 99, 42, 1, 97, 85, 50, 87, 16, 83, 56, 9].
get_tour74(L):- L = [66, 47, 51, 7, 7, 94, 94, 94, 7, 51, 57, 57, 40, 40, 79, 79, 79, 40, 57, 51, 47, 3, 4, 4, 65, 65, 65, 4, 3, 45, 94, 94, 94, 45, 16, 16, 33, 33, 33, 16, 45, 3, 47, 66, 49, 35, 87, 99, 99, 42, 42, 1, 1, 1, 42, 99, 87, 87, 35, 97, 85, 85, 85, 97, 97, 35, 49, 50, 87, 16, 16, 83, 83, 83, 16, 87, 87, 50, 56, 9, 9, 9, 56, 56, 50, 49, 66].
is_balanced74:- fail.
get_string74(S):- S = "(66, (47, (51, (7, (), (94, (), ())), (57, (), (40, (), (79, (), ())))), (3, (4, (), (65, (), ())), (45, (94, (), ()), (16, (), (33, (), ()))))), (49, (35, (87, (99, (), (42, (), (1, (), ()))), ()), (97, (85, (), ()), ())), (50, (87, (16, (), (83, (), ())), ()), (56, (9, (), ()), ()))))".
build_tree75(BT):- BT = node(86, node(40, node(83, node(16, empty, node(9, node(10, empty, empty), empty)), node(31, node(19, empty, empty), node(10, empty, empty))), node(53, node(62, empty, empty), node(98, node(46, empty, empty), node(38, empty, empty)))), node(26, node(30, node(91, node(81, empty, empty), node(65, node(7, node(95, empty, empty), empty), empty)), node(58, node(97, empty, empty), node(37, empty, empty))), node(91, node(3, node(6, node(88, empty, empty), node(4, empty, empty)), node(52, empty, node(46, empty, empty))), node(75, node(30, node(93, empty, empty), node(59, empty, empty)), node(60, empty, node(26, empty, empty)))))).
get_size75(N):- N = 37.
get_height75(N):- N = 7.
get_inorder75(L):- L = [16, 10, 9, 83, 19, 31, 10, 40, 62, 53, 46, 98, 38, 86, 81, 91, 95, 7, 65, 30, 97, 58, 37, 26, 88, 6, 4, 3, 52, 46, 91, 93, 30, 59, 75, 60, 26].
get_postorder75(L):- L = [10, 9, 16, 19, 10, 31, 83, 62, 46, 38, 98, 53, 40, 81, 95, 7, 65, 91, 97, 37, 58, 30, 88, 4, 6, 46, 52, 3, 93, 59, 30, 26, 60, 75, 91, 26, 86].
get_preorder75(L):- L = [86, 40, 83, 16, 9, 10, 31, 19, 10, 53, 62, 98, 46, 38, 26, 30, 91, 81, 65, 7, 95, 58, 97, 37, 91, 3, 6, 88, 4, 52, 46, 75, 30, 93, 59, 60, 26].
get_tour75(L):- L = [86, 40, 83, 16, 16, 9, 10, 10, 10, 9, 9, 16, 83, 31, 19, 19, 19, 31, 10, 10, 10, 31, 83, 40, 53, 62, 62, 62, 53, 98, 46, 46, 46, 98, 38, 38, 38, 98, 53, 40, 86, 26, 30, 91, 81, 81, 81, 91, 65, 7, 95, 95, 95, 7, 7, 65, 65, 91, 30, 58, 97, 97, 97, 58, 37, 37, 37, 58, 30, 26, 91, 3, 6, 88, 88, 88, 6, 4, 4, 4, 6, 3, 52, 52, 46, 46, 46, 52, 3, 91, 75, 30, 93, 93, 93, 30, 59, 59, 59, 30, 75, 60, 60, 26, 26, 26, 60, 75, 91, 26, 86].
is_balanced75:- fail.
get_string75(S):- S = "(86, (40, (83, (16, (), (9, (10, (), ()), ())), (31, (19, (), ()), (10, (), ()))), (53, (62, (), ()), (98, (46, (), ()), (38, (), ())))), (26, (30, (91, (81, (), ()), (65, (7, (95, (), ()), ()), ())), (58, (97, (), ()), (37, (), ()))), (91, (3, (6, (88, (), ()), (4, (), ())), (52, (), (46, (), ()))), (75, (30, (93, (), ()), (59, (), ())), (60, (), (26, (), ()))))))".
build_tree76(BT):- BT = node(22, node(83, node(40, node(73, node(83, empty, empty), node(59, node(50, empty, empty), empty)), empty), node(35, node(8, empty, node(29, empty, empty)), node(97, node(40, empty, empty), node(79, empty, empty)))), node(49, node(50, node(26, node(19, node(92, empty, empty), empty), node(87, empty, empty)), node(26, empty, empty)), node(2, node(19, node(58, node(24, empty, empty), empty), node(35, empty, node(59, empty, empty))), node(76, node(45, node(11, node(73, empty, empty), empty), node(29, empty, empty)), empty)))).
get_size76(N):- N = 31.
get_height76(N):- N = 7.
get_inorder76(L):- L = [83, 73, 50, 59, 40, 83, 8, 29, 35, 40, 97, 79, 22, 92, 19, 26, 87, 50, 26, 49, 24, 58, 19, 35, 59, 2, 73, 11, 45, 29, 76].
get_postorder76(L):- L = [83, 50, 59, 73, 40, 29, 8, 40, 79, 97, 35, 83, 92, 19, 87, 26, 26, 50, 24, 58, 59, 35, 19, 73, 11, 29, 45, 76, 2, 49, 22].
get_preorder76(L):- L = [22, 83, 40, 73, 83, 59, 50, 35, 8, 29, 97, 40, 79, 49, 50, 26, 19, 92, 87, 26, 2, 19, 58, 24, 35, 59, 76, 45, 11, 73, 29].
get_tour76(L):- L = [22, 83, 40, 73, 83, 83, 83, 73, 59, 50, 50, 50, 59, 59, 73, 40, 40, 83, 35, 8, 8, 29, 29, 29, 8, 35, 97, 40, 40, 40, 97, 79, 79, 79, 97, 35, 83, 22, 49, 50, 26, 19, 92, 92, 92, 19, 19, 26, 87, 87, 87, 26, 50, 26, 26, 26, 50, 49, 2, 19, 58, 24, 24, 24, 58, 58, 19, 35, 35, 59, 59, 59, 35, 19, 2, 76, 45, 11, 73, 73, 73, 11, 11, 45, 29, 29, 29, 45, 76, 76, 2, 49, 22].
is_balanced76:- fail.
get_string76(S):- S = "(22, (83, (40, (73, (83, (), ()), (59, (50, (), ()), ())), ()), (35, (8, (), (29, (), ())), (97, (40, (), ()), (79, (), ())))), (49, (50, (26, (19, (92, (), ()), ()), (87, (), ())), (26, (), ())), (2, (19, (58, (24, (), ()), ()), (35, (), (59, (), ()))), (76, (45, (11, (73, (), ()), ()), (29, (), ())), ()))))".
build_tree77(BT):- BT = node(32, node(45, node(56, node(71, node(47, empty, empty), node(54, empty, node(92, empty, empty))), empty), node(42, node(63, node(3, empty, node(74, empty, empty)), node(13, empty, empty)), node(23, node(84, node(99, empty, empty), empty), node(28, node(30, empty, empty), empty)))), node(35, node(4, node(30, node(36, node(8, empty, empty), empty), node(88, empty, node(52, empty, empty))), node(63, node(19, empty, empty), node(3, empty, node(3, empty, empty)))), node(88, node(71, node(88, node(76, empty, empty), node(56, empty, node(71, node(65, empty, empty), empty))), node(4, empty, node(55, empty, empty))), node(87, empty, node(97, node(86, empty, empty), empty))))).
get_size77(N):- N = 40.
get_height77(N):- N = 8.
get_inorder77(L):- L = [47, 71, 54, 92, 56, 45, 3, 74, 63, 13, 42, 99, 84, 23, 30, 28, 32, 8, 36, 30, 88, 52, 4, 19, 63, 3, 3, 35, 76, 88, 56, 65, 71, 71, 4, 55, 88, 87, 86, 97].
get_postorder77(L):- L = [47, 92, 54, 71, 56, 74, 3, 13, 63, 99, 84, 30, 28, 23, 42, 45, 8, 36, 52, 88, 30, 19, 3, 3, 63, 4, 76, 65, 71, 56, 88, 55, 4, 71, 86, 97, 87, 88, 35, 32].
get_preorder77(L):- L = [32, 45, 56, 71, 47, 54, 92, 42, 63, 3, 74, 13, 23, 84, 99, 28, 30, 35, 4, 30, 36, 8, 88, 52, 63, 19, 3, 3, 88, 71, 88, 76, 56, 71, 65, 4, 55, 87, 97, 86].
get_tour77(L):- L = [32, 45, 56, 71, 47, 47, 47, 71, 54, 54, 92, 92, 92, 54, 71, 56, 56, 45, 42, 63, 3, 3, 74, 74, 74, 3, 63, 13, 13, 13, 63, 42, 23, 84, 99, 99, 99, 84, 84, 23, 28, 30, 30, 30, 28, 28, 23, 42, 45, 32, 35, 4, 30, 36, 8, 8, 8, 36, 36, 30, 88, 88, 52, 52, 52, 88, 30, 4, 63, 19, 19, 19, 63, 3, 3, 3, 3, 3, 3, 63, 4, 35, 88, 71, 88, 76, 76, 76, 88, 56, 56, 71, 65, 65, 65, 71, 71, 56, 88, 71, 4, 4, 55, 55, 55, 4, 71, 88, 87, 87, 97, 86, 86, 86, 97, 97, 87, 88, 35, 32].
is_balanced77:- fail.
get_string77(S):- S = "(32, (45, (56, (71, (47, (), ()), (54, (), (92, (), ()))), ()), (42, (63, (3, (), (74, (), ())), (13, (), ())), (23, (84, (99, (), ()), ()), (28, (30, (), ()), ())))), (35, (4, (30, (36, (8, (), ()), ()), (88, (), (52, (), ()))), (63, (19, (), ()), (3, (), (3, (), ())))), (88, (71, (88, (76, (), ()), (56, (), (71, (65, (), ()), ()))), (4, (), (55, (), ()))), (87, (), (97, (86, (), ()), ())))))".
build_tree78(BT):- BT = node(22, node(59, node(60, node(15, empty, empty), node(61, node(31, node(53, empty, empty), node(50, empty, empty)), node(72, empty, empty))), node(34, node(59, empty, node(85, node(11, empty, empty), empty)), node(67, node(16, empty, empty), node(47, empty, empty)))), node(81, node(42, node(96, node(84, empty, empty), node(83, empty, empty)), node(57, empty, empty)), node(86, node(4, node(24, node(7, empty, empty), empty), node(49, empty, node(74, empty, empty))), node(32, empty, empty)))).
get_size78(N):- N = 29.
get_height78(N):- N = 6.
get_inorder78(L):- L = [15, 60, 53, 31, 50, 61, 72, 59, 59, 11, 85, 34, 16, 67, 47, 22, 84, 96, 83, 42, 57, 81, 7, 24, 4, 49, 74, 86, 32].
get_postorder78(L):- L = [15, 53, 50, 31, 72, 61, 60, 11, 85, 59, 16, 47, 67, 34, 59, 84, 83, 96, 57, 42, 7, 24, 74, 49, 4, 32, 86, 81, 22].
get_preorder78(L):- L = [22, 59, 60, 15, 61, 31, 53, 50, 72, 34, 59, 85, 11, 67, 16, 47, 81, 42, 96, 84, 83, 57, 86, 4, 24, 7, 49, 74, 32].
get_tour78(L):- L = [22, 59, 60, 15, 15, 15, 60, 61, 31, 53, 53, 53, 31, 50, 50, 50, 31, 61, 72, 72, 72, 61, 60, 59, 34, 59, 59, 85, 11, 11, 11, 85, 85, 59, 34, 67, 16, 16, 16, 67, 47, 47, 47, 67, 34, 59, 22, 81, 42, 96, 84, 84, 84, 96, 83, 83, 83, 96, 42, 57, 57, 57, 42, 81, 86, 4, 24, 7, 7, 7, 24, 24, 4, 49, 49, 74, 74, 74, 49, 4, 86, 32, 32, 32, 86, 81, 22].
is_balanced78:- fail.
get_string78(S):- S = "(22, (59, (60, (15, (), ()), (61, (31, (53, (), ()), (50, (), ())), (72, (), ()))), (34, (59, (), (85, (11, (), ()), ())), (67, (16, (), ()), (47, (), ())))), (81, (42, (96, (84, (), ()), (83, (), ())), (57, (), ())), (86, (4, (24, (7, (), ()), ()), (49, (), (74, (), ()))), (32, (), ()))))".
build_tree79(BT):- BT = node(65, node(94, node(44, node(6, node(85, empty, empty), empty), node(63, empty, node(41, empty, empty))), node(59, node(19, node(11, node(48, node(60, empty, empty), empty), node(36, empty, empty)), node(52, node(72, empty, node(10, empty, empty)), empty)), node(78, node(27, node(82, empty, node(8, empty, empty)), node(6, empty, empty)), node(17, empty, empty)))), node(6, node(90, node(16, empty, node(97, empty, empty)), node(5, node(46, empty, empty), node(55, empty, empty))), node(35, node(51, node(99, empty, node(69, empty, node(26, empty, empty))), node(43, empty, empty)), node(55, empty, node(71, empty, empty))))).
get_size79(N):- N = 37.
get_height79(N):- N = 7.
get_inorder79(L):- L = [85, 6, 44, 63, 41, 94, 60, 48, 11, 36, 19, 72, 10, 52, 59, 82, 8, 27, 6, 78, 17, 65, 16, 97, 90, 46, 5, 55, 6, 99, 69, 26, 51, 43, 35, 55, 71].
get_postorder79(L):- L = [85, 6, 41, 63, 44, 60, 48, 36, 11, 10, 72, 52, 19, 8, 82, 6, 27, 17, 78, 59, 94, 97, 16, 46, 55, 5, 90, 26, 69, 99, 43, 51, 71, 55, 35, 6, 65].
get_preorder79(L):- L = [65, 94, 44, 6, 85, 63, 41, 59, 19, 11, 48, 60, 36, 52, 72, 10, 78, 27, 82, 8, 6, 17, 6, 90, 16, 97, 5, 46, 55, 35, 51, 99, 69, 26, 43, 55, 71].
get_tour79(L):- L = [65, 94, 44, 6, 85, 85, 85, 6, 6, 44, 63, 63, 41, 41, 41, 63, 44, 94, 59, 19, 11, 48, 60, 60, 60, 48, 48, 11, 36, 36, 36, 11, 19, 52, 72, 72, 10, 10, 10, 72, 52, 52, 19, 59, 78, 27, 82, 82, 8, 8, 8, 82, 27, 6, 6, 6, 27, 78, 17, 17, 17, 78, 59, 94, 65, 6, 90, 16, 16, 97, 97, 97, 16, 90, 5, 46, 46, 46, 5, 55, 55, 55, 5, 90, 6, 35, 51, 99, 99, 69, 69, 26, 26, 26, 69, 99, 51, 43, 43, 43, 51, 35, 55, 55, 71, 71, 71, 55, 35, 6, 65].
is_balanced79:- fail.
get_string79(S):- S = "(65, (94, (44, (6, (85, (), ()), ()), (63, (), (41, (), ()))), (59, (19, (11, (48, (60, (), ()), ()), (36, (), ())), (52, (72, (), (10, (), ())), ())), (78, (27, (82, (), (8, (), ())), (6, (), ())), (17, (), ())))), (6, (90, (16, (), (97, (), ())), (5, (46, (), ()), (55, (), ()))), (35, (51, (99, (), (69, (), (26, (), ()))), (43, (), ())), (55, (), (71, (), ())))))".
build_tree80(BT):- BT = node(22, node(4, node(65, node(68, empty, node(58, empty, empty)), node(75, node(37, node(87, empty, empty), empty), node(80, node(15, empty, empty), node(63, empty, empty)))), node(25, node(96, node(73, empty, node(38, empty, empty)), node(95, empty, node(33, empty, empty))), node(85, node(14, empty, empty), node(63, empty, empty)))), node(30, node(61, node(26, empty, node(67, empty, empty)), node(50, node(38, empty, empty), empty)), node(7, node(91, node(48, empty, empty), node(89, empty, empty)), node(85, node(53, node(41, empty, empty), empty), node(55, empty, empty))))).
get_size80(N):- N = 34.
get_height80(N):- N = 6.
get_inorder80(L):- L = [68, 58, 65, 87, 37, 75, 15, 80, 63, 4, 73, 38, 96, 95, 33, 25, 14, 85, 63, 22, 26, 67, 61, 38, 50, 30, 48, 91, 89, 7, 41, 53, 85, 55].
get_postorder80(L):- L = [58, 68, 87, 37, 15, 63, 80, 75, 65, 38, 73, 33, 95, 96, 14, 63, 85, 25, 4, 67, 26, 38, 50, 61, 48, 89, 91, 41, 53, 55, 85, 7, 30, 22].
get_preorder80(L):- L = [22, 4, 65, 68, 58, 75, 37, 87, 80, 15, 63, 25, 96, 73, 38, 95, 33, 85, 14, 63, 30, 61, 26, 67, 50, 38, 7, 91, 48, 89, 85, 53, 41, 55].
get_tour80(L):- L = [22, 4, 65, 68, 68, 58, 58, 58, 68, 65, 75, 37, 87, 87, 87, 37, 37, 75, 80, 15, 15, 15, 80, 63, 63, 63, 80, 75, 65, 4, 25, 96, 73, 73, 38, 38, 38, 73, 96, 95, 95, 33, 33, 33, 95, 96, 25, 85, 14, 14, 14, 85, 63, 63, 63, 85, 25, 4, 22, 30, 61, 26, 26, 67, 67, 67, 26, 61, 50, 38, 38, 38, 50, 50, 61, 30, 7, 91, 48, 48, 48, 91, 89, 89, 89, 91, 7, 85, 53, 41, 41, 41, 53, 53, 85, 55, 55, 55, 85, 7, 30, 22].
is_balanced80.
get_string80(S):- S = "(22, (4, (65, (68, (), (58, (), ())), (75, (37, (87, (), ()), ()), (80, (15, (), ()), (63, (), ())))), (25, (96, (73, (), (38, (), ())), (95, (), (33, (), ()))), (85, (14, (), ()), (63, (), ())))), (30, (61, (26, (), (67, (), ())), (50, (38, (), ()), ())), (7, (91, (48, (), ()), (89, (), ())), (85, (53, (41, (), ()), ()), (55, (), ())))))".
build_tree81(BT):- BT = node(17, node(45, node(7, node(96, empty, empty), node(13, node(94, node(54, empty, empty), empty), node(49, empty, empty))), node(84, node(31, node(93, empty, node(75, empty, empty)), empty), node(99, node(44, empty, empty), node(13, empty, empty)))), node(84, node(37, node(55, node(81, empty, empty), node(1, node(25, node(25, empty, empty), empty), empty)), node(45, node(40, node(19, empty, empty), empty), node(42, empty, empty))), node(53, node(47, empty, empty), node(77, node(74, empty, empty), node(31, empty, empty))))).
get_size81(N):- N = 31.
get_height81(N):- N = 7.
get_inorder81(L):- L = [96, 7, 54, 94, 13, 49, 45, 93, 75, 31, 84, 44, 99, 13, 17, 81, 55, 25, 25, 1, 37, 19, 40, 45, 42, 84, 47, 53, 74, 77, 31].
get_postorder81(L):- L = [96, 54, 94, 49, 13, 7, 75, 93, 31, 44, 13, 99, 84, 45, 81, 25, 25, 1, 55, 19, 40, 42, 45, 37, 47, 74, 31, 77, 53, 84, 17].
get_preorder81(L):- L = [17, 45, 7, 96, 13, 94, 54, 49, 84, 31, 93, 75, 99, 44, 13, 84, 37, 55, 81, 1, 25, 25, 45, 40, 19, 42, 53, 47, 77, 74, 31].
get_tour81(L):- L = [17, 45, 7, 96, 96, 96, 7, 13, 94, 54, 54, 54, 94, 94, 13, 49, 49, 49, 13, 7, 45, 84, 31, 93, 93, 75, 75, 75, 93, 31, 31, 84, 99, 44, 44, 44, 99, 13, 13, 13, 99, 84, 45, 17, 84, 37, 55, 81, 81, 81, 55, 1, 25, 25, 25, 25, 25, 25, 1, 1, 55, 37, 45, 40, 19, 19, 19, 40, 40, 45, 42, 42, 42, 45, 37, 84, 53, 47, 47, 47, 53, 77, 74, 74, 74, 77, 31, 31, 31, 77, 53, 84, 17].
is_balanced81:- fail.
get_string81(S):- S = "(17, (45, (7, (96, (), ()), (13, (94, (54, (), ()), ()), (49, (), ()))), (84, (31, (93, (), (75, (), ())), ()), (99, (44, (), ()), (13, (), ())))), (84, (37, (55, (81, (), ()), (1, (25, (25, (), ()), ()), ())), (45, (40, (19, (), ()), ()), (42, (), ()))), (53, (47, (), ()), (77, (74, (), ()), (31, (), ())))))".
build_tree82(BT):- BT = node(54, node(11, node(77, node(90, node(24, empty, node(46, empty, empty)), node(29, node(40, empty, empty), empty)), node(52, node(91, empty, empty), empty)), node(93, node(27, node(22, empty, empty), node(75, node(31, node(68, empty, empty), empty), node(72, empty, empty))), node(36, node(71, empty, node(77, empty, empty)), node(99, empty, empty)))), node(32, node(48, node(94, node(45, empty, empty), node(63, node(46, empty, empty), node(75, empty, empty))), node(65, empty, empty)), node(18, node(25, node(97, empty, node(72, empty, empty)), node(82, empty, node(89, empty, empty))), node(30, node(32, empty, node(80, node(1, empty, empty), empty)), node(92, empty, empty))))).
get_size82(N):- N = 40.
get_height82(N):- N = 7.
get_inorder82(L):- L = [24, 46, 90, 40, 29, 77, 91, 52, 11, 22, 27, 68, 31, 75, 72, 93, 71, 77, 36, 99, 54, 45, 94, 46, 63, 75, 48, 65, 32, 97, 72, 25, 82, 89, 18, 32, 1, 80, 30, 92].
get_postorder82(L):- L = [46, 24, 40, 29, 90, 91, 52, 77, 22, 68, 31, 72, 75, 27, 77, 71, 99, 36, 93, 11, 45, 46, 75, 63, 94, 65, 48, 72, 97, 89, 82, 25, 1, 80, 32, 92, 30, 18, 32, 54].
get_preorder82(L):- L = [54, 11, 77, 90, 24, 46, 29, 40, 52, 91, 93, 27, 22, 75, 31, 68, 72, 36, 71, 77, 99, 32, 48, 94, 45, 63, 46, 75, 65, 18, 25, 97, 72, 82, 89, 30, 32, 80, 1, 92].
get_tour82(L):- L = [54, 11, 77, 90, 24, 24, 46, 46, 46, 24, 90, 29, 40, 40, 40, 29, 29, 90, 77, 52, 91, 91, 91, 52, 52, 77, 11, 93, 27, 22, 22, 22, 27, 75, 31, 68, 68, 68, 31, 31, 75, 72, 72, 72, 75, 27, 93, 36, 71, 71, 77, 77, 77, 71, 36, 99, 99, 99, 36, 93, 11, 54, 32, 48, 94, 45, 45, 45, 94, 63, 46, 46, 46, 63, 75, 75, 75, 63, 94, 48, 65, 65, 65, 48, 32, 18, 25, 97, 97, 72, 72, 72, 97, 25, 82, 82, 89, 89, 89, 82, 25, 18, 30, 32, 32, 80, 1, 1, 1, 80, 80, 32, 30, 92, 92, 92, 30, 18, 32, 54].
is_balanced82:- fail.
get_string82(S):- S = "(54, (11, (77, (90, (24, (), (46, (), ())), (29, (40, (), ()), ())), (52, (91, (), ()), ())), (93, (27, (22, (), ()), (75, (31, (68, (), ()), ()), (72, (), ()))), (36, (71, (), (77, (), ())), (99, (), ())))), (32, (48, (94, (45, (), ()), (63, (46, (), ()), (75, (), ()))), (65, (), ())), (18, (25, (97, (), (72, (), ())), (82, (), (89, (), ()))), (30, (32, (), (80, (1, (), ()), ())), (92, (), ())))))".
build_tree83(BT):- BT = node(7, node(38, node(50, node(68, node(93, empty, empty), node(44, empty, empty)), node(69, empty, node(32, empty, node(32, empty, empty)))), node(64, node(13, node(26, empty, empty), node(56, node(24, node(36, empty, empty), empty), empty)), node(6, node(21, empty, empty), node(26, empty, empty)))), node(42, node(66, node(64, empty, node(94, empty, empty)), node(52, empty, node(98, empty, empty))), node(14, node(92, node(86, empty, empty), empty), node(59, empty, empty)))).
get_size83(N):- N = 28.
get_height83(N):- N = 7.
get_inorder83(L):- L = [93, 68, 44, 50, 69, 32, 32, 38, 26, 13, 36, 24, 56, 64, 21, 6, 26, 7, 64, 94, 66, 52, 98, 42, 86, 92, 14, 59].
get_postorder83(L):- L = [93, 44, 68, 32, 32, 69, 50, 26, 36, 24, 56, 13, 21, 26, 6, 64, 38, 94, 64, 98, 52, 66, 86, 92, 59, 14, 42, 7].
get_preorder83(L):- L = [7, 38, 50, 68, 93, 44, 69, 32, 32, 64, 13, 26, 56, 24, 36, 6, 21, 26, 42, 66, 64, 94, 52, 98, 14, 92, 86, 59].
get_tour83(L):- L = [7, 38, 50, 68, 93, 93, 93, 68, 44, 44, 44, 68, 50, 69, 69, 32, 32, 32, 32, 32, 32, 69, 50, 38, 64, 13, 26, 26, 26, 13, 56, 24, 36, 36, 36, 24, 24, 56, 56, 13, 64, 6, 21, 21, 21, 6, 26, 26, 26, 6, 64, 38, 7, 42, 66, 64, 64, 94, 94, 94, 64, 66, 52, 52, 98, 98, 98, 52, 66, 42, 14, 92, 86, 86, 86, 92, 92, 14, 59, 59, 59, 14, 42, 7].
is_balanced83:- fail.
get_string83(S):- S = "(7, (38, (50, (68, (93, (), ()), (44, (), ())), (69, (), (32, (), (32, (), ())))), (64, (13, (26, (), ()), (56, (24, (36, (), ()), ()), ())), (6, (21, (), ()), (26, (), ())))), (42, (66, (64, (), (94, (), ())), (52, (), (98, (), ()))), (14, (92, (86, (), ()), ()), (59, (), ()))))".
build_tree84(BT):- BT = node(46, node(6, node(32, node(14, node(57, empty, empty), empty), node(32, empty, empty)), node(9, node(92, empty, node(58, empty, empty)), node(23, node(33, node(18, empty, node(7, empty, empty)), empty), node(51, empty, empty)))), node(91, node(51, node(66, node(3, empty, empty), empty), node(89, node(34, empty, empty), node(81, empty, empty))), node(51, node(9, node(53, empty, empty), node(15, empty, empty)), node(68, empty, node(40, empty, empty))))).
get_size84(N):- N = 27.
get_height84(N):- N = 7.
get_inorder84(L):- L = [57, 14, 32, 32, 6, 92, 58, 9, 18, 7, 33, 23, 51, 46, 3, 66, 51, 34, 89, 81, 91, 53, 9, 15, 51, 68, 40].
get_postorder84(L):- L = [57, 14, 32, 32, 58, 92, 7, 18, 33, 51, 23, 9, 6, 3, 66, 34, 81, 89, 51, 53, 15, 9, 40, 68, 51, 91, 46].
get_preorder84(L):- L = [46, 6, 32, 14, 57, 32, 9, 92, 58, 23, 33, 18, 7, 51, 91, 51, 66, 3, 89, 34, 81, 51, 9, 53, 15, 68, 40].
get_tour84(L):- L = [46, 6, 32, 14, 57, 57, 57, 14, 14, 32, 32, 32, 32, 32, 6, 9, 92, 92, 58, 58, 58, 92, 9, 23, 33, 18, 18, 7, 7, 7, 18, 33, 33, 23, 51, 51, 51, 23, 9, 6, 46, 91, 51, 66, 3, 3, 3, 66, 66, 51, 89, 34, 34, 34, 89, 81, 81, 81, 89, 51, 91, 51, 9, 53, 53, 53, 9, 15, 15, 15, 9, 51, 68, 68, 40, 40, 40, 68, 51, 91, 46].
is_balanced84:- fail.
get_string84(S):- S = "(46, (6, (32, (14, (57, (), ()), ()), (32, (), ())), (9, (92, (), (58, (), ())), (23, (33, (18, (), (7, (), ())), ()), (51, (), ())))), (91, (51, (66, (3, (), ()), ()), (89, (34, (), ()), (81, (), ()))), (51, (9, (53, (), ()), (15, (), ())), (68, (), (40, (), ())))))".
build_tree85(BT):- BT = node(96, node(64, node(51, node(57, empty, empty), node(25, empty, empty)), node(60, node(69, node(40, empty, node(54, empty, empty)), empty), node(95, node(73, empty, node(83, empty, empty)), node(56, node(74, empty, node(56, empty, empty)), node(24, empty, empty))))), node(52, node(99, node(32, node(24, empty, empty), node(3, node(16, node(13, empty, empty), empty), empty)), node(5, node(65, empty, empty), node(20, node(34, empty, empty), node(56, empty, empty)))), node(59, node(72, node(32, empty, empty), node(75, node(48, node(78, empty, empty), empty), empty)), node(65, node(46, node(65, empty, empty), empty), node(33, empty, empty))))).
get_size85(N):- N = 38.
get_height85(N):- N = 7.
get_inorder85(L):- L = [57, 51, 25, 64, 40, 54, 69, 60, 73, 83, 95, 74, 56, 56, 24, 96, 24, 32, 13, 16, 3, 99, 65, 5, 34, 20, 56, 52, 32, 72, 78, 48, 75, 59, 65, 46, 65, 33].
get_postorder85(L):- L = [57, 25, 51, 54, 40, 69, 83, 73, 56, 74, 24, 56, 95, 60, 64, 24, 13, 16, 3, 32, 65, 34, 56, 20, 5, 99, 32, 78, 48, 75, 72, 65, 46, 33, 65, 59, 52, 96].
get_preorder85(L):- L = [96, 64, 51, 57, 25, 60, 69, 40, 54, 95, 73, 83, 56, 74, 56, 24, 52, 99, 32, 24, 3, 16, 13, 5, 65, 20, 34, 56, 59, 72, 32, 75, 48, 78, 65, 46, 65, 33].
get_tour85(L):- L = [96, 64, 51, 57, 57, 57, 51, 25, 25, 25, 51, 64, 60, 69, 40, 40, 54, 54, 54, 40, 69, 69, 60, 95, 73, 73, 83, 83, 83, 73, 95, 56, 74, 74, 56, 56, 56, 74, 56, 24, 24, 24, 56, 95, 60, 64, 96, 52, 99, 32, 24, 24, 24, 32, 3, 16, 13, 13, 13, 16, 16, 3, 3, 32, 99, 5, 65, 65, 65, 5, 20, 34, 34, 34, 20, 56, 56, 56, 20, 5, 99, 52, 59, 72, 32, 32, 32, 72, 75, 48, 78, 78, 78, 48, 48, 75, 75, 72, 59, 65, 46, 65, 65, 65, 46, 46, 65, 33, 33, 33, 65, 59, 52, 96].
is_balanced85:- fail.
get_string85(S):- S = "(96, (64, (51, (57, (), ()), (25, (), ())), (60, (69, (40, (), (54, (), ())), ()), (95, (73, (), (83, (), ())), (56, (74, (), (56, (), ())), (24, (), ()))))), (52, (99, (32, (24, (), ()), (3, (16, (13, (), ()), ()), ())), (5, (65, (), ()), (20, (34, (), ()), (56, (), ())))), (59, (72, (32, (), ()), (75, (48, (78, (), ()), ()), ())), (65, (46, (65, (), ()), ()), (33, (), ())))))".
build_tree86(BT):- BT = node(14, node(6, node(84, node(41, empty, empty), node(72, node(74, empty, empty), node(50, node(23, node(26, empty, node(48, empty, empty)), node(65, empty, empty)), empty))), node(44, node(16, empty, node(46, node(60, empty, empty), empty)), node(8, node(43, empty, empty), node(9, empty, node(29, empty, empty))))), node(86, node(19, node(52, empty, empty), node(68, node(37, empty, empty), node(60, empty, empty))), node(46, node(86, node(36, node(74, empty, node(6, empty, empty)), node(86, empty, empty)), node(53, node(58, empty, empty), empty)), node(77, empty, node(67, empty, empty))))).
get_size86(N):- N = 35.
get_height86(N):- N = 8.
get_inorder86(L):- L = [41, 84, 74, 72, 26, 48, 23, 65, 50, 6, 16, 60, 46, 44, 43, 8, 9, 29, 14, 52, 19, 37, 68, 60, 86, 74, 6, 36, 86, 86, 58, 53, 46, 77, 67].
get_postorder86(L):- L = [41, 74, 48, 26, 65, 23, 50, 72, 84, 60, 46, 16, 43, 29, 9, 8, 44, 6, 52, 37, 60, 68, 19, 6, 74, 86, 36, 58, 53, 86, 67, 77, 46, 86, 14].
get_preorder86(L):- L = [14, 6, 84, 41, 72, 74, 50, 23, 26, 48, 65, 44, 16, 46, 60, 8, 43, 9, 29, 86, 19, 52, 68, 37, 60, 46, 86, 36, 74, 6, 86, 53, 58, 77, 67].
get_tour86(L):- L = [14, 6, 84, 41, 41, 41, 84, 72, 74, 74, 74, 72, 50, 23, 26, 26, 48, 48, 48, 26, 23, 65, 65, 65, 23, 50, 50, 72, 84, 6, 44, 16, 16, 46, 60, 60, 60, 46, 46, 16, 44, 8, 43, 43, 43, 8, 9, 9, 29, 29, 29, 9, 8, 44, 6, 14, 86, 19, 52, 52, 52, 19, 68, 37, 37, 37, 68, 60, 60, 60, 68, 19, 86, 46, 86, 36, 74, 74, 6, 6, 6, 74, 36, 86, 86, 86, 36, 86, 53, 58, 58, 58, 53, 53, 86, 46, 77, 77, 67, 67, 67, 77, 46, 86, 14].
is_balanced86:- fail.
get_string86(S):- S = "(14, (6, (84, (41, (), ()), (72, (74, (), ()), (50, (23, (26, (), (48, (), ())), (65, (), ())), ()))), (44, (16, (), (46, (60, (), ()), ())), (8, (43, (), ()), (9, (), (29, (), ()))))), (86, (19, (52, (), ()), (68, (37, (), ()), (60, (), ()))), (46, (86, (36, (74, (), (6, (), ())), (86, (), ())), (53, (58, (), ()), ())), (77, (), (67, (), ())))))".
build_tree87(BT):- BT = node(39, node(8, node(28, node(75, node(94, empty, empty), empty), node(72, empty, node(73, node(40, empty, empty), node(99, empty, node(72, empty, empty))))), node(95, node(20, node(47, node(94, empty, empty), node(62, empty, empty)), node(5, empty, node(12, empty, empty))), node(34, node(95, empty, empty), node(10, node(3, empty, empty), empty)))), node(61, node(76, node(42, node(2, empty, node(81, empty, empty)), node(95, empty, empty)), node(34, empty, node(20, node(94, empty, empty), node(76, empty, empty)))), node(61, empty, node(95, node(78, empty, empty), empty)))).
get_size87(N):- N = 34.
get_height87(N):- N = 7.
get_inorder87(L):- L = [94, 75, 28, 72, 40, 73, 99, 72, 8, 94, 47, 62, 20, 5, 12, 95, 95, 34, 3, 10, 39, 2, 81, 42, 95, 76, 34, 94, 20, 76, 61, 61, 78, 95].
get_postorder87(L):- L = [94, 75, 40, 72, 99, 73, 72, 28, 94, 62, 47, 12, 5, 20, 95, 3, 10, 34, 95, 8, 81, 2, 95, 42, 94, 76, 20, 34, 76, 78, 95, 61, 61, 39].
get_preorder87(L):- L = [39, 8, 28, 75, 94, 72, 73, 40, 99, 72, 95, 20, 47, 94, 62, 5, 12, 34, 95, 10, 3, 61, 76, 42, 2, 81, 95, 34, 20, 94, 76, 61, 95, 78].
get_tour87(L):- L = [39, 8, 28, 75, 94, 94, 94, 75, 75, 28, 72, 72, 73, 40, 40, 40, 73, 99, 99, 72, 72, 72, 99, 73, 72, 28, 8, 95, 20, 47, 94, 94, 94, 47, 62, 62, 62, 47, 20, 5, 5, 12, 12, 12, 5, 20, 95, 34, 95, 95, 95, 34, 10, 3, 3, 3, 10, 10, 34, 95, 8, 39, 61, 76, 42, 2, 2, 81, 81, 81, 2, 42, 95, 95, 95, 42, 76, 34, 34, 20, 94, 94, 94, 20, 76, 76, 76, 20, 34, 76, 61, 61, 61, 95, 78, 78, 78, 95, 95, 61, 61, 39].
is_balanced87:- fail.
get_string87(S):- S = "(39, (8, (28, (75, (94, (), ()), ()), (72, (), (73, (40, (), ()), (99, (), (72, (), ()))))), (95, (20, (47, (94, (), ()), (62, (), ())), (5, (), (12, (), ()))), (34, (95, (), ()), (10, (3, (), ()), ())))), (61, (76, (42, (2, (), (81, (), ())), (95, (), ())), (34, (), (20, (94, (), ()), (76, (), ())))), (61, (), (95, (78, (), ()), ()))))".
build_tree88(BT):- BT = node(6, node(33, node(26, node(32, node(80, empty, empty), node(58, node(15, empty, empty), empty)), node(77, node(36, empty, empty), node(78, empty, empty))), node(35, node(81, node(67, empty, empty), empty), node(2, node(19, empty, node(41, empty, empty)), empty))), node(74, node(58, node(82, node(15, empty, empty), node(44, empty, node(11, empty, empty))), node(26, empty, empty)), node(99, node(11, node(31, node(77, empty, empty), node(35, empty, empty)), node(6, node(72, empty, empty), node(12, empty, empty))), node(43, node(53, node(25, empty, empty), node(19, empty, empty)), node(22, node(8, empty, empty), node(22, empty, empty)))))).
get_size88(N):- N = 38.
get_height88(N):- N = 6.
get_inorder88(L):- L = [80, 32, 15, 58, 26, 36, 77, 78, 33, 67, 81, 35, 19, 41, 2, 6, 15, 82, 44, 11, 58, 26, 74, 77, 31, 35, 11, 72, 6, 12, 99, 25, 53, 19, 43, 8, 22, 22].
get_postorder88(L):- L = [80, 15, 58, 32, 36, 78, 77, 26, 67, 81, 41, 19, 2, 35, 33, 15, 11, 44, 82, 26, 58, 77, 35, 31, 72, 12, 6, 11, 25, 19, 53, 8, 22, 22, 43, 99, 74, 6].
get_preorder88(L):- L = [6, 33, 26, 32, 80, 58, 15, 77, 36, 78, 35, 81, 67, 2, 19, 41, 74, 58, 82, 15, 44, 11, 26, 99, 11, 31, 77, 35, 6, 72, 12, 43, 53, 25, 19, 22, 8, 22].
get_tour88(L):- L = [6, 33, 26, 32, 80, 80, 80, 32, 58, 15, 15, 15, 58, 58, 32, 26, 77, 36, 36, 36, 77, 78, 78, 78, 77, 26, 33, 35, 81, 67, 67, 67, 81, 81, 35, 2, 19, 19, 41, 41, 41, 19, 2, 2, 35, 33, 6, 74, 58, 82, 15, 15, 15, 82, 44, 44, 11, 11, 11, 44, 82, 58, 26, 26, 26, 58, 74, 99, 11, 31, 77, 77, 77, 31, 35, 35, 35, 31, 11, 6, 72, 72, 72, 6, 12, 12, 12, 6, 11, 99, 43, 53, 25, 25, 25, 53, 19, 19, 19, 53, 43, 22, 8, 8, 8, 22, 22, 22, 22, 22, 43, 99, 74, 6].
is_balanced88:- fail.
get_string88(S):- S = "(6, (33, (26, (32, (80, (), ()), (58, (15, (), ()), ())), (77, (36, (), ()), (78, (), ()))), (35, (81, (67, (), ()), ()), (2, (19, (), (41, (), ())), ()))), (74, (58, (82, (15, (), ()), (44, (), (11, (), ()))), (26, (), ())), (99, (11, (31, (77, (), ()), (35, (), ())), (6, (72, (), ()), (12, (), ()))), (43, (53, (25, (), ()), (19, (), ())), (22, (8, (), ()), (22, (), ()))))))".
build_tree89(BT):- BT = node(84, node(71, node(82, node(46, empty, node(15, empty, empty)), node(46, node(45, empty, empty), empty)), node(31, node(39, node(89, empty, empty), node(58, node(86, empty, node(57, empty, empty)), node(26, empty, empty))), node(79, node(24, node(52, empty, empty), node(19, empty, node(85, empty, empty))), node(36, empty, empty)))), node(14, node(79, node(36, empty, node(47, node(45, empty, empty), empty)), node(2, empty, empty)), node(52, node(29, node(12, empty, empty), node(25, empty, empty)), node(68, node(84, empty, node(9, empty, empty)), empty)))).
get_size89(N):- N = 33.
get_height89(N):- N = 7.
get_inorder89(L):- L = [46, 15, 82, 45, 46, 71, 89, 39, 86, 57, 58, 26, 31, 52, 24, 19, 85, 79, 36, 84, 36, 45, 47, 79, 2, 14, 12, 29, 25, 52, 84, 9, 68].
get_postorder89(L):- L = [15, 46, 45, 46, 82, 89, 57, 86, 26, 58, 39, 52, 85, 19, 24, 36, 79, 31, 71, 45, 47, 36, 2, 79, 12, 25, 29, 9, 84, 68, 52, 14, 84].
get_preorder89(L):- L = [84, 71, 82, 46, 15, 46, 45, 31, 39, 89, 58, 86, 57, 26, 79, 24, 52, 19, 85, 36, 14, 79, 36, 47, 45, 2, 52, 29, 12, 25, 68, 84, 9].
get_tour89(L):- L = [84, 71, 82, 46, 46, 15, 15, 15, 46, 82, 46, 45, 45, 45, 46, 46, 82, 71, 31, 39, 89, 89, 89, 39, 58, 86, 86, 57, 57, 57, 86, 58, 26, 26, 26, 58, 39, 31, 79, 24, 52, 52, 52, 24, 19, 19, 85, 85, 85, 19, 24, 79, 36, 36, 36, 79, 31, 71, 84, 14, 79, 36, 36, 47, 45, 45, 45, 47, 47, 36, 79, 2, 2, 2, 79, 14, 52, 29, 12, 12, 12, 29, 25, 25, 25, 29, 52, 68, 84, 84, 9, 9, 9, 84, 68, 68, 52, 14, 84].
is_balanced89:- fail.
get_string89(S):- S = "(84, (71, (82, (46, (), (15, (), ())), (46, (45, (), ()), ())), (31, (39, (89, (), ()), (58, (86, (), (57, (), ())), (26, (), ()))), (79, (24, (52, (), ()), (19, (), (85, (), ()))), (36, (), ())))), (14, (79, (36, (), (47, (45, (), ()), ())), (2, (), ())), (52, (29, (12, (), ()), (25, (), ())), (68, (84, (), (9, (), ())), ()))))".
build_tree90(BT):- BT = node(99, node(22, node(49, node(23, empty, node(76, node(20, node(4, empty, empty), empty), empty)), node(3, node(21, node(77, empty, empty), empty), node(65, empty, empty))), node(7, node(42, empty, node(65, empty, empty)), node(2, node(22, node(58, empty, empty), empty), node(20, empty, node(78, empty, empty))))), node(30, node(8, node(42, empty, node(51, empty, empty)), node(99, empty, node(74, node(30, empty, empty), node(3, empty, empty)))), node(39, node(87, node(9, empty, empty), empty), node(11, node(70, empty, empty), node(53, empty, node(22, empty, empty)))))).
get_size90(N):- N = 34.
get_height90(N):- N = 7.
get_inorder90(L):- L = [23, 4, 20, 76, 49, 77, 21, 3, 65, 22, 42, 65, 7, 58, 22, 2, 20, 78, 99, 42, 51, 8, 99, 30, 74, 3, 30, 9, 87, 39, 70, 11, 53, 22].
get_postorder90(L):- L = [4, 20, 76, 23, 77, 21, 65, 3, 49, 65, 42, 58, 22, 78, 20, 2, 7, 22, 51, 42, 30, 3, 74, 99, 8, 9, 87, 70, 22, 53, 11, 39, 30, 99].
get_preorder90(L):- L = [99, 22, 49, 23, 76, 20, 4, 3, 21, 77, 65, 7, 42, 65, 2, 22, 58, 20, 78, 30, 8, 42, 51, 99, 74, 30, 3, 39, 87, 9, 11, 70, 53, 22].
get_tour90(L):- L = [99, 22, 49, 23, 23, 76, 20, 4, 4, 4, 20, 20, 76, 76, 23, 49, 3, 21, 77, 77, 77, 21, 21, 3, 65, 65, 65, 3, 49, 22, 7, 42, 42, 65, 65, 65, 42, 7, 2, 22, 58, 58, 58, 22, 22, 2, 20, 20, 78, 78, 78, 20, 2, 7, 22, 99, 30, 8, 42, 42, 51, 51, 51, 42, 8, 99, 99, 74, 30, 30, 30, 74, 3, 3, 3, 74, 99, 8, 30, 39, 87, 9, 9, 9, 87, 87, 39, 11, 70, 70, 70, 11, 53, 53, 22, 22, 22, 53, 11, 39, 30, 99].
is_balanced90:- fail.
get_string90(S):- S = "(99, (22, (49, (23, (), (76, (20, (4, (), ()), ()), ())), (3, (21, (77, (), ()), ()), (65, (), ()))), (7, (42, (), (65, (), ())), (2, (22, (58, (), ()), ()), (20, (), (78, (), ()))))), (30, (8, (42, (), (51, (), ())), (99, (), (74, (30, (), ()), (3, (), ())))), (39, (87, (9, (), ()), ()), (11, (70, (), ()), (53, (), (22, (), ()))))))".
build_tree91(BT):- BT = node(59, node(49, node(65, node(83, node(88, empty, empty), empty), node(60, node(41, node(71, empty, empty), empty), node(44, empty, empty))), node(12, node(41, empty, empty), node(37, node(83, empty, empty), node(55, empty, empty)))), node(1, node(83, empty, empty), node(8, node(18, node(34, empty, node(55, empty, empty)), node(69, node(23, node(34, empty, empty), empty), node(54, empty, empty))), node(74, node(45, node(2, empty, empty), empty), node(16, node(83, empty, empty), node(20, empty, node(83, empty, empty))))))).
get_size91(N):- N = 31.
get_height91(N):- N = 7.
get_inorder91(L):- L = [88, 83, 65, 71, 41, 60, 44, 49, 41, 12, 83, 37, 55, 59, 83, 1, 34, 55, 18, 34, 23, 69, 54, 8, 2, 45, 74, 83, 16, 20, 83].
get_postorder91(L):- L = [88, 83, 71, 41, 44, 60, 65, 41, 83, 55, 37, 12, 49, 83, 55, 34, 34, 23, 54, 69, 18, 2, 45, 83, 83, 20, 16, 74, 8, 1, 59].
get_preorder91(L):- L = [59, 49, 65, 83, 88, 60, 41, 71, 44, 12, 41, 37, 83, 55, 1, 83, 8, 18, 34, 55, 69, 23, 34, 54, 74, 45, 2, 16, 83, 20, 83].
get_tour91(L):- L = [59, 49, 65, 83, 88, 88, 88, 83, 83, 65, 60, 41, 71, 71, 71, 41, 41, 60, 44, 44, 44, 60, 65, 49, 12, 41, 41, 41, 12, 37, 83, 83, 83, 37, 55, 55, 55, 37, 12, 49, 59, 1, 83, 83, 83, 1, 8, 18, 34, 34, 55, 55, 55, 34, 18, 69, 23, 34, 34, 34, 23, 23, 69, 54, 54, 54, 69, 18, 8, 74, 45, 2, 2, 2, 45, 45, 74, 16, 83, 83, 83, 16, 20, 20, 83, 83, 83, 20, 16, 74, 8, 1, 59].
is_balanced91:- fail.
get_string91(S):- S = "(59, (49, (65, (83, (88, (), ()), ()), (60, (41, (71, (), ()), ()), (44, (), ()))), (12, (41, (), ()), (37, (83, (), ()), (55, (), ())))), (1, (83, (), ()), (8, (18, (34, (), (55, (), ())), (69, (23, (34, (), ()), ()), (54, (), ()))), (74, (45, (2, (), ()), ()), (16, (83, (), ()), (20, (), (83, (), ())))))))".
build_tree92(BT):- BT = node(43, node(8, node(52, node(74, node(22, node(40, empty, node(94, empty, empty)), node(3, empty, node(60, empty, empty))), node(25, node(58, empty, empty), empty)), node(22, node(53, node(22, empty, empty), empty), node(63, empty, node(15, node(58, empty, empty), node(5, empty, empty))))), node(87, node(44, node(57, empty, empty), node(9, empty, node(52, empty, empty))), node(6, node(58, empty, empty), node(46, empty, empty)))), node(72, node(18, node(28, node(19, empty, empty), empty), node(92, node(41, empty, empty), empty)), node(6, node(64, node(88, empty, empty), empty), node(98, node(21, empty, node(71, empty, node(18, empty, empty))), empty)))).
get_size92(N):- N = 39.
get_height92(N):- N = 7.
get_inorder92(L):- L = [40, 94, 22, 3, 60, 74, 58, 25, 52, 22, 53, 22, 63, 58, 15, 5, 8, 57, 44, 9, 52, 87, 58, 6, 46, 43, 19, 28, 18, 41, 92, 72, 88, 64, 6, 21, 71, 18, 98].
get_postorder92(L):- L = [94, 40, 60, 3, 22, 58, 25, 74, 22, 53, 58, 5, 15, 63, 22, 52, 57, 52, 9, 44, 58, 46, 6, 87, 8, 19, 28, 41, 92, 18, 88, 64, 18, 71, 21, 98, 6, 72, 43].
get_preorder92(L):- L = [43, 8, 52, 74, 22, 40, 94, 3, 60, 25, 58, 22, 53, 22, 63, 15, 58, 5, 87, 44, 57, 9, 52, 6, 58, 46, 72, 18, 28, 19, 92, 41, 6, 64, 88, 98, 21, 71, 18].
get_tour92(L):- L = [43, 8, 52, 74, 22, 40, 40, 94, 94, 94, 40, 22, 3, 3, 60, 60, 60, 3, 22, 74, 25, 58, 58, 58, 25, 25, 74, 52, 22, 53, 22, 22, 22, 53, 53, 22, 63, 63, 15, 58, 58, 58, 15, 5, 5, 5, 15, 63, 22, 52, 8, 87, 44, 57, 57, 57, 44, 9, 9, 52, 52, 52, 9, 44, 87, 6, 58, 58, 58, 6, 46, 46, 46, 6, 87, 8, 43, 72, 18, 28, 19, 19, 19, 28, 28, 18, 92, 41, 41, 41, 92, 92, 18, 72, 6, 64, 88, 88, 88, 64, 64, 6, 98, 21, 21, 71, 71, 18, 18, 18, 71, 21, 98, 98, 6, 72, 43].
is_balanced92:- fail.
get_string92(S):- S = "(43, (8, (52, (74, (22, (40, (), (94, (), ())), (3, (), (60, (), ()))), (25, (58, (), ()), ())), (22, (53, (22, (), ()), ()), (63, (), (15, (58, (), ()), (5, (), ()))))), (87, (44, (57, (), ()), (9, (), (52, (), ()))), (6, (58, (), ()), (46, (), ())))), (72, (18, (28, (19, (), ()), ()), (92, (41, (), ()), ())), (6, (64, (88, (), ()), ()), (98, (21, (), (71, (), (18, (), ()))), ()))))".
build_tree93(BT):- BT = node(87, node(95, node(44, node(20, node(99, empty, empty), node(49, node(44, empty, empty), empty)), node(13, empty, node(28, node(43, empty, empty), empty))), node(30, empty, node(6, node(1, empty, node(54, node(78, empty, empty), node(2, node(23, empty, empty), empty))), node(80, node(82, empty, empty), node(8, empty, empty))))), node(98, node(30, node(31, node(61, empty, empty), node(55, empty, empty)), node(5, node(53, empty, node(22, empty, empty)), node(43, node(91, empty, empty), empty))), node(72, node(11, node(27, empty, empty), node(23, node(25, empty, empty), node(6, empty, empty))), node(92, node(47, empty, empty), empty)))).
get_size93(N):- N = 38.
get_height93(N):- N = 8.
get_inorder93(L):- L = [99, 20, 44, 49, 44, 13, 43, 28, 95, 30, 1, 78, 54, 23, 2, 6, 82, 80, 8, 87, 61, 31, 55, 30, 53, 22, 5, 91, 43, 98, 27, 11, 25, 23, 6, 72, 47, 92].
get_postorder93(L):- L = [99, 44, 49, 20, 43, 28, 13, 44, 78, 23, 2, 54, 1, 82, 8, 80, 6, 30, 95, 61, 55, 31, 22, 53, 91, 43, 5, 30, 27, 25, 6, 23, 11, 47, 92, 72, 98, 87].
get_preorder93(L):- L = [87, 95, 44, 20, 99, 49, 44, 13, 28, 43, 30, 6, 1, 54, 78, 2, 23, 80, 82, 8, 98, 30, 31, 61, 55, 5, 53, 22, 43, 91, 72, 11, 27, 23, 25, 6, 92, 47].
get_tour93(L):- L = [87, 95, 44, 20, 99, 99, 99, 20, 49, 44, 44, 44, 49, 49, 20, 44, 13, 13, 28, 43, 43, 43, 28, 28, 13, 44, 95, 30, 30, 6, 1, 1, 54, 78, 78, 78, 54, 2, 23, 23, 23, 2, 2, 54, 1, 6, 80, 82, 82, 82, 80, 8, 8, 8, 80, 6, 30, 95, 87, 98, 30, 31, 61, 61, 61, 31, 55, 55, 55, 31, 30, 5, 53, 53, 22, 22, 22, 53, 5, 43, 91, 91, 91, 43, 43, 5, 30, 98, 72, 11, 27, 27, 27, 11, 23, 25, 25, 25, 23, 6, 6, 6, 23, 11, 72, 92, 47, 47, 47, 92, 92, 72, 98, 87].
is_balanced93:- fail.
get_string93(S):- S = "(87, (95, (44, (20, (99, (), ()), (49, (44, (), ()), ())), (13, (), (28, (43, (), ()), ()))), (30, (), (6, (1, (), (54, (78, (), ()), (2, (23, (), ()), ()))), (80, (82, (), ()), (8, (), ()))))), (98, (30, (31, (61, (), ()), (55, (), ())), (5, (53, (), (22, (), ())), (43, (91, (), ()), ()))), (72, (11, (27, (), ()), (23, (25, (), ()), (6, (), ()))), (92, (47, (), ()), ()))))".
build_tree94(BT):- BT = node(98, node(28, node(82, node(12, node(11, empty, empty), node(22, node(89, empty, empty), node(43, empty, empty))), node(36, node(61, empty, empty), empty)), node(57, node(80, node(29, empty, empty), empty), node(71, node(12, node(12, empty, node(24, empty, empty)), empty), node(60, empty, empty)))), node(41, node(48, node(49, node(30, empty, empty), node(84, empty, empty)), node(1, node(28, empty, empty), empty)), node(59, node(74, node(85, node(16, node(91, empty, empty), empty), empty), node(50, node(33, empty, empty), node(32, empty, empty))), node(81, node(31, empty, empty), node(5, empty, empty))))).
get_size94(N):- N = 36.
get_height94(N):- N = 7.
get_inorder94(L):- L = [11, 12, 89, 22, 43, 82, 61, 36, 28, 29, 80, 57, 12, 24, 12, 71, 60, 98, 30, 49, 84, 48, 28, 1, 41, 91, 16, 85, 74, 33, 50, 32, 59, 31, 81, 5].
get_postorder94(L):- L = [11, 89, 43, 22, 12, 61, 36, 82, 29, 80, 24, 12, 12, 60, 71, 57, 28, 30, 84, 49, 28, 1, 48, 91, 16, 85, 33, 32, 50, 74, 31, 5, 81, 59, 41, 98].
get_preorder94(L):- L = [98, 28, 82, 12, 11, 22, 89, 43, 36, 61, 57, 80, 29, 71, 12, 12, 24, 60, 41, 48, 49, 30, 84, 1, 28, 59, 74, 85, 16, 91, 50, 33, 32, 81, 31, 5].
get_tour94(L):- L = [98, 28, 82, 12, 11, 11, 11, 12, 22, 89, 89, 89, 22, 43, 43, 43, 22, 12, 82, 36, 61, 61, 61, 36, 36, 82, 28, 57, 80, 29, 29, 29, 80, 80, 57, 71, 12, 12, 12, 24, 24, 24, 12, 12, 12, 71, 60, 60, 60, 71, 57, 28, 98, 41, 48, 49, 30, 30, 30, 49, 84, 84, 84, 49, 48, 1, 28, 28, 28, 1, 1, 48, 41, 59, 74, 85, 16, 91, 91, 91, 16, 16, 85, 85, 74, 50, 33, 33, 33, 50, 32, 32, 32, 50, 74, 59, 81, 31, 31, 31, 81, 5, 5, 5, 81, 59, 41, 98].
is_balanced94:- fail.
get_string94(S):- S = "(98, (28, (82, (12, (11, (), ()), (22, (89, (), ()), (43, (), ()))), (36, (61, (), ()), ())), (57, (80, (29, (), ()), ()), (71, (12, (12, (), (24, (), ())), ()), (60, (), ())))), (41, (48, (49, (30, (), ()), (84, (), ())), (1, (28, (), ()), ())), (59, (74, (85, (16, (91, (), ()), ()), ()), (50, (33, (), ()), (32, (), ()))), (81, (31, (), ()), (5, (), ())))))".
build_tree95(BT):- BT = node(15, node(64, node(50, node(73, empty, empty), node(43, empty, empty)), node(91, node(57, node(38, empty, empty), node(23, empty, node(65, empty, empty))), node(5, node(66, empty, empty), empty))), node(2, node(50, node(57, empty, empty), node(75, empty, empty)), node(69, node(18, node(27, node(57, empty, node(50, empty, empty)), node(72, node(77, empty, node(10, empty, empty)), empty)), empty), node(22, node(22, empty, empty), node(86, node(61, node(6, empty, empty), empty), node(97, empty, empty)))))).
get_size95(N):- N = 30.
get_height95(N):- N = 8.
get_inorder95(L):- L = [73, 50, 43, 64, 38, 57, 23, 65, 91, 66, 5, 15, 57, 50, 75, 2, 57, 50, 27, 77, 10, 72, 18, 69, 22, 22, 6, 61, 86, 97].
get_postorder95(L):- L = [73, 43, 50, 38, 65, 23, 57, 66, 5, 91, 64, 57, 75, 50, 50, 57, 10, 77, 72, 27, 18, 22, 6, 61, 97, 86, 22, 69, 2, 15].
get_preorder95(L):- L = [15, 64, 50, 73, 43, 91, 57, 38, 23, 65, 5, 66, 2, 50, 57, 75, 69, 18, 27, 57, 50, 72, 77, 10, 22, 22, 86, 61, 6, 97].
get_tour95(L):- L = [15, 64, 50, 73, 73, 73, 50, 43, 43, 43, 50, 64, 91, 57, 38, 38, 38, 57, 23, 23, 65, 65, 65, 23, 57, 91, 5, 66, 66, 66, 5, 5, 91, 64, 15, 2, 50, 57, 57, 57, 50, 75, 75, 75, 50, 2, 69, 18, 27, 57, 57, 50, 50, 50, 57, 27, 72, 77, 77, 10, 10, 10, 77, 72, 72, 27, 18, 18, 69, 22, 22, 22, 22, 22, 86, 61, 6, 6, 6, 61, 61, 86, 97, 97, 97, 86, 22, 69, 2, 15].
is_balanced95:- fail.
get_string95(S):- S = "(15, (64, (50, (73, (), ()), (43, (), ())), (91, (57, (38, (), ()), (23, (), (65, (), ()))), (5, (66, (), ()), ()))), (2, (50, (57, (), ()), (75, (), ())), (69, (18, (27, (57, (), (50, (), ())), (72, (77, (), (10, (), ())), ())), ()), (22, (22, (), ()), (86, (61, (6, (), ()), ()), (97, (), ()))))))".
build_tree96(BT):- BT = node(39, node(48, node(97, node(85, node(31, node(36, empty, empty), node(45, node(11, empty, empty), empty)), node(14, node(96, empty, empty), node(70, empty, empty))), node(46, empty, node(96, empty, empty))), node(19, node(32, node(50, empty, empty), node(68, empty, node(73, empty, empty))), node(25, node(82, node(10, empty, empty), empty), empty))), node(66, node(64, node(38, empty, node(15, empty, node(61, empty, empty))), node(51, empty, node(60, empty, node(31, empty, node(42, empty, empty))))), node(35, node(95, node(9, node(25, empty, empty), empty), node(18, empty, empty)), node(41, empty, node(62, empty, node(99, empty, empty)))))).
get_size96(N):- N = 38.
get_height96(N):- N = 7.
get_inorder96(L):- L = [36, 31, 11, 45, 85, 96, 14, 70, 97, 46, 96, 48, 50, 32, 68, 73, 19, 10, 82, 25, 39, 38, 15, 61, 64, 51, 60, 31, 42, 66, 25, 9, 95, 18, 35, 41, 62, 99].
get_postorder96(L):- L = [36, 11, 45, 31, 96, 70, 14, 85, 96, 46, 97, 50, 73, 68, 32, 10, 82, 25, 19, 48, 61, 15, 38, 42, 31, 60, 51, 64, 25, 9, 18, 95, 99, 62, 41, 35, 66, 39].
get_preorder96(L):- L = [39, 48, 97, 85, 31, 36, 45, 11, 14, 96, 70, 46, 96, 19, 32, 50, 68, 73, 25, 82, 10, 66, 64, 38, 15, 61, 51, 60, 31, 42, 35, 95, 9, 25, 18, 41, 62, 99].
get_tour96(L):- L = [39, 48, 97, 85, 31, 36, 36, 36, 31, 45, 11, 11, 11, 45, 45, 31, 85, 14, 96, 96, 96, 14, 70, 70, 70, 14, 85, 97, 46, 46, 96, 96, 96, 46, 97, 48, 19, 32, 50, 50, 50, 32, 68, 68, 73, 73, 73, 68, 32, 19, 25, 82, 10, 10, 10, 82, 82, 25, 25, 19, 48, 39, 66, 64, 38, 38, 15, 15, 61, 61, 61, 15, 38, 64, 51, 51, 60, 60, 31, 31, 42, 42, 42, 31, 60, 51, 64, 66, 35, 95, 9, 25, 25, 25, 9, 9, 95, 18, 18, 18, 95, 35, 41, 41, 62, 62, 99, 99, 99, 62, 41, 35, 66, 39].
is_balanced96:- fail.
get_string96(S):- S = "(39, (48, (97, (85, (31, (36, (), ()), (45, (11, (), ()), ())), (14, (96, (), ()), (70, (), ()))), (46, (), (96, (), ()))), (19, (32, (50, (), ()), (68, (), (73, (), ()))), (25, (82, (10, (), ()), ()), ()))), (66, (64, (38, (), (15, (), (61, (), ()))), (51, (), (60, (), (31, (), (42, (), ()))))), (35, (95, (9, (25, (), ()), ()), (18, (), ())), (41, (), (62, (), (99, (), ()))))))".
build_tree97(BT):- BT = node(37, node(60, node(62, node(17, node(47, empty, node(67, empty, node(50, empty, empty))), empty), node(26, empty, node(47, node(74, empty, empty), empty))), node(84, node(44, node(88, empty, empty), node(99, empty, empty)), empty)), node(99, node(74, node(53, node(40, node(86, empty, empty), empty), empty), node(13, empty, node(63, empty, empty))), node(30, node(84, empty, empty), node(2, empty, empty)))).
get_size97(N):- N = 24.
get_height97(N):- N = 7.
get_inorder97(L):- L = [47, 67, 50, 17, 62, 26, 74, 47, 60, 88, 44, 99, 84, 37, 86, 40, 53, 74, 13, 63, 99, 84, 30, 2].
get_postorder97(L):- L = [50, 67, 47, 17, 74, 47, 26, 62, 88, 99, 44, 84, 60, 86, 40, 53, 63, 13, 74, 84, 2, 30, 99, 37].
get_preorder97(L):- L = [37, 60, 62, 17, 47, 67, 50, 26, 47, 74, 84, 44, 88, 99, 99, 74, 53, 40, 86, 13, 63, 30, 84, 2].
get_tour97(L):- L = [37, 60, 62, 17, 47, 47, 67, 67, 50, 50, 50, 67, 47, 17, 17, 62, 26, 26, 47, 74, 74, 74, 47, 47, 26, 62, 60, 84, 44, 88, 88, 88, 44, 99, 99, 99, 44, 84, 84, 60, 37, 99, 74, 53, 40, 86, 86, 86, 40, 40, 53, 53, 74, 13, 13, 63, 63, 63, 13, 74, 99, 30, 84, 84, 84, 30, 2, 2, 2, 30, 99, 37].
is_balanced97:- fail.
get_string97(S):- S = "(37, (60, (62, (17, (47, (), (67, (), (50, (), ()))), ()), (26, (), (47, (74, (), ()), ()))), (84, (44, (88, (), ()), (99, (), ())), ())), (99, (74, (53, (40, (86, (), ()), ()), ()), (13, (), (63, (), ()))), (30, (84, (), ()), (2, (), ()))))".
build_tree98(BT):- BT = node(86, node(83, node(40, node(98, node(84, node(73, empty, empty), empty), empty), empty), node(36, node(85, node(81, node(60, empty, empty), empty), empty), node(57, node(70, empty, empty), node(83, empty, node(88, node(87, empty, empty), empty))))), node(95, node(15, node(95, node(47, empty, node(91, node(34, empty, empty), node(79, node(99, empty, empty), empty))), node(44, node(12, empty, empty), empty)), node(76, node(20, node(19, empty, empty), node(34, empty, empty)), empty)), node(72, node(60, empty, empty), node(77, node(83, node(67, empty, empty), empty), empty)))).
get_size98(N):- N = 34.
get_height98(N):- N = 8.
get_inorder98(L):- L = [73, 84, 98, 40, 83, 60, 81, 85, 36, 70, 57, 83, 87, 88, 86, 47, 34, 91, 99, 79, 95, 12, 44, 15, 19, 20, 34, 76, 95, 60, 72, 67, 83, 77].
get_postorder98(L):- L = [73, 84, 98, 40, 60, 81, 85, 70, 87, 88, 83, 57, 36, 83, 34, 99, 79, 91, 47, 12, 44, 95, 19, 34, 20, 76, 15, 60, 67, 83, 77, 72, 95, 86].
get_preorder98(L):- L = [86, 83, 40, 98, 84, 73, 36, 85, 81, 60, 57, 70, 83, 88, 87, 95, 15, 95, 47, 91, 34, 79, 99, 44, 12, 76, 20, 19, 34, 72, 60, 77, 83, 67].
get_tour98(L):- L = [86, 83, 40, 98, 84, 73, 73, 73, 84, 84, 98, 98, 40, 40, 83, 36, 85, 81, 60, 60, 60, 81, 81, 85, 85, 36, 57, 70, 70, 70, 57, 83, 83, 88, 87, 87, 87, 88, 88, 83, 57, 36, 83, 86, 95, 15, 95, 47, 47, 91, 34, 34, 34, 91, 79, 99, 99, 99, 79, 79, 91, 47, 95, 44, 12, 12, 12, 44, 44, 95, 15, 76, 20, 19, 19, 19, 20, 34, 34, 34, 20, 76, 76, 15, 95, 72, 60, 60, 60, 72, 77, 83, 67, 67, 67, 83, 83, 77, 77, 72, 95, 86].
is_balanced98:- fail.
get_string98(S):- S = "(86, (83, (40, (98, (84, (73, (), ()), ()), ()), ()), (36, (85, (81, (60, (), ()), ()), ()), (57, (70, (), ()), (83, (), (88, (87, (), ()), ()))))), (95, (15, (95, (47, (), (91, (34, (), ()), (79, (99, (), ()), ()))), (44, (12, (), ()), ())), (76, (20, (19, (), ()), (34, (), ())), ())), (72, (60, (), ()), (77, (83, (67, (), ()), ()), ()))))".
build_tree99(BT):- BT = node(13, node(14, node(64, node(1, node(62, node(69, empty, empty), node(87, empty, empty)), empty), node(41, node(25, empty, node(33, empty, empty)), node(64, node(20, empty, empty), empty))), node(25, node(92, node(80, empty, node(34, empty, empty)), empty), node(66, empty, node(35, node(74, node(51, empty, empty), empty), empty)))), node(26, node(32, node(32, node(49, empty, empty), empty), node(5, node(31, empty, empty), node(55, empty, empty))), node(18, node(93, empty, empty), node(44, node(72, empty, node(18, empty, empty)), node(43, empty, empty))))).
get_size99(N):- N = 33.
get_height99(N):- N = 7.
get_inorder99(L):- L = [69, 62, 87, 1, 64, 25, 33, 41, 20, 64, 14, 80, 34, 92, 25, 66, 51, 74, 35, 13, 49, 32, 32, 31, 5, 55, 26, 93, 18, 72, 18, 44, 43].
get_postorder99(L):- L = [69, 87, 62, 1, 33, 25, 20, 64, 41, 64, 34, 80, 92, 51, 74, 35, 66, 25, 14, 49, 32, 31, 55, 5, 32, 93, 18, 72, 43, 44, 18, 26, 13].
get_preorder99(L):- L = [13, 14, 64, 1, 62, 69, 87, 41, 25, 33, 64, 20, 25, 92, 80, 34, 66, 35, 74, 51, 26, 32, 32, 49, 5, 31, 55, 18, 93, 44, 72, 18, 43].
get_tour99(L):- L = [13, 14, 64, 1, 62, 69, 69, 69, 62, 87, 87, 87, 62, 1, 1, 64, 41, 25, 25, 33, 33, 33, 25, 41, 64, 20, 20, 20, 64, 64, 41, 64, 14, 25, 92, 80, 80, 34, 34, 34, 80, 92, 92, 25, 66, 66, 35, 74, 51, 51, 51, 74, 74, 35, 35, 66, 25, 14, 13, 26, 32, 32, 49, 49, 49, 32, 32, 32, 5, 31, 31, 31, 5, 55, 55, 55, 5, 32, 26, 18, 93, 93, 93, 18, 44, 72, 72, 18, 18, 18, 72, 44, 43, 43, 43, 44, 18, 26, 13].
is_balanced99:- fail.
get_string99(S):- S = "(13, (14, (64, (1, (62, (69, (), ()), (87, (), ())), ()), (41, (25, (), (33, (), ())), (64, (20, (), ()), ()))), (25, (92, (80, (), (34, (), ())), ()), (66, (), (35, (74, (51, (), ()), ()), ())))), (26, (32, (32, (49, (), ()), ()), (5, (31, (), ()), (55, (), ()))), (18, (93, (), ()), (44, (72, (), (18, (), ())), (43, (), ())))))".
run_test0:-build_tree0(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size0(N1),
get_height0(N2),
get_preorder0(L1),
get_preorder0(L4),
get_preorder0(L7),
get_postorder0(L2),
get_postorder0(L5),
get_postorder0(L8),
get_inorder0(L3),
get_inorder0(L6),
get_inorder0(L9),
get_tour0(L10),
get_string0(S),
checkSame(is_balanced0, isBalanced(BT)).
run_test1:-build_tree1(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size1(N1),
get_height1(N2),
get_preorder1(L1),
get_preorder1(L4),
get_preorder1(L7),
get_postorder1(L2),
get_postorder1(L5),
get_postorder1(L8),
get_inorder1(L3),
get_inorder1(L6),
get_inorder1(L9),
get_tour1(L10),
get_string1(S),
checkSame(is_balanced1, isBalanced(BT)).
run_test2:-build_tree2(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size2(N1),
get_height2(N2),
get_preorder2(L1),
get_preorder2(L4),
get_preorder2(L7),
get_postorder2(L2),
get_postorder2(L5),
get_postorder2(L8),
get_inorder2(L3),
get_inorder2(L6),
get_inorder2(L9),
get_tour2(L10),
get_string2(S),
checkSame(is_balanced2, isBalanced(BT)).
run_test3:-build_tree3(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size3(N1),
get_height3(N2),
get_preorder3(L1),
get_preorder3(L4),
get_preorder3(L7),
get_postorder3(L2),
get_postorder3(L5),
get_postorder3(L8),
get_inorder3(L3),
get_inorder3(L6),
get_inorder3(L9),
get_tour3(L10),
get_string3(S),
checkSame(is_balanced3, isBalanced(BT)).
run_test4:-build_tree4(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size4(N1),
get_height4(N2),
get_preorder4(L1),
get_preorder4(L4),
get_preorder4(L7),
get_postorder4(L2),
get_postorder4(L5),
get_postorder4(L8),
get_inorder4(L3),
get_inorder4(L6),
get_inorder4(L9),
get_tour4(L10),
get_string4(S),
checkSame(is_balanced4, isBalanced(BT)).
run_test5:-build_tree5(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size5(N1),
get_height5(N2),
get_preorder5(L1),
get_preorder5(L4),
get_preorder5(L7),
get_postorder5(L2),
get_postorder5(L5),
get_postorder5(L8),
get_inorder5(L3),
get_inorder5(L6),
get_inorder5(L9),
get_tour5(L10),
get_string5(S),
checkSame(is_balanced5, isBalanced(BT)).
run_test6:-build_tree6(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size6(N1),
get_height6(N2),
get_preorder6(L1),
get_preorder6(L4),
get_preorder6(L7),
get_postorder6(L2),
get_postorder6(L5),
get_postorder6(L8),
get_inorder6(L3),
get_inorder6(L6),
get_inorder6(L9),
get_tour6(L10),
get_string6(S),
checkSame(is_balanced6, isBalanced(BT)).
run_test7:-build_tree7(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size7(N1),
get_height7(N2),
get_preorder7(L1),
get_preorder7(L4),
get_preorder7(L7),
get_postorder7(L2),
get_postorder7(L5),
get_postorder7(L8),
get_inorder7(L3),
get_inorder7(L6),
get_inorder7(L9),
get_tour7(L10),
get_string7(S),
checkSame(is_balanced7, isBalanced(BT)).
run_test8:-build_tree8(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size8(N1),
get_height8(N2),
get_preorder8(L1),
get_preorder8(L4),
get_preorder8(L7),
get_postorder8(L2),
get_postorder8(L5),
get_postorder8(L8),
get_inorder8(L3),
get_inorder8(L6),
get_inorder8(L9),
get_tour8(L10),
get_string8(S),
checkSame(is_balanced8, isBalanced(BT)).
run_test9:-build_tree9(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size9(N1),
get_height9(N2),
get_preorder9(L1),
get_preorder9(L4),
get_preorder9(L7),
get_postorder9(L2),
get_postorder9(L5),
get_postorder9(L8),
get_inorder9(L3),
get_inorder9(L6),
get_inorder9(L9),
get_tour9(L10),
get_string9(S),
checkSame(is_balanced9, isBalanced(BT)).
run_test10:-build_tree10(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size10(N1),
get_height10(N2),
get_preorder10(L1),
get_preorder10(L4),
get_preorder10(L7),
get_postorder10(L2),
get_postorder10(L5),
get_postorder10(L8),
get_inorder10(L3),
get_inorder10(L6),
get_inorder10(L9),
get_tour10(L10),
get_string10(S),
checkSame(is_balanced10, isBalanced(BT)).
run_test11:-build_tree11(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size11(N1),
get_height11(N2),
get_preorder11(L1),
get_preorder11(L4),
get_preorder11(L7),
get_postorder11(L2),
get_postorder11(L5),
get_postorder11(L8),
get_inorder11(L3),
get_inorder11(L6),
get_inorder11(L9),
get_tour11(L10),
get_string11(S),
checkSame(is_balanced11, isBalanced(BT)).
run_test12:-build_tree12(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size12(N1),
get_height12(N2),
get_preorder12(L1),
get_preorder12(L4),
get_preorder12(L7),
get_postorder12(L2),
get_postorder12(L5),
get_postorder12(L8),
get_inorder12(L3),
get_inorder12(L6),
get_inorder12(L9),
get_tour12(L10),
get_string12(S),
checkSame(is_balanced12, isBalanced(BT)).
run_test13:-build_tree13(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size13(N1),
get_height13(N2),
get_preorder13(L1),
get_preorder13(L4),
get_preorder13(L7),
get_postorder13(L2),
get_postorder13(L5),
get_postorder13(L8),
get_inorder13(L3),
get_inorder13(L6),
get_inorder13(L9),
get_tour13(L10),
get_string13(S),
checkSame(is_balanced13, isBalanced(BT)).
run_test14:-build_tree14(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size14(N1),
get_height14(N2),
get_preorder14(L1),
get_preorder14(L4),
get_preorder14(L7),
get_postorder14(L2),
get_postorder14(L5),
get_postorder14(L8),
get_inorder14(L3),
get_inorder14(L6),
get_inorder14(L9),
get_tour14(L10),
get_string14(S),
checkSame(is_balanced14, isBalanced(BT)).
run_test15:-build_tree15(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size15(N1),
get_height15(N2),
get_preorder15(L1),
get_preorder15(L4),
get_preorder15(L7),
get_postorder15(L2),
get_postorder15(L5),
get_postorder15(L8),
get_inorder15(L3),
get_inorder15(L6),
get_inorder15(L9),
get_tour15(L10),
get_string15(S),
checkSame(is_balanced15, isBalanced(BT)).
run_test16:-build_tree16(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size16(N1),
get_height16(N2),
get_preorder16(L1),
get_preorder16(L4),
get_preorder16(L7),
get_postorder16(L2),
get_postorder16(L5),
get_postorder16(L8),
get_inorder16(L3),
get_inorder16(L6),
get_inorder16(L9),
get_tour16(L10),
get_string16(S),
checkSame(is_balanced16, isBalanced(BT)).
run_test17:-build_tree17(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size17(N1),
get_height17(N2),
get_preorder17(L1),
get_preorder17(L4),
get_preorder17(L7),
get_postorder17(L2),
get_postorder17(L5),
get_postorder17(L8),
get_inorder17(L3),
get_inorder17(L6),
get_inorder17(L9),
get_tour17(L10),
get_string17(S),
checkSame(is_balanced17, isBalanced(BT)).
run_test18:-build_tree18(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size18(N1),
get_height18(N2),
get_preorder18(L1),
get_preorder18(L4),
get_preorder18(L7),
get_postorder18(L2),
get_postorder18(L5),
get_postorder18(L8),
get_inorder18(L3),
get_inorder18(L6),
get_inorder18(L9),
get_tour18(L10),
get_string18(S),
checkSame(is_balanced18, isBalanced(BT)).
run_test19:-build_tree19(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size19(N1),
get_height19(N2),
get_preorder19(L1),
get_preorder19(L4),
get_preorder19(L7),
get_postorder19(L2),
get_postorder19(L5),
get_postorder19(L8),
get_inorder19(L3),
get_inorder19(L6),
get_inorder19(L9),
get_tour19(L10),
get_string19(S),
checkSame(is_balanced19, isBalanced(BT)).
run_test20:-build_tree20(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size20(N1),
get_height20(N2),
get_preorder20(L1),
get_preorder20(L4),
get_preorder20(L7),
get_postorder20(L2),
get_postorder20(L5),
get_postorder20(L8),
get_inorder20(L3),
get_inorder20(L6),
get_inorder20(L9),
get_tour20(L10),
get_string20(S),
checkSame(is_balanced20, isBalanced(BT)).
run_test21:-build_tree21(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size21(N1),
get_height21(N2),
get_preorder21(L1),
get_preorder21(L4),
get_preorder21(L7),
get_postorder21(L2),
get_postorder21(L5),
get_postorder21(L8),
get_inorder21(L3),
get_inorder21(L6),
get_inorder21(L9),
get_tour21(L10),
get_string21(S),
checkSame(is_balanced21, isBalanced(BT)).
run_test22:-build_tree22(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size22(N1),
get_height22(N2),
get_preorder22(L1),
get_preorder22(L4),
get_preorder22(L7),
get_postorder22(L2),
get_postorder22(L5),
get_postorder22(L8),
get_inorder22(L3),
get_inorder22(L6),
get_inorder22(L9),
get_tour22(L10),
get_string22(S),
checkSame(is_balanced22, isBalanced(BT)).
run_test23:-build_tree23(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size23(N1),
get_height23(N2),
get_preorder23(L1),
get_preorder23(L4),
get_preorder23(L7),
get_postorder23(L2),
get_postorder23(L5),
get_postorder23(L8),
get_inorder23(L3),
get_inorder23(L6),
get_inorder23(L9),
get_tour23(L10),
get_string23(S),
checkSame(is_balanced23, isBalanced(BT)).
run_test24:-build_tree24(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size24(N1),
get_height24(N2),
get_preorder24(L1),
get_preorder24(L4),
get_preorder24(L7),
get_postorder24(L2),
get_postorder24(L5),
get_postorder24(L8),
get_inorder24(L3),
get_inorder24(L6),
get_inorder24(L9),
get_tour24(L10),
get_string24(S),
checkSame(is_balanced24, isBalanced(BT)).
run_test25:-build_tree25(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size25(N1),
get_height25(N2),
get_preorder25(L1),
get_preorder25(L4),
get_preorder25(L7),
get_postorder25(L2),
get_postorder25(L5),
get_postorder25(L8),
get_inorder25(L3),
get_inorder25(L6),
get_inorder25(L9),
get_tour25(L10),
get_string25(S),
checkSame(is_balanced25, isBalanced(BT)).
run_test26:-build_tree26(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size26(N1),
get_height26(N2),
get_preorder26(L1),
get_preorder26(L4),
get_preorder26(L7),
get_postorder26(L2),
get_postorder26(L5),
get_postorder26(L8),
get_inorder26(L3),
get_inorder26(L6),
get_inorder26(L9),
get_tour26(L10),
get_string26(S),
checkSame(is_balanced26, isBalanced(BT)).
run_test27:-build_tree27(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size27(N1),
get_height27(N2),
get_preorder27(L1),
get_preorder27(L4),
get_preorder27(L7),
get_postorder27(L2),
get_postorder27(L5),
get_postorder27(L8),
get_inorder27(L3),
get_inorder27(L6),
get_inorder27(L9),
get_tour27(L10),
get_string27(S),
checkSame(is_balanced27, isBalanced(BT)).
run_test28:-build_tree28(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size28(N1),
get_height28(N2),
get_preorder28(L1),
get_preorder28(L4),
get_preorder28(L7),
get_postorder28(L2),
get_postorder28(L5),
get_postorder28(L8),
get_inorder28(L3),
get_inorder28(L6),
get_inorder28(L9),
get_tour28(L10),
get_string28(S),
checkSame(is_balanced28, isBalanced(BT)).
run_test29:-build_tree29(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size29(N1),
get_height29(N2),
get_preorder29(L1),
get_preorder29(L4),
get_preorder29(L7),
get_postorder29(L2),
get_postorder29(L5),
get_postorder29(L8),
get_inorder29(L3),
get_inorder29(L6),
get_inorder29(L9),
get_tour29(L10),
get_string29(S),
checkSame(is_balanced29, isBalanced(BT)).
run_test30:-build_tree30(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size30(N1),
get_height30(N2),
get_preorder30(L1),
get_preorder30(L4),
get_preorder30(L7),
get_postorder30(L2),
get_postorder30(L5),
get_postorder30(L8),
get_inorder30(L3),
get_inorder30(L6),
get_inorder30(L9),
get_tour30(L10),
get_string30(S),
checkSame(is_balanced30, isBalanced(BT)).
run_test31:-build_tree31(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size31(N1),
get_height31(N2),
get_preorder31(L1),
get_preorder31(L4),
get_preorder31(L7),
get_postorder31(L2),
get_postorder31(L5),
get_postorder31(L8),
get_inorder31(L3),
get_inorder31(L6),
get_inorder31(L9),
get_tour31(L10),
get_string31(S),
checkSame(is_balanced31, isBalanced(BT)).
run_test32:-build_tree32(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size32(N1),
get_height32(N2),
get_preorder32(L1),
get_preorder32(L4),
get_preorder32(L7),
get_postorder32(L2),
get_postorder32(L5),
get_postorder32(L8),
get_inorder32(L3),
get_inorder32(L6),
get_inorder32(L9),
get_tour32(L10),
get_string32(S),
checkSame(is_balanced32, isBalanced(BT)).
run_test33:-build_tree33(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size33(N1),
get_height33(N2),
get_preorder33(L1),
get_preorder33(L4),
get_preorder33(L7),
get_postorder33(L2),
get_postorder33(L5),
get_postorder33(L8),
get_inorder33(L3),
get_inorder33(L6),
get_inorder33(L9),
get_tour33(L10),
get_string33(S),
checkSame(is_balanced33, isBalanced(BT)).
run_test34:-build_tree34(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size34(N1),
get_height34(N2),
get_preorder34(L1),
get_preorder34(L4),
get_preorder34(L7),
get_postorder34(L2),
get_postorder34(L5),
get_postorder34(L8),
get_inorder34(L3),
get_inorder34(L6),
get_inorder34(L9),
get_tour34(L10),
get_string34(S),
checkSame(is_balanced34, isBalanced(BT)).
run_test35:-build_tree35(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size35(N1),
get_height35(N2),
get_preorder35(L1),
get_preorder35(L4),
get_preorder35(L7),
get_postorder35(L2),
get_postorder35(L5),
get_postorder35(L8),
get_inorder35(L3),
get_inorder35(L6),
get_inorder35(L9),
get_tour35(L10),
get_string35(S),
checkSame(is_balanced35, isBalanced(BT)).
run_test36:-build_tree36(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size36(N1),
get_height36(N2),
get_preorder36(L1),
get_preorder36(L4),
get_preorder36(L7),
get_postorder36(L2),
get_postorder36(L5),
get_postorder36(L8),
get_inorder36(L3),
get_inorder36(L6),
get_inorder36(L9),
get_tour36(L10),
get_string36(S),
checkSame(is_balanced36, isBalanced(BT)).
run_test37:-build_tree37(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size37(N1),
get_height37(N2),
get_preorder37(L1),
get_preorder37(L4),
get_preorder37(L7),
get_postorder37(L2),
get_postorder37(L5),
get_postorder37(L8),
get_inorder37(L3),
get_inorder37(L6),
get_inorder37(L9),
get_tour37(L10),
get_string37(S),
checkSame(is_balanced37, isBalanced(BT)).
run_test38:-build_tree38(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size38(N1),
get_height38(N2),
get_preorder38(L1),
get_preorder38(L4),
get_preorder38(L7),
get_postorder38(L2),
get_postorder38(L5),
get_postorder38(L8),
get_inorder38(L3),
get_inorder38(L6),
get_inorder38(L9),
get_tour38(L10),
get_string38(S),
checkSame(is_balanced38, isBalanced(BT)).
run_test39:-build_tree39(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size39(N1),
get_height39(N2),
get_preorder39(L1),
get_preorder39(L4),
get_preorder39(L7),
get_postorder39(L2),
get_postorder39(L5),
get_postorder39(L8),
get_inorder39(L3),
get_inorder39(L6),
get_inorder39(L9),
get_tour39(L10),
get_string39(S),
checkSame(is_balanced39, isBalanced(BT)).
run_test40:-build_tree40(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size40(N1),
get_height40(N2),
get_preorder40(L1),
get_preorder40(L4),
get_preorder40(L7),
get_postorder40(L2),
get_postorder40(L5),
get_postorder40(L8),
get_inorder40(L3),
get_inorder40(L6),
get_inorder40(L9),
get_tour40(L10),
get_string40(S),
checkSame(is_balanced40, isBalanced(BT)).
run_test41:-build_tree41(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size41(N1),
get_height41(N2),
get_preorder41(L1),
get_preorder41(L4),
get_preorder41(L7),
get_postorder41(L2),
get_postorder41(L5),
get_postorder41(L8),
get_inorder41(L3),
get_inorder41(L6),
get_inorder41(L9),
get_tour41(L10),
get_string41(S),
checkSame(is_balanced41, isBalanced(BT)).
run_test42:-build_tree42(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size42(N1),
get_height42(N2),
get_preorder42(L1),
get_preorder42(L4),
get_preorder42(L7),
get_postorder42(L2),
get_postorder42(L5),
get_postorder42(L8),
get_inorder42(L3),
get_inorder42(L6),
get_inorder42(L9),
get_tour42(L10),
get_string42(S),
checkSame(is_balanced42, isBalanced(BT)).
run_test43:-build_tree43(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size43(N1),
get_height43(N2),
get_preorder43(L1),
get_preorder43(L4),
get_preorder43(L7),
get_postorder43(L2),
get_postorder43(L5),
get_postorder43(L8),
get_inorder43(L3),
get_inorder43(L6),
get_inorder43(L9),
get_tour43(L10),
get_string43(S),
checkSame(is_balanced43, isBalanced(BT)).
run_test44:-build_tree44(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size44(N1),
get_height44(N2),
get_preorder44(L1),
get_preorder44(L4),
get_preorder44(L7),
get_postorder44(L2),
get_postorder44(L5),
get_postorder44(L8),
get_inorder44(L3),
get_inorder44(L6),
get_inorder44(L9),
get_tour44(L10),
get_string44(S),
checkSame(is_balanced44, isBalanced(BT)).
run_test45:-build_tree45(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size45(N1),
get_height45(N2),
get_preorder45(L1),
get_preorder45(L4),
get_preorder45(L7),
get_postorder45(L2),
get_postorder45(L5),
get_postorder45(L8),
get_inorder45(L3),
get_inorder45(L6),
get_inorder45(L9),
get_tour45(L10),
get_string45(S),
checkSame(is_balanced45, isBalanced(BT)).
run_test46:-build_tree46(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size46(N1),
get_height46(N2),
get_preorder46(L1),
get_preorder46(L4),
get_preorder46(L7),
get_postorder46(L2),
get_postorder46(L5),
get_postorder46(L8),
get_inorder46(L3),
get_inorder46(L6),
get_inorder46(L9),
get_tour46(L10),
get_string46(S),
checkSame(is_balanced46, isBalanced(BT)).
run_test47:-build_tree47(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size47(N1),
get_height47(N2),
get_preorder47(L1),
get_preorder47(L4),
get_preorder47(L7),
get_postorder47(L2),
get_postorder47(L5),
get_postorder47(L8),
get_inorder47(L3),
get_inorder47(L6),
get_inorder47(L9),
get_tour47(L10),
get_string47(S),
checkSame(is_balanced47, isBalanced(BT)).
run_test48:-build_tree48(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size48(N1),
get_height48(N2),
get_preorder48(L1),
get_preorder48(L4),
get_preorder48(L7),
get_postorder48(L2),
get_postorder48(L5),
get_postorder48(L8),
get_inorder48(L3),
get_inorder48(L6),
get_inorder48(L9),
get_tour48(L10),
get_string48(S),
checkSame(is_balanced48, isBalanced(BT)).
run_test49:-build_tree49(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size49(N1),
get_height49(N2),
get_preorder49(L1),
get_preorder49(L4),
get_preorder49(L7),
get_postorder49(L2),
get_postorder49(L5),
get_postorder49(L8),
get_inorder49(L3),
get_inorder49(L6),
get_inorder49(L9),
get_tour49(L10),
get_string49(S),
checkSame(is_balanced49, isBalanced(BT)).
run_test50:-build_tree50(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size50(N1),
get_height50(N2),
get_preorder50(L1),
get_preorder50(L4),
get_preorder50(L7),
get_postorder50(L2),
get_postorder50(L5),
get_postorder50(L8),
get_inorder50(L3),
get_inorder50(L6),
get_inorder50(L9),
get_tour50(L10),
get_string50(S),
checkSame(is_balanced50, isBalanced(BT)).
run_test51:-build_tree51(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size51(N1),
get_height51(N2),
get_preorder51(L1),
get_preorder51(L4),
get_preorder51(L7),
get_postorder51(L2),
get_postorder51(L5),
get_postorder51(L8),
get_inorder51(L3),
get_inorder51(L6),
get_inorder51(L9),
get_tour51(L10),
get_string51(S),
checkSame(is_balanced51, isBalanced(BT)).
run_test52:-build_tree52(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size52(N1),
get_height52(N2),
get_preorder52(L1),
get_preorder52(L4),
get_preorder52(L7),
get_postorder52(L2),
get_postorder52(L5),
get_postorder52(L8),
get_inorder52(L3),
get_inorder52(L6),
get_inorder52(L9),
get_tour52(L10),
get_string52(S),
checkSame(is_balanced52, isBalanced(BT)).
run_test53:-build_tree53(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size53(N1),
get_height53(N2),
get_preorder53(L1),
get_preorder53(L4),
get_preorder53(L7),
get_postorder53(L2),
get_postorder53(L5),
get_postorder53(L8),
get_inorder53(L3),
get_inorder53(L6),
get_inorder53(L9),
get_tour53(L10),
get_string53(S),
checkSame(is_balanced53, isBalanced(BT)).
run_test54:-build_tree54(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size54(N1),
get_height54(N2),
get_preorder54(L1),
get_preorder54(L4),
get_preorder54(L7),
get_postorder54(L2),
get_postorder54(L5),
get_postorder54(L8),
get_inorder54(L3),
get_inorder54(L6),
get_inorder54(L9),
get_tour54(L10),
get_string54(S),
checkSame(is_balanced54, isBalanced(BT)).
run_test55:-build_tree55(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size55(N1),
get_height55(N2),
get_preorder55(L1),
get_preorder55(L4),
get_preorder55(L7),
get_postorder55(L2),
get_postorder55(L5),
get_postorder55(L8),
get_inorder55(L3),
get_inorder55(L6),
get_inorder55(L9),
get_tour55(L10),
get_string55(S),
checkSame(is_balanced55, isBalanced(BT)).
run_test56:-build_tree56(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size56(N1),
get_height56(N2),
get_preorder56(L1),
get_preorder56(L4),
get_preorder56(L7),
get_postorder56(L2),
get_postorder56(L5),
get_postorder56(L8),
get_inorder56(L3),
get_inorder56(L6),
get_inorder56(L9),
get_tour56(L10),
get_string56(S),
checkSame(is_balanced56, isBalanced(BT)).
run_test57:-build_tree57(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size57(N1),
get_height57(N2),
get_preorder57(L1),
get_preorder57(L4),
get_preorder57(L7),
get_postorder57(L2),
get_postorder57(L5),
get_postorder57(L8),
get_inorder57(L3),
get_inorder57(L6),
get_inorder57(L9),
get_tour57(L10),
get_string57(S),
checkSame(is_balanced57, isBalanced(BT)).
run_test58:-build_tree58(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size58(N1),
get_height58(N2),
get_preorder58(L1),
get_preorder58(L4),
get_preorder58(L7),
get_postorder58(L2),
get_postorder58(L5),
get_postorder58(L8),
get_inorder58(L3),
get_inorder58(L6),
get_inorder58(L9),
get_tour58(L10),
get_string58(S),
checkSame(is_balanced58, isBalanced(BT)).
run_test59:-build_tree59(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size59(N1),
get_height59(N2),
get_preorder59(L1),
get_preorder59(L4),
get_preorder59(L7),
get_postorder59(L2),
get_postorder59(L5),
get_postorder59(L8),
get_inorder59(L3),
get_inorder59(L6),
get_inorder59(L9),
get_tour59(L10),
get_string59(S),
checkSame(is_balanced59, isBalanced(BT)).
run_test60:-build_tree60(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size60(N1),
get_height60(N2),
get_preorder60(L1),
get_preorder60(L4),
get_preorder60(L7),
get_postorder60(L2),
get_postorder60(L5),
get_postorder60(L8),
get_inorder60(L3),
get_inorder60(L6),
get_inorder60(L9),
get_tour60(L10),
get_string60(S),
checkSame(is_balanced60, isBalanced(BT)).
run_test61:-build_tree61(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size61(N1),
get_height61(N2),
get_preorder61(L1),
get_preorder61(L4),
get_preorder61(L7),
get_postorder61(L2),
get_postorder61(L5),
get_postorder61(L8),
get_inorder61(L3),
get_inorder61(L6),
get_inorder61(L9),
get_tour61(L10),
get_string61(S),
checkSame(is_balanced61, isBalanced(BT)).
run_test62:-build_tree62(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size62(N1),
get_height62(N2),
get_preorder62(L1),
get_preorder62(L4),
get_preorder62(L7),
get_postorder62(L2),
get_postorder62(L5),
get_postorder62(L8),
get_inorder62(L3),
get_inorder62(L6),
get_inorder62(L9),
get_tour62(L10),
get_string62(S),
checkSame(is_balanced62, isBalanced(BT)).
run_test63:-build_tree63(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size63(N1),
get_height63(N2),
get_preorder63(L1),
get_preorder63(L4),
get_preorder63(L7),
get_postorder63(L2),
get_postorder63(L5),
get_postorder63(L8),
get_inorder63(L3),
get_inorder63(L6),
get_inorder63(L9),
get_tour63(L10),
get_string63(S),
checkSame(is_balanced63, isBalanced(BT)).
run_test64:-build_tree64(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size64(N1),
get_height64(N2),
get_preorder64(L1),
get_preorder64(L4),
get_preorder64(L7),
get_postorder64(L2),
get_postorder64(L5),
get_postorder64(L8),
get_inorder64(L3),
get_inorder64(L6),
get_inorder64(L9),
get_tour64(L10),
get_string64(S),
checkSame(is_balanced64, isBalanced(BT)).
run_test65:-build_tree65(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size65(N1),
get_height65(N2),
get_preorder65(L1),
get_preorder65(L4),
get_preorder65(L7),
get_postorder65(L2),
get_postorder65(L5),
get_postorder65(L8),
get_inorder65(L3),
get_inorder65(L6),
get_inorder65(L9),
get_tour65(L10),
get_string65(S),
checkSame(is_balanced65, isBalanced(BT)).
run_test66:-build_tree66(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size66(N1),
get_height66(N2),
get_preorder66(L1),
get_preorder66(L4),
get_preorder66(L7),
get_postorder66(L2),
get_postorder66(L5),
get_postorder66(L8),
get_inorder66(L3),
get_inorder66(L6),
get_inorder66(L9),
get_tour66(L10),
get_string66(S),
checkSame(is_balanced66, isBalanced(BT)).
run_test67:-build_tree67(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size67(N1),
get_height67(N2),
get_preorder67(L1),
get_preorder67(L4),
get_preorder67(L7),
get_postorder67(L2),
get_postorder67(L5),
get_postorder67(L8),
get_inorder67(L3),
get_inorder67(L6),
get_inorder67(L9),
get_tour67(L10),
get_string67(S),
checkSame(is_balanced67, isBalanced(BT)).
run_test68:-build_tree68(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size68(N1),
get_height68(N2),
get_preorder68(L1),
get_preorder68(L4),
get_preorder68(L7),
get_postorder68(L2),
get_postorder68(L5),
get_postorder68(L8),
get_inorder68(L3),
get_inorder68(L6),
get_inorder68(L9),
get_tour68(L10),
get_string68(S),
checkSame(is_balanced68, isBalanced(BT)).
run_test69:-build_tree69(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size69(N1),
get_height69(N2),
get_preorder69(L1),
get_preorder69(L4),
get_preorder69(L7),
get_postorder69(L2),
get_postorder69(L5),
get_postorder69(L8),
get_inorder69(L3),
get_inorder69(L6),
get_inorder69(L9),
get_tour69(L10),
get_string69(S),
checkSame(is_balanced69, isBalanced(BT)).
run_test70:-build_tree70(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size70(N1),
get_height70(N2),
get_preorder70(L1),
get_preorder70(L4),
get_preorder70(L7),
get_postorder70(L2),
get_postorder70(L5),
get_postorder70(L8),
get_inorder70(L3),
get_inorder70(L6),
get_inorder70(L9),
get_tour70(L10),
get_string70(S),
checkSame(is_balanced70, isBalanced(BT)).
run_test71:-build_tree71(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size71(N1),
get_height71(N2),
get_preorder71(L1),
get_preorder71(L4),
get_preorder71(L7),
get_postorder71(L2),
get_postorder71(L5),
get_postorder71(L8),
get_inorder71(L3),
get_inorder71(L6),
get_inorder71(L9),
get_tour71(L10),
get_string71(S),
checkSame(is_balanced71, isBalanced(BT)).
run_test72:-build_tree72(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size72(N1),
get_height72(N2),
get_preorder72(L1),
get_preorder72(L4),
get_preorder72(L7),
get_postorder72(L2),
get_postorder72(L5),
get_postorder72(L8),
get_inorder72(L3),
get_inorder72(L6),
get_inorder72(L9),
get_tour72(L10),
get_string72(S),
checkSame(is_balanced72, isBalanced(BT)).
run_test73:-build_tree73(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size73(N1),
get_height73(N2),
get_preorder73(L1),
get_preorder73(L4),
get_preorder73(L7),
get_postorder73(L2),
get_postorder73(L5),
get_postorder73(L8),
get_inorder73(L3),
get_inorder73(L6),
get_inorder73(L9),
get_tour73(L10),
get_string73(S),
checkSame(is_balanced73, isBalanced(BT)).
run_test74:-build_tree74(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size74(N1),
get_height74(N2),
get_preorder74(L1),
get_preorder74(L4),
get_preorder74(L7),
get_postorder74(L2),
get_postorder74(L5),
get_postorder74(L8),
get_inorder74(L3),
get_inorder74(L6),
get_inorder74(L9),
get_tour74(L10),
get_string74(S),
checkSame(is_balanced74, isBalanced(BT)).
run_test75:-build_tree75(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size75(N1),
get_height75(N2),
get_preorder75(L1),
get_preorder75(L4),
get_preorder75(L7),
get_postorder75(L2),
get_postorder75(L5),
get_postorder75(L8),
get_inorder75(L3),
get_inorder75(L6),
get_inorder75(L9),
get_tour75(L10),
get_string75(S),
checkSame(is_balanced75, isBalanced(BT)).
run_test76:-build_tree76(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size76(N1),
get_height76(N2),
get_preorder76(L1),
get_preorder76(L4),
get_preorder76(L7),
get_postorder76(L2),
get_postorder76(L5),
get_postorder76(L8),
get_inorder76(L3),
get_inorder76(L6),
get_inorder76(L9),
get_tour76(L10),
get_string76(S),
checkSame(is_balanced76, isBalanced(BT)).
run_test77:-build_tree77(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size77(N1),
get_height77(N2),
get_preorder77(L1),
get_preorder77(L4),
get_preorder77(L7),
get_postorder77(L2),
get_postorder77(L5),
get_postorder77(L8),
get_inorder77(L3),
get_inorder77(L6),
get_inorder77(L9),
get_tour77(L10),
get_string77(S),
checkSame(is_balanced77, isBalanced(BT)).
run_test78:-build_tree78(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size78(N1),
get_height78(N2),
get_preorder78(L1),
get_preorder78(L4),
get_preorder78(L7),
get_postorder78(L2),
get_postorder78(L5),
get_postorder78(L8),
get_inorder78(L3),
get_inorder78(L6),
get_inorder78(L9),
get_tour78(L10),
get_string78(S),
checkSame(is_balanced78, isBalanced(BT)).
run_test79:-build_tree79(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size79(N1),
get_height79(N2),
get_preorder79(L1),
get_preorder79(L4),
get_preorder79(L7),
get_postorder79(L2),
get_postorder79(L5),
get_postorder79(L8),
get_inorder79(L3),
get_inorder79(L6),
get_inorder79(L9),
get_tour79(L10),
get_string79(S),
checkSame(is_balanced79, isBalanced(BT)).
run_test80:-build_tree80(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size80(N1),
get_height80(N2),
get_preorder80(L1),
get_preorder80(L4),
get_preorder80(L7),
get_postorder80(L2),
get_postorder80(L5),
get_postorder80(L8),
get_inorder80(L3),
get_inorder80(L6),
get_inorder80(L9),
get_tour80(L10),
get_string80(S),
checkSame(is_balanced80, isBalanced(BT)).
run_test81:-build_tree81(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size81(N1),
get_height81(N2),
get_preorder81(L1),
get_preorder81(L4),
get_preorder81(L7),
get_postorder81(L2),
get_postorder81(L5),
get_postorder81(L8),
get_inorder81(L3),
get_inorder81(L6),
get_inorder81(L9),
get_tour81(L10),
get_string81(S),
checkSame(is_balanced81, isBalanced(BT)).
run_test82:-build_tree82(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size82(N1),
get_height82(N2),
get_preorder82(L1),
get_preorder82(L4),
get_preorder82(L7),
get_postorder82(L2),
get_postorder82(L5),
get_postorder82(L8),
get_inorder82(L3),
get_inorder82(L6),
get_inorder82(L9),
get_tour82(L10),
get_string82(S),
checkSame(is_balanced82, isBalanced(BT)).
run_test83:-build_tree83(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size83(N1),
get_height83(N2),
get_preorder83(L1),
get_preorder83(L4),
get_preorder83(L7),
get_postorder83(L2),
get_postorder83(L5),
get_postorder83(L8),
get_inorder83(L3),
get_inorder83(L6),
get_inorder83(L9),
get_tour83(L10),
get_string83(S),
checkSame(is_balanced83, isBalanced(BT)).
run_test84:-build_tree84(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size84(N1),
get_height84(N2),
get_preorder84(L1),
get_preorder84(L4),
get_preorder84(L7),
get_postorder84(L2),
get_postorder84(L5),
get_postorder84(L8),
get_inorder84(L3),
get_inorder84(L6),
get_inorder84(L9),
get_tour84(L10),
get_string84(S),
checkSame(is_balanced84, isBalanced(BT)).
run_test85:-build_tree85(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size85(N1),
get_height85(N2),
get_preorder85(L1),
get_preorder85(L4),
get_preorder85(L7),
get_postorder85(L2),
get_postorder85(L5),
get_postorder85(L8),
get_inorder85(L3),
get_inorder85(L6),
get_inorder85(L9),
get_tour85(L10),
get_string85(S),
checkSame(is_balanced85, isBalanced(BT)).
run_test86:-build_tree86(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size86(N1),
get_height86(N2),
get_preorder86(L1),
get_preorder86(L4),
get_preorder86(L7),
get_postorder86(L2),
get_postorder86(L5),
get_postorder86(L8),
get_inorder86(L3),
get_inorder86(L6),
get_inorder86(L9),
get_tour86(L10),
get_string86(S),
checkSame(is_balanced86, isBalanced(BT)).
run_test87:-build_tree87(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size87(N1),
get_height87(N2),
get_preorder87(L1),
get_preorder87(L4),
get_preorder87(L7),
get_postorder87(L2),
get_postorder87(L5),
get_postorder87(L8),
get_inorder87(L3),
get_inorder87(L6),
get_inorder87(L9),
get_tour87(L10),
get_string87(S),
checkSame(is_balanced87, isBalanced(BT)).
run_test88:-build_tree88(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size88(N1),
get_height88(N2),
get_preorder88(L1),
get_preorder88(L4),
get_preorder88(L7),
get_postorder88(L2),
get_postorder88(L5),
get_postorder88(L8),
get_inorder88(L3),
get_inorder88(L6),
get_inorder88(L9),
get_tour88(L10),
get_string88(S),
checkSame(is_balanced88, isBalanced(BT)).
run_test89:-build_tree89(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size89(N1),
get_height89(N2),
get_preorder89(L1),
get_preorder89(L4),
get_preorder89(L7),
get_postorder89(L2),
get_postorder89(L5),
get_postorder89(L8),
get_inorder89(L3),
get_inorder89(L6),
get_inorder89(L9),
get_tour89(L10),
get_string89(S),
checkSame(is_balanced89, isBalanced(BT)).
run_test90:-build_tree90(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size90(N1),
get_height90(N2),
get_preorder90(L1),
get_preorder90(L4),
get_preorder90(L7),
get_postorder90(L2),
get_postorder90(L5),
get_postorder90(L8),
get_inorder90(L3),
get_inorder90(L6),
get_inorder90(L9),
get_tour90(L10),
get_string90(S),
checkSame(is_balanced90, isBalanced(BT)).
run_test91:-build_tree91(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size91(N1),
get_height91(N2),
get_preorder91(L1),
get_preorder91(L4),
get_preorder91(L7),
get_postorder91(L2),
get_postorder91(L5),
get_postorder91(L8),
get_inorder91(L3),
get_inorder91(L6),
get_inorder91(L9),
get_tour91(L10),
get_string91(S),
checkSame(is_balanced91, isBalanced(BT)).
run_test92:-build_tree92(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size92(N1),
get_height92(N2),
get_preorder92(L1),
get_preorder92(L4),
get_preorder92(L7),
get_postorder92(L2),
get_postorder92(L5),
get_postorder92(L8),
get_inorder92(L3),
get_inorder92(L6),
get_inorder92(L9),
get_tour92(L10),
get_string92(S),
checkSame(is_balanced92, isBalanced(BT)).
run_test93:-build_tree93(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size93(N1),
get_height93(N2),
get_preorder93(L1),
get_preorder93(L4),
get_preorder93(L7),
get_postorder93(L2),
get_postorder93(L5),
get_postorder93(L8),
get_inorder93(L3),
get_inorder93(L6),
get_inorder93(L9),
get_tour93(L10),
get_string93(S),
checkSame(is_balanced93, isBalanced(BT)).
run_test94:-build_tree94(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size94(N1),
get_height94(N2),
get_preorder94(L1),
get_preorder94(L4),
get_preorder94(L7),
get_postorder94(L2),
get_postorder94(L5),
get_postorder94(L8),
get_inorder94(L3),
get_inorder94(L6),
get_inorder94(L9),
get_tour94(L10),
get_string94(S),
checkSame(is_balanced94, isBalanced(BT)).
run_test95:-build_tree95(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size95(N1),
get_height95(N2),
get_preorder95(L1),
get_preorder95(L4),
get_preorder95(L7),
get_postorder95(L2),
get_postorder95(L5),
get_postorder95(L8),
get_inorder95(L3),
get_inorder95(L6),
get_inorder95(L9),
get_tour95(L10),
get_string95(S),
checkSame(is_balanced95, isBalanced(BT)).
run_test96:-build_tree96(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size96(N1),
get_height96(N2),
get_preorder96(L1),
get_preorder96(L4),
get_preorder96(L7),
get_postorder96(L2),
get_postorder96(L5),
get_postorder96(L8),
get_inorder96(L3),
get_inorder96(L6),
get_inorder96(L9),
get_tour96(L10),
get_string96(S),
checkSame(is_balanced96, isBalanced(BT)).
run_test97:-build_tree97(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size97(N1),
get_height97(N2),
get_preorder97(L1),
get_preorder97(L4),
get_preorder97(L7),
get_postorder97(L2),
get_postorder97(L5),
get_postorder97(L8),
get_inorder97(L3),
get_inorder97(L6),
get_inorder97(L9),
get_tour97(L10),
get_string97(S),
checkSame(is_balanced97, isBalanced(BT)).
run_test98:-build_tree98(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size98(N1),
get_height98(N2),
get_preorder98(L1),
get_preorder98(L4),
get_preorder98(L7),
get_postorder98(L2),
get_postorder98(L5),
get_postorder98(L8),
get_inorder98(L3),
get_inorder98(L6),
get_inorder98(L9),
get_tour98(L10),
get_string98(S),
checkSame(is_balanced98, isBalanced(BT)).
run_test99:-build_tree99(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size99(N1),
get_height99(N2),
get_preorder99(L1),
get_preorder99(L4),
get_preorder99(L7),
get_postorder99(L2),
get_postorder99(L5),
get_postorder99(L8),
get_inorder99(L3),
get_inorder99(L6),
get_inorder99(L9),
get_tour99(L10),
get_string99(S),
checkSame(is_balanced99, isBalanced(BT)).
build_tree100(BT):- BT = node(91, node(1, node(17, node(25, node(94, node(22, empty, empty), empty), node(6, empty, empty)), node(3, node(74, empty, empty), empty)), node(7, node(52, node(42, empty, empty), empty), node(87, empty, empty))), node(27, node(61, node(40, node(97, node(79, empty, empty), empty), node(69, empty, empty)), node(89, node(88, empty, empty), empty)), node(21, node(51, node(43, empty, empty), empty), node(56, empty, empty)))).
get_size100(N):- N = 25.
get_height100(N):- N = 6.
get_inorder100(L):- L = [22, 94, 25, 6, 17, 74, 3, 1, 42, 52, 7, 87, 91, 79, 97, 40, 69, 61, 88, 89, 27, 43, 51, 21, 56].
get_postorder100(L):- L = [22, 94, 6, 25, 74, 3, 17, 42, 52, 87, 7, 1, 79, 97, 69, 40, 88, 89, 61, 43, 51, 56, 21, 27, 91].
get_preorder100(L):- L = [91, 1, 17, 25, 94, 22, 6, 3, 74, 7, 52, 42, 87, 27, 61, 40, 97, 79, 69, 89, 88, 21, 51, 43, 56].
get_tour100(L):- L = [91, 1, 17, 25, 94, 22, 22, 22, 94, 94, 25, 6, 6, 6, 25, 17, 3, 74, 74, 74, 3, 3, 17, 1, 7, 52, 42, 42, 42, 52, 52, 7, 87, 87, 87, 7, 1, 91, 27, 61, 40, 97, 79, 79, 79, 97, 97, 40, 69, 69, 69, 40, 61, 89, 88, 88, 88, 89, 89, 61, 27, 21, 51, 43, 43, 43, 51, 51, 21, 56, 56, 56, 21, 27, 91].
is_balanced100.
get_string100(S):- S = "(91, (1, (17, (25, (94, (22, (), ()), ()), (6, (), ())), (3, (74, (), ()), ())), (7, (52, (42, (), ()), ()), (87, (), ()))), (27, (61, (40, (97, (79, (), ()), ()), (69, (), ())), (89, (88, (), ()), ())), (21, (51, (43, (), ()), ()), (56, (), ()))))".
build_tree101(BT):- BT = node(56, node(98, node(48, node(9, node(71, node(22, empty, empty), empty), node(99, empty, empty)), node(73, node(90, empty, empty), empty)), node(31, node(51, node(97, empty, empty), empty), node(99, empty, empty))), node(61, node(88, node(48, node(16, empty, empty), node(14, empty, empty)), node(84, node(50, empty, empty), empty)), node(8, node(27, node(12, empty, empty), empty), node(63, empty, empty)))).
get_size101(N):- N = 24.
get_height101(N):- N = 6.
get_inorder101(L):- L = [22, 71, 9, 99, 48, 90, 73, 98, 97, 51, 31, 99, 56, 16, 48, 14, 88, 50, 84, 61, 12, 27, 8, 63].
get_postorder101(L):- L = [22, 71, 99, 9, 90, 73, 48, 97, 51, 99, 31, 98, 16, 14, 48, 50, 84, 88, 12, 27, 63, 8, 61, 56].
get_preorder101(L):- L = [56, 98, 48, 9, 71, 22, 99, 73, 90, 31, 51, 97, 99, 61, 88, 48, 16, 14, 84, 50, 8, 27, 12, 63].
get_tour101(L):- L = [56, 98, 48, 9, 71, 22, 22, 22, 71, 71, 9, 99, 99, 99, 9, 48, 73, 90, 90, 90, 73, 73, 48, 98, 31, 51, 97, 97, 97, 51, 51, 31, 99, 99, 99, 31, 98, 56, 61, 88, 48, 16, 16, 16, 48, 14, 14, 14, 48, 88, 84, 50, 50, 50, 84, 84, 88, 61, 8, 27, 12, 12, 12, 27, 27, 8, 63, 63, 63, 8, 61, 56].
is_balanced101.
get_string101(S):- S = "(56, (98, (48, (9, (71, (22, (), ()), ()), (99, (), ())), (73, (90, (), ()), ())), (31, (51, (97, (), ()), ()), (99, (), ()))), (61, (88, (48, (16, (), ()), (14, (), ())), (84, (50, (), ()), ())), (8, (27, (12, (), ()), ()), (63, (), ()))))".
build_tree102(BT):- BT = node(47, node(79, node(54, node(87, node(16, node(17, empty, empty), empty), node(26, empty, empty)), node(11, node(15, empty, empty), empty)), node(10, node(36, node(63, empty, empty), empty), node(36, node(38, empty, empty), empty))), node(58, node(32, node(64, node(58, node(45, empty, empty), empty), node(46, empty, empty)), node(79, node(6, empty, empty), empty)), node(98, node(16, node(96, empty, empty), empty), node(75, empty, empty)))).
get_size102(N):- N = 26.
get_height102(N):- N = 6.
get_inorder102(L):- L = [17, 16, 87, 26, 54, 15, 11, 79, 63, 36, 10, 38, 36, 47, 45, 58, 64, 46, 32, 6, 79, 58, 96, 16, 98, 75].
get_postorder102(L):- L = [17, 16, 26, 87, 15, 11, 54, 63, 36, 38, 36, 10, 79, 45, 58, 46, 64, 6, 79, 32, 96, 16, 75, 98, 58, 47].
get_preorder102(L):- L = [47, 79, 54, 87, 16, 17, 26, 11, 15, 10, 36, 63, 36, 38, 58, 32, 64, 58, 45, 46, 79, 6, 98, 16, 96, 75].
get_tour102(L):- L = [47, 79, 54, 87, 16, 17, 17, 17, 16, 16, 87, 26, 26, 26, 87, 54, 11, 15, 15, 15, 11, 11, 54, 79, 10, 36, 63, 63, 63, 36, 36, 10, 36, 38, 38, 38, 36, 36, 10, 79, 47, 58, 32, 64, 58, 45, 45, 45, 58, 58, 64, 46, 46, 46, 64, 32, 79, 6, 6, 6, 79, 79, 32, 58, 98, 16, 96, 96, 96, 16, 16, 98, 75, 75, 75, 98, 58, 47].
is_balanced102.
get_string102(S):- S = "(47, (79, (54, (87, (16, (17, (), ()), ()), (26, (), ())), (11, (15, (), ()), ())), (10, (36, (63, (), ()), ()), (36, (38, (), ()), ()))), (58, (32, (64, (58, (45, (), ()), ()), (46, (), ())), (79, (6, (), ()), ())), (98, (16, (96, (), ()), ()), (75, (), ()))))".
build_tree103(BT):- BT = node(70, node(83, node(37, node(36, node(90, node(9, node(29, empty, empty), empty), node(10, empty, empty)), node(70, node(93, empty, empty), empty)), node(57, node(97, node(88, empty, empty), empty), node(79, empty, empty))), node(13, node(81, node(38, node(63, empty, empty), empty), node(19, empty, empty)), node(30, node(65, empty, empty), empty))), node(49, node(45, node(4, node(71, node(71, empty, empty), empty), node(25, empty, empty)), node(88, node(58, empty, empty), empty)), node(47, node(90, node(71, node(81, empty, empty), empty), node(7, empty, empty)), node(75, node(32, empty, empty), empty)))).
get_size103(N):- N = 36.
get_height103(N):- N = 7.
get_inorder103(L):- L = [29, 9, 90, 10, 36, 93, 70, 37, 88, 97, 57, 79, 83, 63, 38, 81, 19, 13, 65, 30, 70, 71, 71, 4, 25, 45, 58, 88, 49, 81, 71, 90, 7, 47, 32, 75].
get_postorder103(L):- L = [29, 9, 10, 90, 93, 70, 36, 88, 97, 79, 57, 37, 63, 38, 19, 81, 65, 30, 13, 83, 71, 71, 25, 4, 58, 88, 45, 81, 71, 7, 90, 32, 75, 47, 49, 70].
get_preorder103(L):- L = [70, 83, 37, 36, 90, 9, 29, 10, 70, 93, 57, 97, 88, 79, 13, 81, 38, 63, 19, 30, 65, 49, 45, 4, 71, 71, 25, 88, 58, 47, 90, 71, 81, 7, 75, 32].
get_tour103(L):- L = [70, 83, 37, 36, 90, 9, 29, 29, 29, 9, 9, 90, 10, 10, 10, 90, 36, 70, 93, 93, 93, 70, 70, 36, 37, 57, 97, 88, 88, 88, 97, 97, 57, 79, 79, 79, 57, 37, 83, 13, 81, 38, 63, 63, 63, 38, 38, 81, 19, 19, 19, 81, 13, 30, 65, 65, 65, 30, 30, 13, 83, 70, 49, 45, 4, 71, 71, 71, 71, 71, 71, 4, 25, 25, 25, 4, 45, 88, 58, 58, 58, 88, 88, 45, 49, 47, 90, 71, 81, 81, 81, 71, 71, 90, 7, 7, 7, 90, 47, 75, 32, 32, 32, 75, 75, 47, 49, 70].
is_balanced103.
get_string103(S):- S = "(70, (83, (37, (36, (90, (9, (29, (), ()), ()), (10, (), ())), (70, (93, (), ()), ())), (57, (97, (88, (), ()), ()), (79, (), ()))), (13, (81, (38, (63, (), ()), ()), (19, (), ())), (30, (65, (), ()), ()))), (49, (45, (4, (71, (71, (), ()), ()), (25, (), ())), (88, (58, (), ()), ())), (47, (90, (71, (81, (), ()), ()), (7, (), ())), (75, (32, (), ()), ()))))".
build_tree104(BT):- BT = node(8, node(76, node(56, node(19, node(78, node(53, empty, empty), empty), node(79, empty, empty)), node(30, node(23, empty, empty), empty)), node(13, node(80, node(42, empty, empty), empty), node(21, empty, empty))), node(81, node(71, node(59, node(1, empty, empty), empty), node(2, node(2, empty, empty), empty)), node(14, node(67, node(5, empty, empty), empty), node(96, empty, empty)))).
get_size104(N):- N = 23.
get_height104(N):- N = 6.
get_inorder104(L):- L = [53, 78, 19, 79, 56, 23, 30, 76, 42, 80, 13, 21, 8, 1, 59, 71, 2, 2, 81, 5, 67, 14, 96].
get_postorder104(L):- L = [53, 78, 79, 19, 23, 30, 56, 42, 80, 21, 13, 76, 1, 59, 2, 2, 71, 5, 67, 96, 14, 81, 8].
get_preorder104(L):- L = [8, 76, 56, 19, 78, 53, 79, 30, 23, 13, 80, 42, 21, 81, 71, 59, 1, 2, 2, 14, 67, 5, 96].
get_tour104(L):- L = [8, 76, 56, 19, 78, 53, 53, 53, 78, 78, 19, 79, 79, 79, 19, 56, 30, 23, 23, 23, 30, 30, 56, 76, 13, 80, 42, 42, 42, 80, 80, 13, 21, 21, 21, 13, 76, 8, 81, 71, 59, 1, 1, 1, 59, 59, 71, 2, 2, 2, 2, 2, 2, 71, 81, 14, 67, 5, 5, 5, 67, 67, 14, 96, 96, 96, 14, 81, 8].
is_balanced104.
get_string104(S):- S = "(8, (76, (56, (19, (78, (53, (), ()), ()), (79, (), ())), (30, (23, (), ()), ())), (13, (80, (42, (), ()), ()), (21, (), ()))), (81, (71, (59, (1, (), ()), ()), (2, (2, (), ()), ())), (14, (67, (5, (), ()), ()), (96, (), ()))))".
build_tree105(BT):- BT = node(55, node(81, node(70, node(22, node(49, node(32, node(75, empty, empty), empty), node(85, empty, empty)), node(21, node(62, empty, empty), empty)), node(74, node(54, node(91, empty, empty), empty), node(2, empty, empty))), node(18, node(62, node(52, node(83, empty, empty), empty), node(26, empty, empty)), node(80, node(9, empty, empty), empty))), node(48, node(98, node(66, node(13, node(25, empty, empty), empty), node(18, node(6, empty, empty), empty)), node(62, node(48, node(20, empty, empty), empty), node(87, empty, empty))), node(70, node(93, node(97, node(52, empty, empty), empty), node(75, empty, empty)), node(50, node(76, empty, empty), empty)))).
get_size105(N):- N = 39.
get_height105(N):- N = 7.
get_inorder105(L):- L = [75, 32, 49, 85, 22, 62, 21, 70, 91, 54, 74, 2, 81, 83, 52, 62, 26, 18, 9, 80, 55, 25, 13, 66, 6, 18, 98, 20, 48, 62, 87, 48, 52, 97, 93, 75, 70, 76, 50].
get_postorder105(L):- L = [75, 32, 85, 49, 62, 21, 22, 91, 54, 2, 74, 70, 83, 52, 26, 62, 9, 80, 18, 81, 25, 13, 6, 18, 66, 20, 48, 87, 62, 98, 52, 97, 75, 93, 76, 50, 70, 48, 55].
get_preorder105(L):- L = [55, 81, 70, 22, 49, 32, 75, 85, 21, 62, 74, 54, 91, 2, 18, 62, 52, 83, 26, 80, 9, 48, 98, 66, 13, 25, 18, 6, 62, 48, 20, 87, 70, 93, 97, 52, 75, 50, 76].
get_tour105(L):- L = [55, 81, 70, 22, 49, 32, 75, 75, 75, 32, 32, 49, 85, 85, 85, 49, 22, 21, 62, 62, 62, 21, 21, 22, 70, 74, 54, 91, 91, 91, 54, 54, 74, 2, 2, 2, 74, 70, 81, 18, 62, 52, 83, 83, 83, 52, 52, 62, 26, 26, 26, 62, 18, 80, 9, 9, 9, 80, 80, 18, 81, 55, 48, 98, 66, 13, 25, 25, 25, 13, 13, 66, 18, 6, 6, 6, 18, 18, 66, 98, 62, 48, 20, 20, 20, 48, 48, 62, 87, 87, 87, 62, 98, 48, 70, 93, 97, 52, 52, 52, 97, 97, 93, 75, 75, 75, 93, 70, 50, 76, 76, 76, 50, 50, 70, 48, 55].
is_balanced105.
get_string105(S):- S = "(55, (81, (70, (22, (49, (32, (75, (), ()), ()), (85, (), ())), (21, (62, (), ()), ())), (74, (54, (91, (), ()), ()), (2, (), ()))), (18, (62, (52, (83, (), ()), ()), (26, (), ())), (80, (9, (), ()), ()))), (48, (98, (66, (13, (25, (), ()), ()), (18, (6, (), ()), ())), (62, (48, (20, (), ()), ()), (87, (), ()))), (70, (93, (97, (52, (), ()), ()), (75, (), ())), (50, (76, (), ()), ()))))".
build_tree106(BT):- BT = node(6, node(82, node(77, node(26, node(52, node(5, empty, empty), empty), node(8, empty, empty)), node(92, node(9, empty, empty), node(11, empty, empty))), node(41, node(95, node(86, node(77, empty, empty), empty), node(79, empty, empty)), node(50, node(47, empty, empty), empty))), node(69, node(37, node(52, node(16, node(97, empty, empty), empty), node(5, empty, empty)), node(40, node(87, empty, empty), empty)), node(58, node(89, node(57, empty, empty), empty), node(8, empty, empty)))).
get_size106(N):- N = 29.
get_height106(N):- N = 6.
get_inorder106(L):- L = [5, 52, 26, 8, 77, 9, 92, 11, 82, 77, 86, 95, 79, 41, 47, 50, 6, 97, 16, 52, 5, 37, 87, 40, 69, 57, 89, 58, 8].
get_postorder106(L):- L = [5, 52, 8, 26, 9, 11, 92, 77, 77, 86, 79, 95, 47, 50, 41, 82, 97, 16, 5, 52, 87, 40, 37, 57, 89, 8, 58, 69, 6].
get_preorder106(L):- L = [6, 82, 77, 26, 52, 5, 8, 92, 9, 11, 41, 95, 86, 77, 79, 50, 47, 69, 37, 52, 16, 97, 5, 40, 87, 58, 89, 57, 8].
get_tour106(L):- L = [6, 82, 77, 26, 52, 5, 5, 5, 52, 52, 26, 8, 8, 8, 26, 77, 92, 9, 9, 9, 92, 11, 11, 11, 92, 77, 82, 41, 95, 86, 77, 77, 77, 86, 86, 95, 79, 79, 79, 95, 41, 50, 47, 47, 47, 50, 50, 41, 82, 6, 69, 37, 52, 16, 97, 97, 97, 16, 16, 52, 5, 5, 5, 52, 37, 40, 87, 87, 87, 40, 40, 37, 69, 58, 89, 57, 57, 57, 89, 89, 58, 8, 8, 8, 58, 69, 6].
is_balanced106.
get_string106(S):- S = "(6, (82, (77, (26, (52, (5, (), ()), ()), (8, (), ())), (92, (9, (), ()), (11, (), ()))), (41, (95, (86, (77, (), ()), ()), (79, (), ())), (50, (47, (), ()), ()))), (69, (37, (52, (16, (97, (), ()), ()), (5, (), ())), (40, (87, (), ()), ())), (58, (89, (57, (), ()), ()), (8, (), ()))))".
build_tree107(BT):- BT = node(66, node(63, node(46, node(77, node(29, node(86, empty, empty), empty), node(83, empty, empty)), node(3, node(44, empty, empty), empty)), node(11, node(33, node(11, empty, empty), empty), node(35, empty, empty))), node(73, node(73, node(15, node(89, node(8, empty, empty), empty), node(52, empty, empty)), node(80, node(29, empty, empty), empty)), node(20, node(19, node(36, empty, empty), empty), node(76, empty, empty)))).
get_size107(N):- N = 25.
get_height107(N):- N = 6.
get_inorder107(L):- L = [86, 29, 77, 83, 46, 44, 3, 63, 11, 33, 11, 35, 66, 8, 89, 15, 52, 73, 29, 80, 73, 36, 19, 20, 76].
get_postorder107(L):- L = [86, 29, 83, 77, 44, 3, 46, 11, 33, 35, 11, 63, 8, 89, 52, 15, 29, 80, 73, 36, 19, 76, 20, 73, 66].
get_preorder107(L):- L = [66, 63, 46, 77, 29, 86, 83, 3, 44, 11, 33, 11, 35, 73, 73, 15, 89, 8, 52, 80, 29, 20, 19, 36, 76].
get_tour107(L):- L = [66, 63, 46, 77, 29, 86, 86, 86, 29, 29, 77, 83, 83, 83, 77, 46, 3, 44, 44, 44, 3, 3, 46, 63, 11, 33, 11, 11, 11, 33, 33, 11, 35, 35, 35, 11, 63, 66, 73, 73, 15, 89, 8, 8, 8, 89, 89, 15, 52, 52, 52, 15, 73, 80, 29, 29, 29, 80, 80, 73, 73, 20, 19, 36, 36, 36, 19, 19, 20, 76, 76, 76, 20, 73, 66].
is_balanced107.
get_string107(S):- S = "(66, (63, (46, (77, (29, (86, (), ()), ()), (83, (), ())), (3, (44, (), ()), ())), (11, (33, (11, (), ()), ()), (35, (), ()))), (73, (73, (15, (89, (8, (), ()), ()), (52, (), ())), (80, (29, (), ()), ())), (20, (19, (36, (), ()), ()), (76, (), ()))))".
build_tree108(BT):- BT = node(2, node(58, node(31, node(18, node(20, node(75, node(24, empty, empty), empty), node(45, empty, empty)), node(49, node(83, empty, empty), empty)), node(95, node(48, node(33, empty, empty), empty), node(14, empty, empty))), node(93, node(67, node(22, node(21, empty, empty), empty), node(77, empty, empty)), node(30, node(61, empty, empty), empty))), node(53, node(20, node(66, node(91, node(65, empty, empty), empty), node(46, empty, empty)), node(24, node(34, empty, empty), empty)), node(55, node(3, node(16, empty, empty), empty), node(38, empty, empty)))).
get_size108(N):- N = 33.
get_height108(N):- N = 7.
get_inorder108(L):- L = [24, 75, 20, 45, 18, 83, 49, 31, 33, 48, 95, 14, 58, 21, 22, 67, 77, 93, 61, 30, 2, 65, 91, 66, 46, 20, 34, 24, 53, 16, 3, 55, 38].
get_postorder108(L):- L = [24, 75, 45, 20, 83, 49, 18, 33, 48, 14, 95, 31, 21, 22, 77, 67, 61, 30, 93, 58, 65, 91, 46, 66, 34, 24, 20, 16, 3, 38, 55, 53, 2].
get_preorder108(L):- L = [2, 58, 31, 18, 20, 75, 24, 45, 49, 83, 95, 48, 33, 14, 93, 67, 22, 21, 77, 30, 61, 53, 20, 66, 91, 65, 46, 24, 34, 55, 3, 16, 38].
get_tour108(L):- L = [2, 58, 31, 18, 20, 75, 24, 24, 24, 75, 75, 20, 45, 45, 45, 20, 18, 49, 83, 83, 83, 49, 49, 18, 31, 95, 48, 33, 33, 33, 48, 48, 95, 14, 14, 14, 95, 31, 58, 93, 67, 22, 21, 21, 21, 22, 22, 67, 77, 77, 77, 67, 93, 30, 61, 61, 61, 30, 30, 93, 58, 2, 53, 20, 66, 91, 65, 65, 65, 91, 91, 66, 46, 46, 46, 66, 20, 24, 34, 34, 34, 24, 24, 20, 53, 55, 3, 16, 16, 16, 3, 3, 55, 38, 38, 38, 55, 53, 2].
is_balanced108.
get_string108(S):- S = "(2, (58, (31, (18, (20, (75, (24, (), ()), ()), (45, (), ())), (49, (83, (), ()), ())), (95, (48, (33, (), ()), ()), (14, (), ()))), (93, (67, (22, (21, (), ()), ()), (77, (), ())), (30, (61, (), ()), ()))), (53, (20, (66, (91, (65, (), ()), ()), (46, (), ())), (24, (34, (), ()), ())), (55, (3, (16, (), ()), ()), (38, (), ()))))".
build_tree109(BT):- BT = node(79, node(42, node(49, node(49, node(51, node(63, empty, empty), empty), node(86, empty, empty)), node(28, node(35, empty, empty), empty)), node(93, node(83, node(52, empty, empty), empty), node(87, node(49, empty, empty), empty))), node(83, node(59, node(52, node(10, node(31, empty, empty), empty), node(59, empty, empty)), node(18, node(24, empty, empty), empty)), node(89, node(11, node(58, empty, empty), empty), node(7, empty, empty)))).
get_size109(N):- N = 26.
get_height109(N):- N = 6.
get_inorder109(L):- L = [63, 51, 49, 86, 49, 35, 28, 42, 52, 83, 93, 49, 87, 79, 31, 10, 52, 59, 59, 24, 18, 83, 58, 11, 89, 7].
get_postorder109(L):- L = [63, 51, 86, 49, 35, 28, 49, 52, 83, 49, 87, 93, 42, 31, 10, 59, 52, 24, 18, 59, 58, 11, 7, 89, 83, 79].
get_preorder109(L):- L = [79, 42, 49, 49, 51, 63, 86, 28, 35, 93, 83, 52, 87, 49, 83, 59, 52, 10, 31, 59, 18, 24, 89, 11, 58, 7].
get_tour109(L):- L = [79, 42, 49, 49, 51, 63, 63, 63, 51, 51, 49, 86, 86, 86, 49, 49, 28, 35, 35, 35, 28, 28, 49, 42, 93, 83, 52, 52, 52, 83, 83, 93, 87, 49, 49, 49, 87, 87, 93, 42, 79, 83, 59, 52, 10, 31, 31, 31, 10, 10, 52, 59, 59, 59, 52, 59, 18, 24, 24, 24, 18, 18, 59, 83, 89, 11, 58, 58, 58, 11, 11, 89, 7, 7, 7, 89, 83, 79].
is_balanced109.
get_string109(S):- S = "(79, (42, (49, (49, (51, (63, (), ()), ()), (86, (), ())), (28, (35, (), ()), ())), (93, (83, (52, (), ()), ()), (87, (49, (), ()), ()))), (83, (59, (52, (10, (31, (), ()), ()), (59, (), ())), (18, (24, (), ()), ())), (89, (11, (58, (), ()), ()), (7, (), ()))))".
build_tree110(BT):- BT = node(37, node(33, node(41, node(59, node(2, node(58, node(41, empty, empty), empty), node(67, empty, empty)), node(28, node(55, empty, empty), empty)), node(18, node(99, node(23, empty, empty), empty), node(71, empty, empty))), node(83, node(74, node(31, node(21, empty, empty), empty), node(95, empty, empty)), node(65, node(65, empty, empty), empty))), node(57, node(31, node(98, node(87, node(76, empty, empty), empty), node(19, empty, empty)), node(71, node(68, node(46, empty, empty), empty), node(94, empty, empty))), node(12, node(85, node(81, node(99, empty, empty), empty), node(3, empty, empty)), node(32, node(94, empty, empty), empty)))).
get_size110(N):- N = 38.
get_height110(N):- N = 7.
get_inorder110(L):- L = [41, 58, 2, 67, 59, 55, 28, 41, 23, 99, 18, 71, 33, 21, 31, 74, 95, 83, 65, 65, 37, 76, 87, 98, 19, 31, 46, 68, 71, 94, 57, 99, 81, 85, 3, 12, 94, 32].
get_postorder110(L):- L = [41, 58, 67, 2, 55, 28, 59, 23, 99, 71, 18, 41, 21, 31, 95, 74, 65, 65, 83, 33, 76, 87, 19, 98, 46, 68, 94, 71, 31, 99, 81, 3, 85, 94, 32, 12, 57, 37].
get_preorder110(L):- L = [37, 33, 41, 59, 2, 58, 41, 67, 28, 55, 18, 99, 23, 71, 83, 74, 31, 21, 95, 65, 65, 57, 31, 98, 87, 76, 19, 71, 68, 46, 94, 12, 85, 81, 99, 3, 32, 94].
get_tour110(L):- L = [37, 33, 41, 59, 2, 58, 41, 41, 41, 58, 58, 2, 67, 67, 67, 2, 59, 28, 55, 55, 55, 28, 28, 59, 41, 18, 99, 23, 23, 23, 99, 99, 18, 71, 71, 71, 18, 41, 33, 83, 74, 31, 21, 21, 21, 31, 31, 74, 95, 95, 95, 74, 83, 65, 65, 65, 65, 65, 65, 83, 33, 37, 57, 31, 98, 87, 76, 76, 76, 87, 87, 98, 19, 19, 19, 98, 31, 71, 68, 46, 46, 46, 68, 68, 71, 94, 94, 94, 71, 31, 57, 12, 85, 81, 99, 99, 99, 81, 81, 85, 3, 3, 3, 85, 12, 32, 94, 94, 94, 32, 32, 12, 57, 37].
is_balanced110.
get_string110(S):- S = "(37, (33, (41, (59, (2, (58, (41, (), ()), ()), (67, (), ())), (28, (55, (), ()), ())), (18, (99, (23, (), ()), ()), (71, (), ()))), (83, (74, (31, (21, (), ()), ()), (95, (), ())), (65, (65, (), ()), ()))), (57, (31, (98, (87, (76, (), ()), ()), (19, (), ())), (71, (68, (46, (), ()), ()), (94, (), ()))), (12, (85, (81, (99, (), ()), ()), (3, (), ())), (32, (94, (), ()), ()))))".
build_tree111(BT):- BT = node(24, node(94, node(33, node(40, node(28, node(69, node(93, empty, empty), empty), node(67, empty, empty)), node(54, node(97, empty, empty), empty)), node(56, node(32, node(44, empty, empty), empty), node(48, empty, empty))), node(99, node(60, node(57, node(56, empty, empty), empty), node(73, empty, empty)), node(16, node(97, empty, empty), empty))), node(37, node(70, node(83, node(16, node(68, empty, empty), node(21, empty, empty)), node(37, node(26, empty, empty), empty)), node(4, node(51, node(73, empty, empty), empty), node(45, empty, empty))), node(27, node(86, node(68, node(60, empty, empty), empty), node(82, empty, empty)), node(8, node(94, empty, empty), empty)))).
get_size111(N):- N = 40.
get_height111(N):- N = 7.
get_inorder111(L):- L = [93, 69, 28, 67, 40, 97, 54, 33, 44, 32, 56, 48, 94, 56, 57, 60, 73, 99, 97, 16, 24, 68, 16, 21, 83, 26, 37, 70, 73, 51, 4, 45, 37, 60, 68, 86, 82, 27, 94, 8].
get_postorder111(L):- L = [93, 69, 67, 28, 97, 54, 40, 44, 32, 48, 56, 33, 56, 57, 73, 60, 97, 16, 99, 94, 68, 21, 16, 26, 37, 83, 73, 51, 45, 4, 70, 60, 68, 82, 86, 94, 8, 27, 37, 24].
get_preorder111(L):- L = [24, 94, 33, 40, 28, 69, 93, 67, 54, 97, 56, 32, 44, 48, 99, 60, 57, 56, 73, 16, 97, 37, 70, 83, 16, 68, 21, 37, 26, 4, 51, 73, 45, 27, 86, 68, 60, 82, 8, 94].
get_tour111(L):- L = [24, 94, 33, 40, 28, 69, 93, 93, 93, 69, 69, 28, 67, 67, 67, 28, 40, 54, 97, 97, 97, 54, 54, 40, 33, 56, 32, 44, 44, 44, 32, 32, 56, 48, 48, 48, 56, 33, 94, 99, 60, 57, 56, 56, 56, 57, 57, 60, 73, 73, 73, 60, 99, 16, 97, 97, 97, 16, 16, 99, 94, 24, 37, 70, 83, 16, 68, 68, 68, 16, 21, 21, 21, 16, 83, 37, 26, 26, 26, 37, 37, 83, 70, 4, 51, 73, 73, 73, 51, 51, 4, 45, 45, 45, 4, 70, 37, 27, 86, 68, 60, 60, 60, 68, 68, 86, 82, 82, 82, 86, 27, 8, 94, 94, 94, 8, 8, 27, 37, 24].
is_balanced111.
get_string111(S):- S = "(24, (94, (33, (40, (28, (69, (93, (), ()), ()), (67, (), ())), (54, (97, (), ()), ())), (56, (32, (44, (), ()), ()), (48, (), ()))), (99, (60, (57, (56, (), ()), ()), (73, (), ())), (16, (97, (), ()), ()))), (37, (70, (83, (16, (68, (), ()), (21, (), ())), (37, (26, (), ()), ())), (4, (51, (73, (), ()), ()), (45, (), ()))), (27, (86, (68, (60, (), ()), ()), (82, (), ())), (8, (94, (), ()), ()))))".
build_tree112(BT):- BT = node(9, node(58, node(28, node(8, node(25, node(91, node(75, empty, empty), empty), node(21, empty, empty)), node(63, node(49, empty, empty), empty)), node(63, node(90, node(22, empty, empty), empty), node(58, empty, empty))), node(7, node(28, node(41, node(96, empty, empty), empty), node(87, empty, empty)), node(11, node(52, empty, empty), empty))), node(34, node(64, node(58, node(10, node(79, empty, empty), empty), node(55, empty, empty)), node(77, node(1, empty, empty), empty)), node(27, node(80, node(68, empty, empty), node(36, empty, empty)), node(82, node(29, empty, empty), empty)))).
get_size112(N):- N = 35.
get_height112(N):- N = 7.
get_inorder112(L):- L = [75, 91, 25, 21, 8, 49, 63, 28, 22, 90, 63, 58, 58, 96, 41, 28, 87, 7, 52, 11, 9, 79, 10, 58, 55, 64, 1, 77, 34, 68, 80, 36, 27, 29, 82].
get_postorder112(L):- L = [75, 91, 21, 25, 49, 63, 8, 22, 90, 58, 63, 28, 96, 41, 87, 28, 52, 11, 7, 58, 79, 10, 55, 58, 1, 77, 64, 68, 36, 80, 29, 82, 27, 34, 9].
get_preorder112(L):- L = [9, 58, 28, 8, 25, 91, 75, 21, 63, 49, 63, 90, 22, 58, 7, 28, 41, 96, 87, 11, 52, 34, 64, 58, 10, 79, 55, 77, 1, 27, 80, 68, 36, 82, 29].
get_tour112(L):- L = [9, 58, 28, 8, 25, 91, 75, 75, 75, 91, 91, 25, 21, 21, 21, 25, 8, 63, 49, 49, 49, 63, 63, 8, 28, 63, 90, 22, 22, 22, 90, 90, 63, 58, 58, 58, 63, 28, 58, 7, 28, 41, 96, 96, 96, 41, 41, 28, 87, 87, 87, 28, 7, 11, 52, 52, 52, 11, 11, 7, 58, 9, 34, 64, 58, 10, 79, 79, 79, 10, 10, 58, 55, 55, 55, 58, 64, 77, 1, 1, 1, 77, 77, 64, 34, 27, 80, 68, 68, 68, 80, 36, 36, 36, 80, 27, 82, 29, 29, 29, 82, 82, 27, 34, 9].
is_balanced112.
get_string112(S):- S = "(9, (58, (28, (8, (25, (91, (75, (), ()), ()), (21, (), ())), (63, (49, (), ()), ())), (63, (90, (22, (), ()), ()), (58, (), ()))), (7, (28, (41, (96, (), ()), ()), (87, (), ())), (11, (52, (), ()), ()))), (34, (64, (58, (10, (79, (), ()), ()), (55, (), ())), (77, (1, (), ()), ())), (27, (80, (68, (), ()), (36, (), ())), (82, (29, (), ()), ()))))".
build_tree113(BT):- BT = node(6, node(96, node(75, node(93, node(5, node(71, empty, empty), empty), node(65, empty, empty)), node(91, node(56, empty, empty), empty)), node(51, node(86, node(13, empty, empty), node(51, empty, empty)), node(47, node(65, empty, empty), empty))), node(55, node(91, node(45, node(43, node(57, empty, empty), empty), node(74, empty, empty)), node(98, node(27, empty, empty), empty)), node(47, node(30, node(99, empty, empty), empty), node(94, empty, empty)))).
get_size113(N):- N = 27.
get_height113(N):- N = 6.
get_inorder113(L):- L = [71, 5, 93, 65, 75, 56, 91, 96, 13, 86, 51, 51, 65, 47, 6, 57, 43, 45, 74, 91, 27, 98, 55, 99, 30, 47, 94].
get_postorder113(L):- L = [71, 5, 65, 93, 56, 91, 75, 13, 51, 86, 65, 47, 51, 96, 57, 43, 74, 45, 27, 98, 91, 99, 30, 94, 47, 55, 6].
get_preorder113(L):- L = [6, 96, 75, 93, 5, 71, 65, 91, 56, 51, 86, 13, 51, 47, 65, 55, 91, 45, 43, 57, 74, 98, 27, 47, 30, 99, 94].
get_tour113(L):- L = [6, 96, 75, 93, 5, 71, 71, 71, 5, 5, 93, 65, 65, 65, 93, 75, 91, 56, 56, 56, 91, 91, 75, 96, 51, 86, 13, 13, 13, 86, 51, 51, 51, 86, 51, 47, 65, 65, 65, 47, 47, 51, 96, 6, 55, 91, 45, 43, 57, 57, 57, 43, 43, 45, 74, 74, 74, 45, 91, 98, 27, 27, 27, 98, 98, 91, 55, 47, 30, 99, 99, 99, 30, 30, 47, 94, 94, 94, 47, 55, 6].
is_balanced113.
get_string113(S):- S = "(6, (96, (75, (93, (5, (71, (), ()), ()), (65, (), ())), (91, (56, (), ()), ())), (51, (86, (13, (), ()), (51, (), ())), (47, (65, (), ()), ()))), (55, (91, (45, (43, (57, (), ()), ()), (74, (), ())), (98, (27, (), ()), ())), (47, (30, (99, (), ()), ()), (94, (), ()))))".
build_tree114(BT):- BT = node(43, node(24, node(95, node(19, node(96, node(27, empty, empty), empty), node(53, node(63, empty, empty), empty)), node(96, node(77, node(24, empty, empty), empty), node(95, empty, empty))), node(63, node(83, node(47, node(69, empty, empty), empty), node(92, empty, empty)), node(1, node(3, empty, empty), empty))), node(5, node(56, node(72, node(20, node(12, empty, empty), empty), node(16, empty, empty)), node(87, node(11, empty, empty), empty)), node(60, node(60, node(34, empty, empty), empty), node(96, empty, empty)))).
get_size114(N):- N = 31.
get_height114(N):- N = 6.
get_inorder114(L):- L = [27, 96, 19, 63, 53, 95, 24, 77, 96, 95, 24, 69, 47, 83, 92, 63, 3, 1, 43, 12, 20, 72, 16, 56, 11, 87, 5, 34, 60, 60, 96].
get_postorder114(L):- L = [27, 96, 63, 53, 19, 24, 77, 95, 96, 95, 69, 47, 92, 83, 3, 1, 63, 24, 12, 20, 16, 72, 11, 87, 56, 34, 60, 96, 60, 5, 43].
get_preorder114(L):- L = [43, 24, 95, 19, 96, 27, 53, 63, 96, 77, 24, 95, 63, 83, 47, 69, 92, 1, 3, 5, 56, 72, 20, 12, 16, 87, 11, 60, 60, 34, 96].
get_tour114(L):- L = [43, 24, 95, 19, 96, 27, 27, 27, 96, 96, 19, 53, 63, 63, 63, 53, 53, 19, 95, 96, 77, 24, 24, 24, 77, 77, 96, 95, 95, 95, 96, 95, 24, 63, 83, 47, 69, 69, 69, 47, 47, 83, 92, 92, 92, 83, 63, 1, 3, 3, 3, 1, 1, 63, 24, 43, 5, 56, 72, 20, 12, 12, 12, 20, 20, 72, 16, 16, 16, 72, 56, 87, 11, 11, 11, 87, 87, 56, 5, 60, 60, 34, 34, 34, 60, 60, 60, 96, 96, 96, 60, 5, 43].
is_balanced114.
get_string114(S):- S = "(43, (24, (95, (19, (96, (27, (), ()), ()), (53, (63, (), ()), ())), (96, (77, (24, (), ()), ()), (95, (), ()))), (63, (83, (47, (69, (), ()), ()), (92, (), ())), (1, (3, (), ()), ()))), (5, (56, (72, (20, (12, (), ()), ()), (16, (), ())), (87, (11, (), ()), ())), (60, (60, (34, (), ()), ()), (96, (), ()))))".
build_tree115(BT):- BT = node(51, node(8, node(78, node(16, node(32, node(37, empty, empty), empty), node(46, empty, empty)), node(18, node(79, empty, empty), empty)), node(43, node(56, node(4, empty, empty), empty), node(89, empty, empty))), node(19, node(80, node(84, node(36, empty, empty), empty), node(51, node(83, empty, empty), empty)), node(57, node(11, node(77, empty, empty), empty), node(11, empty, empty)))).
get_size115(N):- N = 23.
get_height115(N):- N = 6.
get_inorder115(L):- L = [37, 32, 16, 46, 78, 79, 18, 8, 4, 56, 43, 89, 51, 36, 84, 80, 83, 51, 19, 77, 11, 57, 11].
get_postorder115(L):- L = [37, 32, 46, 16, 79, 18, 78, 4, 56, 89, 43, 8, 36, 84, 83, 51, 80, 77, 11, 11, 57, 19, 51].
get_preorder115(L):- L = [51, 8, 78, 16, 32, 37, 46, 18, 79, 43, 56, 4, 89, 19, 80, 84, 36, 51, 83, 57, 11, 77, 11].
get_tour115(L):- L = [51, 8, 78, 16, 32, 37, 37, 37, 32, 32, 16, 46, 46, 46, 16, 78, 18, 79, 79, 79, 18, 18, 78, 8, 43, 56, 4, 4, 4, 56, 56, 43, 89, 89, 89, 43, 8, 51, 19, 80, 84, 36, 36, 36, 84, 84, 80, 51, 83, 83, 83, 51, 51, 80, 19, 57, 11, 77, 77, 77, 11, 11, 57, 11, 11, 11, 57, 19, 51].
is_balanced115.
get_string115(S):- S = "(51, (8, (78, (16, (32, (37, (), ()), ()), (46, (), ())), (18, (79, (), ()), ())), (43, (56, (4, (), ()), ()), (89, (), ()))), (19, (80, (84, (36, (), ()), ()), (51, (83, (), ()), ())), (57, (11, (77, (), ()), ()), (11, (), ()))))".
build_tree116(BT):- BT = node(92, node(33, node(92, node(30, node(2, node(53, empty, empty), empty), node(16, empty, empty)), node(92, node(23, empty, empty), empty)), node(90, node(40, node(36, empty, empty), empty), node(45, node(2, empty, empty), empty))), node(46, node(32, node(39, node(80, node(82, empty, empty), empty), node(92, empty, empty)), node(15, node(9, empty, empty), empty)), node(53, node(58, node(39, empty, empty), empty), node(73, empty, empty)))).
get_size116(N):- N = 26.
get_height116(N):- N = 6.
get_inorder116(L):- L = [53, 2, 30, 16, 92, 23, 92, 33, 36, 40, 90, 2, 45, 92, 82, 80, 39, 92, 32, 9, 15, 46, 39, 58, 53, 73].
get_postorder116(L):- L = [53, 2, 16, 30, 23, 92, 92, 36, 40, 2, 45, 90, 33, 82, 80, 92, 39, 9, 15, 32, 39, 58, 73, 53, 46, 92].
get_preorder116(L):- L = [92, 33, 92, 30, 2, 53, 16, 92, 23, 90, 40, 36, 45, 2, 46, 32, 39, 80, 82, 92, 15, 9, 53, 58, 39, 73].
get_tour116(L):- L = [92, 33, 92, 30, 2, 53, 53, 53, 2, 2, 30, 16, 16, 16, 30, 92, 92, 23, 23, 23, 92, 92, 92, 33, 90, 40, 36, 36, 36, 40, 40, 90, 45, 2, 2, 2, 45, 45, 90, 33, 92, 46, 32, 39, 80, 82, 82, 82, 80, 80, 39, 92, 92, 92, 39, 32, 15, 9, 9, 9, 15, 15, 32, 46, 53, 58, 39, 39, 39, 58, 58, 53, 73, 73, 73, 53, 46, 92].
is_balanced116.
get_string116(S):- S = "(92, (33, (92, (30, (2, (53, (), ()), ()), (16, (), ())), (92, (23, (), ()), ())), (90, (40, (36, (), ()), ()), (45, (2, (), ()), ()))), (46, (32, (39, (80, (82, (), ()), ()), (92, (), ())), (15, (9, (), ()), ())), (53, (58, (39, (), ()), ()), (73, (), ()))))".
build_tree117(BT):- BT = node(51, node(45, node(1, node(97, node(58, node(78, empty, empty), node(71, empty, empty)), node(82, node(70, empty, empty), empty)), node(66, node(65, node(54, empty, empty), empty), node(55, empty, empty))), node(31, node(18, node(73, node(10, empty, empty), empty), node(20, empty, empty)), node(47, node(1, empty, empty), empty))), node(61, node(90, node(72, node(61, node(26, empty, empty), empty), node(87, empty, empty)), node(69, node(29, empty, empty), empty)), node(44, node(85, node(46, empty, empty), empty), node(42, empty, empty)))).
get_size117(N):- N = 32.
get_height117(N):- N = 6.
get_inorder117(L):- L = [78, 58, 71, 97, 70, 82, 1, 54, 65, 66, 55, 45, 10, 73, 18, 20, 31, 1, 47, 51, 26, 61, 72, 87, 90, 29, 69, 61, 46, 85, 44, 42].
get_postorder117(L):- L = [78, 71, 58, 70, 82, 97, 54, 65, 55, 66, 1, 10, 73, 20, 18, 1, 47, 31, 45, 26, 61, 87, 72, 29, 69, 90, 46, 85, 42, 44, 61, 51].
get_preorder117(L):- L = [51, 45, 1, 97, 58, 78, 71, 82, 70, 66, 65, 54, 55, 31, 18, 73, 10, 20, 47, 1, 61, 90, 72, 61, 26, 87, 69, 29, 44, 85, 46, 42].
get_tour117(L):- L = [51, 45, 1, 97, 58, 78, 78, 78, 58, 71, 71, 71, 58, 97, 82, 70, 70, 70, 82, 82, 97, 1, 66, 65, 54, 54, 54, 65, 65, 66, 55, 55, 55, 66, 1, 45, 31, 18, 73, 10, 10, 10, 73, 73, 18, 20, 20, 20, 18, 31, 47, 1, 1, 1, 47, 47, 31, 45, 51, 61, 90, 72, 61, 26, 26, 26, 61, 61, 72, 87, 87, 87, 72, 90, 69, 29, 29, 29, 69, 69, 90, 61, 44, 85, 46, 46, 46, 85, 85, 44, 42, 42, 42, 44, 61, 51].
is_balanced117.
get_string117(S):- S = "(51, (45, (1, (97, (58, (78, (), ()), (71, (), ())), (82, (70, (), ()), ())), (66, (65, (54, (), ()), ()), (55, (), ()))), (31, (18, (73, (10, (), ()), ()), (20, (), ())), (47, (1, (), ()), ()))), (61, (90, (72, (61, (26, (), ()), ()), (87, (), ())), (69, (29, (), ()), ())), (44, (85, (46, (), ()), ()), (42, (), ()))))".
build_tree118(BT):- BT = node(39, node(73, node(99, node(41, node(45, node(35, empty, empty), node(48, empty, empty)), node(94, node(19, empty, empty), empty)), node(29, node(41, node(50, empty, empty), empty), node(62, empty, empty))), node(75, node(94, node(18, node(7, empty, empty), empty), node(15, empty, empty)), node(74, node(65, empty, empty), empty))), node(57, node(54, node(90, node(9, node(82, empty, empty), empty), node(53, empty, empty)), node(14, node(10, empty, empty), empty)), node(80, node(83, node(30, empty, empty), empty), node(15, empty, empty)))).
get_size118(N):- N = 32.
get_height118(N):- N = 6.
get_inorder118(L):- L = [35, 45, 48, 41, 19, 94, 99, 50, 41, 29, 62, 73, 7, 18, 94, 15, 75, 65, 74, 39, 82, 9, 90, 53, 54, 10, 14, 57, 30, 83, 80, 15].
get_postorder118(L):- L = [35, 48, 45, 19, 94, 41, 50, 41, 62, 29, 99, 7, 18, 15, 94, 65, 74, 75, 73, 82, 9, 53, 90, 10, 14, 54, 30, 83, 15, 80, 57, 39].
get_preorder118(L):- L = [39, 73, 99, 41, 45, 35, 48, 94, 19, 29, 41, 50, 62, 75, 94, 18, 7, 15, 74, 65, 57, 54, 90, 9, 82, 53, 14, 10, 80, 83, 30, 15].
get_tour118(L):- L = [39, 73, 99, 41, 45, 35, 35, 35, 45, 48, 48, 48, 45, 41, 94, 19, 19, 19, 94, 94, 41, 99, 29, 41, 50, 50, 50, 41, 41, 29, 62, 62, 62, 29, 99, 73, 75, 94, 18, 7, 7, 7, 18, 18, 94, 15, 15, 15, 94, 75, 74, 65, 65, 65, 74, 74, 75, 73, 39, 57, 54, 90, 9, 82, 82, 82, 9, 9, 90, 53, 53, 53, 90, 54, 14, 10, 10, 10, 14, 14, 54, 57, 80, 83, 30, 30, 30, 83, 83, 80, 15, 15, 15, 80, 57, 39].
is_balanced118.
get_string118(S):- S = "(39, (73, (99, (41, (45, (35, (), ()), (48, (), ())), (94, (19, (), ()), ())), (29, (41, (50, (), ()), ()), (62, (), ()))), (75, (94, (18, (7, (), ()), ()), (15, (), ())), (74, (65, (), ()), ()))), (57, (54, (90, (9, (82, (), ()), ()), (53, (), ())), (14, (10, (), ()), ())), (80, (83, (30, (), ()), ()), (15, (), ()))))".
build_tree119(BT):- BT = node(47, node(23, node(32, node(59, node(7, node(8, empty, empty), empty), node(5, empty, empty)), node(98, node(51, empty, empty), node(33, empty, empty))), node(84, node(61, node(77, node(92, empty, empty), empty), node(69, empty, empty)), node(75, node(84, empty, empty), empty))), node(83, node(24, node(38, node(13, node(30, empty, empty), empty), node(87, empty, empty)), node(51, node(5, empty, empty), empty)), node(48, node(56, node(28, empty, empty), empty), node(18, empty, empty)))).
get_size119(N):- N = 29.
get_height119(N):- N = 6.
get_inorder119(L):- L = [8, 7, 59, 5, 32, 51, 98, 33, 23, 92, 77, 61, 69, 84, 84, 75, 47, 30, 13, 38, 87, 24, 5, 51, 83, 28, 56, 48, 18].
get_postorder119(L):- L = [8, 7, 5, 59, 51, 33, 98, 32, 92, 77, 69, 61, 84, 75, 84, 23, 30, 13, 87, 38, 5, 51, 24, 28, 56, 18, 48, 83, 47].
get_preorder119(L):- L = [47, 23, 32, 59, 7, 8, 5, 98, 51, 33, 84, 61, 77, 92, 69, 75, 84, 83, 24, 38, 13, 30, 87, 51, 5, 48, 56, 28, 18].
get_tour119(L):- L = [47, 23, 32, 59, 7, 8, 8, 8, 7, 7, 59, 5, 5, 5, 59, 32, 98, 51, 51, 51, 98, 33, 33, 33, 98, 32, 23, 84, 61, 77, 92, 92, 92, 77, 77, 61, 69, 69, 69, 61, 84, 75, 84, 84, 84, 75, 75, 84, 23, 47, 83, 24, 38, 13, 30, 30, 30, 13, 13, 38, 87, 87, 87, 38, 24, 51, 5, 5, 5, 51, 51, 24, 83, 48, 56, 28, 28, 28, 56, 56, 48, 18, 18, 18, 48, 83, 47].
is_balanced119.
get_string119(S):- S = "(47, (23, (32, (59, (7, (8, (), ()), ()), (5, (), ())), (98, (51, (), ()), (33, (), ()))), (84, (61, (77, (92, (), ()), ()), (69, (), ())), (75, (84, (), ()), ()))), (83, (24, (38, (13, (30, (), ()), ()), (87, (), ())), (51, (5, (), ()), ())), (48, (56, (28, (), ()), ()), (18, (), ()))))".
build_tree120(BT):- BT = node(50, node(21, node(3, node(92, node(83, node(35, empty, empty), empty), node(90, node(65, empty, empty), empty)), node(4, node(38, node(23, empty, empty), empty), node(31, empty, empty))), node(71, node(2, node(90, node(68, empty, empty), empty), node(38, empty, empty)), node(88, node(71, empty, empty), empty))), node(44, node(46, node(73, node(34, node(71, empty, empty), empty), node(68, empty, empty)), node(16, node(30, empty, empty), empty)), node(69, node(62, node(26, empty, empty), empty), node(47, empty, empty)))).
get_size120(N):- N = 31.
get_height120(N):- N = 6.
get_inorder120(L):- L = [35, 83, 92, 65, 90, 3, 23, 38, 4, 31, 21, 68, 90, 2, 38, 71, 71, 88, 50, 71, 34, 73, 68, 46, 30, 16, 44, 26, 62, 69, 47].
get_postorder120(L):- L = [35, 83, 65, 90, 92, 23, 38, 31, 4, 3, 68, 90, 38, 2, 71, 88, 71, 21, 71, 34, 68, 73, 30, 16, 46, 26, 62, 47, 69, 44, 50].
get_preorder120(L):- L = [50, 21, 3, 92, 83, 35, 90, 65, 4, 38, 23, 31, 71, 2, 90, 68, 38, 88, 71, 44, 46, 73, 34, 71, 68, 16, 30, 69, 62, 26, 47].
get_tour120(L):- L = [50, 21, 3, 92, 83, 35, 35, 35, 83, 83, 92, 90, 65, 65, 65, 90, 90, 92, 3, 4, 38, 23, 23, 23, 38, 38, 4, 31, 31, 31, 4, 3, 21, 71, 2, 90, 68, 68, 68, 90, 90, 2, 38, 38, 38, 2, 71, 88, 71, 71, 71, 88, 88, 71, 21, 50, 44, 46, 73, 34, 71, 71, 71, 34, 34, 73, 68, 68, 68, 73, 46, 16, 30, 30, 30, 16, 16, 46, 44, 69, 62, 26, 26, 26, 62, 62, 69, 47, 47, 47, 69, 44, 50].
is_balanced120.
get_string120(S):- S = "(50, (21, (3, (92, (83, (35, (), ()), ()), (90, (65, (), ()), ())), (4, (38, (23, (), ()), ()), (31, (), ()))), (71, (2, (90, (68, (), ()), ()), (38, (), ())), (88, (71, (), ()), ()))), (44, (46, (73, (34, (71, (), ()), ()), (68, (), ())), (16, (30, (), ()), ())), (69, (62, (26, (), ()), ()), (47, (), ()))))".
build_tree121(BT):- BT = node(16, node(59, node(33, node(73, node(41, node(45, node(30, empty, empty), empty), node(57, empty, empty)), node(45, node(99, empty, empty), empty)), node(34, node(54, node(78, empty, empty), empty), node(31, empty, empty))), node(91, node(51, node(61, node(59, empty, empty), empty), node(88, empty, empty)), node(83, node(17, empty, empty), empty))), node(91, node(49, node(34, node(17, node(3, empty, empty), empty), node(5, empty, empty)), node(64, node(94, node(5, empty, empty), empty), node(2, empty, empty))), node(56, node(4, node(37, node(9, empty, empty), empty), node(73, empty, empty)), node(61, node(44, empty, empty), empty)))).
get_size121(N):- N = 38.
get_height121(N):- N = 7.
get_inorder121(L):- L = [30, 45, 41, 57, 73, 99, 45, 33, 78, 54, 34, 31, 59, 59, 61, 51, 88, 91, 17, 83, 16, 3, 17, 34, 5, 49, 5, 94, 64, 2, 91, 9, 37, 4, 73, 56, 44, 61].
get_postorder121(L):- L = [30, 45, 57, 41, 99, 45, 73, 78, 54, 31, 34, 33, 59, 61, 88, 51, 17, 83, 91, 59, 3, 17, 5, 34, 5, 94, 2, 64, 49, 9, 37, 73, 4, 44, 61, 56, 91, 16].
get_preorder121(L):- L = [16, 59, 33, 73, 41, 45, 30, 57, 45, 99, 34, 54, 78, 31, 91, 51, 61, 59, 88, 83, 17, 91, 49, 34, 17, 3, 5, 64, 94, 5, 2, 56, 4, 37, 9, 73, 61, 44].
get_tour121(L):- L = [16, 59, 33, 73, 41, 45, 30, 30, 30, 45, 45, 41, 57, 57, 57, 41, 73, 45, 99, 99, 99, 45, 45, 73, 33, 34, 54, 78, 78, 78, 54, 54, 34, 31, 31, 31, 34, 33, 59, 91, 51, 61, 59, 59, 59, 61, 61, 51, 88, 88, 88, 51, 91, 83, 17, 17, 17, 83, 83, 91, 59, 16, 91, 49, 34, 17, 3, 3, 3, 17, 17, 34, 5, 5, 5, 34, 49, 64, 94, 5, 5, 5, 94, 94, 64, 2, 2, 2, 64, 49, 91, 56, 4, 37, 9, 9, 9, 37, 37, 4, 73, 73, 73, 4, 56, 61, 44, 44, 44, 61, 61, 56, 91, 16].
is_balanced121.
get_string121(S):- S = "(16, (59, (33, (73, (41, (45, (30, (), ()), ()), (57, (), ())), (45, (99, (), ()), ())), (34, (54, (78, (), ()), ()), (31, (), ()))), (91, (51, (61, (59, (), ()), ()), (88, (), ())), (83, (17, (), ()), ()))), (91, (49, (34, (17, (3, (), ()), ()), (5, (), ())), (64, (94, (5, (), ()), ()), (2, (), ()))), (56, (4, (37, (9, (), ()), ()), (73, (), ())), (61, (44, (), ()), ()))))".
build_tree122(BT):- BT = node(40, node(86, node(14, node(26, node(52, node(40, empty, empty), empty), node(7, empty, empty)), node(74, node(45, empty, empty), empty)), node(35, node(81, node(66, empty, empty), empty), node(19, empty, empty))), node(65, node(8, node(92, node(11, empty, empty), empty), node(55, empty, empty)), node(48, node(67, empty, empty), node(58, empty, empty)))).
get_size122(N):- N = 21.
get_height122(N):- N = 6.
get_inorder122(L):- L = [40, 52, 26, 7, 14, 45, 74, 86, 66, 81, 35, 19, 40, 11, 92, 8, 55, 65, 67, 48, 58].
get_postorder122(L):- L = [40, 52, 7, 26, 45, 74, 14, 66, 81, 19, 35, 86, 11, 92, 55, 8, 67, 58, 48, 65, 40].
get_preorder122(L):- L = [40, 86, 14, 26, 52, 40, 7, 74, 45, 35, 81, 66, 19, 65, 8, 92, 11, 55, 48, 67, 58].
get_tour122(L):- L = [40, 86, 14, 26, 52, 40, 40, 40, 52, 52, 26, 7, 7, 7, 26, 14, 74, 45, 45, 45, 74, 74, 14, 86, 35, 81, 66, 66, 66, 81, 81, 35, 19, 19, 19, 35, 86, 40, 65, 8, 92, 11, 11, 11, 92, 92, 8, 55, 55, 55, 8, 65, 48, 67, 67, 67, 48, 58, 58, 58, 48, 65, 40].
is_balanced122.
get_string122(S):- S = "(40, (86, (14, (26, (52, (40, (), ()), ()), (7, (), ())), (74, (45, (), ()), ())), (35, (81, (66, (), ()), ()), (19, (), ()))), (65, (8, (92, (11, (), ()), ()), (55, (), ())), (48, (67, (), ()), (58, (), ()))))".
build_tree123(BT):- BT = node(36, node(34, node(60, node(94, node(17, node(66, empty, empty), empty), node(31, empty, empty)), node(62, node(55, empty, empty), empty)), node(40, node(43, node(24, node(50, empty, empty), empty), node(90, empty, empty)), node(14, node(36, empty, empty), empty))), node(47, node(16, node(97, node(96, node(61, empty, empty), empty), node(55, empty, empty)), node(71, node(94, empty, empty), empty)), node(31, node(49, node(80, empty, empty), empty), node(41, empty, empty)))).
get_size123(N):- N = 28.
get_height123(N):- N = 6.
get_inorder123(L):- L = [66, 17, 94, 31, 60, 55, 62, 34, 50, 24, 43, 90, 40, 36, 14, 36, 61, 96, 97, 55, 16, 94, 71, 47, 80, 49, 31, 41].
get_postorder123(L):- L = [66, 17, 31, 94, 55, 62, 60, 50, 24, 90, 43, 36, 14, 40, 34, 61, 96, 55, 97, 94, 71, 16, 80, 49, 41, 31, 47, 36].
get_preorder123(L):- L = [36, 34, 60, 94, 17, 66, 31, 62, 55, 40, 43, 24, 50, 90, 14, 36, 47, 16, 97, 96, 61, 55, 71, 94, 31, 49, 80, 41].
get_tour123(L):- L = [36, 34, 60, 94, 17, 66, 66, 66, 17, 17, 94, 31, 31, 31, 94, 60, 62, 55, 55, 55, 62, 62, 60, 34, 40, 43, 24, 50, 50, 50, 24, 24, 43, 90, 90, 90, 43, 40, 14, 36, 36, 36, 14, 14, 40, 34, 36, 47, 16, 97, 96, 61, 61, 61, 96, 96, 97, 55, 55, 55, 97, 16, 71, 94, 94, 94, 71, 71, 16, 47, 31, 49, 80, 80, 80, 49, 49, 31, 41, 41, 41, 31, 47, 36].
is_balanced123.
get_string123(S):- S = "(36, (34, (60, (94, (17, (66, (), ()), ()), (31, (), ())), (62, (55, (), ()), ())), (40, (43, (24, (50, (), ()), ()), (90, (), ())), (14, (36, (), ()), ()))), (47, (16, (97, (96, (61, (), ()), ()), (55, (), ())), (71, (94, (), ()), ())), (31, (49, (80, (), ()), ()), (41, (), ()))))".
build_tree124(BT):- BT = node(39, node(17, node(43, node(65, node(10, node(83, empty, empty), empty), node(32, empty, empty)), node(20, node(28, empty, empty), empty)), node(44, node(55, node(60, empty, empty), empty), node(69, empty, empty))), node(39, node(75, node(37, node(82, empty, empty), empty), node(90, empty, empty)), node(98, node(42, empty, empty), node(73, empty, empty)))).
get_size124(N):- N = 21.
get_height124(N):- N = 6.
get_inorder124(L):- L = [83, 10, 65, 32, 43, 28, 20, 17, 60, 55, 44, 69, 39, 82, 37, 75, 90, 39, 42, 98, 73].
get_postorder124(L):- L = [83, 10, 32, 65, 28, 20, 43, 60, 55, 69, 44, 17, 82, 37, 90, 75, 42, 73, 98, 39, 39].
get_preorder124(L):- L = [39, 17, 43, 65, 10, 83, 32, 20, 28, 44, 55, 60, 69, 39, 75, 37, 82, 90, 98, 42, 73].
get_tour124(L):- L = [39, 17, 43, 65, 10, 83, 83, 83, 10, 10, 65, 32, 32, 32, 65, 43, 20, 28, 28, 28, 20, 20, 43, 17, 44, 55, 60, 60, 60, 55, 55, 44, 69, 69, 69, 44, 17, 39, 39, 75, 37, 82, 82, 82, 37, 37, 75, 90, 90, 90, 75, 39, 98, 42, 42, 42, 98, 73, 73, 73, 98, 39, 39].
is_balanced124.
get_string124(S):- S = "(39, (17, (43, (65, (10, (83, (), ()), ()), (32, (), ())), (20, (28, (), ()), ())), (44, (55, (60, (), ()), ()), (69, (), ()))), (39, (75, (37, (82, (), ()), ()), (90, (), ())), (98, (42, (), ()), (73, (), ()))))".
build_tree125(BT):- BT = node(55, node(14, node(57, node(50, node(80, node(96, empty, empty), empty), node(39, empty, empty)), node(81, node(39, empty, empty), empty)), node(83, node(88, node(18, empty, empty), empty), node(38, node(67, empty, empty), empty))), node(72, node(99, node(42, node(89, node(50, empty, empty), empty), node(41, empty, empty)), node(41, node(97, empty, empty), empty)), node(50, node(42, node(89, empty, empty), empty), node(56, empty, empty)))).
get_size125(N):- N = 26.
get_height125(N):- N = 6.
get_inorder125(L):- L = [96, 80, 50, 39, 57, 39, 81, 14, 18, 88, 83, 67, 38, 55, 50, 89, 42, 41, 99, 97, 41, 72, 89, 42, 50, 56].
get_postorder125(L):- L = [96, 80, 39, 50, 39, 81, 57, 18, 88, 67, 38, 83, 14, 50, 89, 41, 42, 97, 41, 99, 89, 42, 56, 50, 72, 55].
get_preorder125(L):- L = [55, 14, 57, 50, 80, 96, 39, 81, 39, 83, 88, 18, 38, 67, 72, 99, 42, 89, 50, 41, 41, 97, 50, 42, 89, 56].
get_tour125(L):- L = [55, 14, 57, 50, 80, 96, 96, 96, 80, 80, 50, 39, 39, 39, 50, 57, 81, 39, 39, 39, 81, 81, 57, 14, 83, 88, 18, 18, 18, 88, 88, 83, 38, 67, 67, 67, 38, 38, 83, 14, 55, 72, 99, 42, 89, 50, 50, 50, 89, 89, 42, 41, 41, 41, 42, 99, 41, 97, 97, 97, 41, 41, 99, 72, 50, 42, 89, 89, 89, 42, 42, 50, 56, 56, 56, 50, 72, 55].
is_balanced125.
get_string125(S):- S = "(55, (14, (57, (50, (80, (96, (), ()), ()), (39, (), ())), (81, (39, (), ()), ())), (83, (88, (18, (), ()), ()), (38, (67, (), ()), ()))), (72, (99, (42, (89, (50, (), ()), ()), (41, (), ())), (41, (97, (), ()), ())), (50, (42, (89, (), ()), ()), (56, (), ()))))".
build_tree126(BT):- BT = node(7, node(13, node(87, node(54, node(61, node(10, node(75, empty, empty), empty), node(21, empty, empty)), node(35, node(48, empty, empty), empty)), node(93, node(1, node(43, empty, empty), empty), node(69, empty, empty))), node(51, node(91, node(63, node(33, empty, empty), empty), node(54, empty, empty)), node(60, node(4, empty, empty), empty))), node(18, node(25, node(85, node(67, node(67, empty, empty), empty), node(17, empty, empty)), node(74, node(55, empty, empty), empty)), node(32, node(82, node(85, node(37, empty, empty), empty), node(89, empty, empty)), node(58, node(21, empty, empty), empty)))).
get_size126(N):- N = 36.
get_height126(N):- N = 7.
get_inorder126(L):- L = [75, 10, 61, 21, 54, 48, 35, 87, 43, 1, 93, 69, 13, 33, 63, 91, 54, 51, 4, 60, 7, 67, 67, 85, 17, 25, 55, 74, 18, 37, 85, 82, 89, 32, 21, 58].
get_postorder126(L):- L = [75, 10, 21, 61, 48, 35, 54, 43, 1, 69, 93, 87, 33, 63, 54, 91, 4, 60, 51, 13, 67, 67, 17, 85, 55, 74, 25, 37, 85, 89, 82, 21, 58, 32, 18, 7].
get_preorder126(L):- L = [7, 13, 87, 54, 61, 10, 75, 21, 35, 48, 93, 1, 43, 69, 51, 91, 63, 33, 54, 60, 4, 18, 25, 85, 67, 67, 17, 74, 55, 32, 82, 85, 37, 89, 58, 21].
get_tour126(L):- L = [7, 13, 87, 54, 61, 10, 75, 75, 75, 10, 10, 61, 21, 21, 21, 61, 54, 35, 48, 48, 48, 35, 35, 54, 87, 93, 1, 43, 43, 43, 1, 1, 93, 69, 69, 69, 93, 87, 13, 51, 91, 63, 33, 33, 33, 63, 63, 91, 54, 54, 54, 91, 51, 60, 4, 4, 4, 60, 60, 51, 13, 7, 18, 25, 85, 67, 67, 67, 67, 67, 67, 85, 17, 17, 17, 85, 25, 74, 55, 55, 55, 74, 74, 25, 18, 32, 82, 85, 37, 37, 37, 85, 85, 82, 89, 89, 89, 82, 32, 58, 21, 21, 21, 58, 58, 32, 18, 7].
is_balanced126.
get_string126(S):- S = "(7, (13, (87, (54, (61, (10, (75, (), ()), ()), (21, (), ())), (35, (48, (), ()), ())), (93, (1, (43, (), ()), ()), (69, (), ()))), (51, (91, (63, (33, (), ()), ()), (54, (), ())), (60, (4, (), ()), ()))), (18, (25, (85, (67, (67, (), ()), ()), (17, (), ())), (74, (55, (), ()), ())), (32, (82, (85, (37, (), ()), ()), (89, (), ())), (58, (21, (), ()), ()))))".
build_tree127(BT):- BT = node(21, node(43, node(99, node(74, node(26, node(16, empty, empty), empty), node(68, empty, empty)), node(5, node(95, empty, empty), empty)), node(70, node(98, node(60, empty, empty), node(51, empty, empty)), node(7, node(52, empty, empty), empty))), node(86, node(90, node(40, node(88, node(19, empty, empty), empty), node(40, empty, empty)), node(5, node(83, empty, empty), empty)), node(63, node(52, node(68, empty, empty), empty), node(7, empty, empty)))).
get_size127(N):- N = 27.
get_height127(N):- N = 6.
get_inorder127(L):- L = [16, 26, 74, 68, 99, 95, 5, 43, 60, 98, 51, 70, 52, 7, 21, 19, 88, 40, 40, 90, 83, 5, 86, 68, 52, 63, 7].
get_postorder127(L):- L = [16, 26, 68, 74, 95, 5, 99, 60, 51, 98, 52, 7, 70, 43, 19, 88, 40, 40, 83, 5, 90, 68, 52, 7, 63, 86, 21].
get_preorder127(L):- L = [21, 43, 99, 74, 26, 16, 68, 5, 95, 70, 98, 60, 51, 7, 52, 86, 90, 40, 88, 19, 40, 5, 83, 63, 52, 68, 7].
get_tour127(L):- L = [21, 43, 99, 74, 26, 16, 16, 16, 26, 26, 74, 68, 68, 68, 74, 99, 5, 95, 95, 95, 5, 5, 99, 43, 70, 98, 60, 60, 60, 98, 51, 51, 51, 98, 70, 7, 52, 52, 52, 7, 7, 70, 43, 21, 86, 90, 40, 88, 19, 19, 19, 88, 88, 40, 40, 40, 40, 40, 90, 5, 83, 83, 83, 5, 5, 90, 86, 63, 52, 68, 68, 68, 52, 52, 63, 7, 7, 7, 63, 86, 21].
is_balanced127.
get_string127(S):- S = "(21, (43, (99, (74, (26, (16, (), ()), ()), (68, (), ())), (5, (95, (), ()), ())), (70, (98, (60, (), ()), (51, (), ())), (7, (52, (), ()), ()))), (86, (90, (40, (88, (19, (), ()), ()), (40, (), ())), (5, (83, (), ()), ())), (63, (52, (68, (), ()), ()), (7, (), ()))))".
build_tree128(BT):- BT = node(31, node(73, node(51, node(96, node(48, node(1, empty, empty), empty), node(32, empty, empty)), node(67, node(17, node(84, empty, empty), empty), node(33, empty, empty))), node(98, node(24, node(6, node(25, empty, empty), empty), node(46, empty, empty)), node(29, node(95, empty, empty), empty))), node(65, node(92, node(60, node(67, node(1, empty, empty), empty), node(81, empty, empty)), node(19, node(98, empty, empty), empty)), node(85, node(87, node(22, empty, empty), empty), node(78, empty, empty)))).
get_size128(N):- N = 30.
get_height128(N):- N = 6.
get_inorder128(L):- L = [1, 48, 96, 32, 51, 84, 17, 67, 33, 73, 25, 6, 24, 46, 98, 95, 29, 31, 1, 67, 60, 81, 92, 98, 19, 65, 22, 87, 85, 78].
get_postorder128(L):- L = [1, 48, 32, 96, 84, 17, 33, 67, 51, 25, 6, 46, 24, 95, 29, 98, 73, 1, 67, 81, 60, 98, 19, 92, 22, 87, 78, 85, 65, 31].
get_preorder128(L):- L = [31, 73, 51, 96, 48, 1, 32, 67, 17, 84, 33, 98, 24, 6, 25, 46, 29, 95, 65, 92, 60, 67, 1, 81, 19, 98, 85, 87, 22, 78].
get_tour128(L):- L = [31, 73, 51, 96, 48, 1, 1, 1, 48, 48, 96, 32, 32, 32, 96, 51, 67, 17, 84, 84, 84, 17, 17, 67, 33, 33, 33, 67, 51, 73, 98, 24, 6, 25, 25, 25, 6, 6, 24, 46, 46, 46, 24, 98, 29, 95, 95, 95, 29, 29, 98, 73, 31, 65, 92, 60, 67, 1, 1, 1, 67, 67, 60, 81, 81, 81, 60, 92, 19, 98, 98, 98, 19, 19, 92, 65, 85, 87, 22, 22, 22, 87, 87, 85, 78, 78, 78, 85, 65, 31].
is_balanced128.
get_string128(S):- S = "(31, (73, (51, (96, (48, (1, (), ()), ()), (32, (), ())), (67, (17, (84, (), ()), ()), (33, (), ()))), (98, (24, (6, (25, (), ()), ()), (46, (), ())), (29, (95, (), ()), ()))), (65, (92, (60, (67, (1, (), ()), ()), (81, (), ())), (19, (98, (), ()), ())), (85, (87, (22, (), ()), ()), (78, (), ()))))".
build_tree129(BT):- BT = node(23, node(40, node(77, node(66, node(31, node(34, empty, empty), empty), node(49, empty, empty)), node(24, node(88, empty, empty), node(48, empty, empty))), node(59, node(68, node(55, node(86, empty, empty), empty), node(58, empty, empty)), node(19, node(38, empty, empty), empty))), node(5, node(10, node(93, node(90, node(51, empty, empty), empty), node(67, empty, empty)), node(38, node(83, empty, empty), empty)), node(89, node(78, node(12, empty, empty), empty), node(9, empty, empty)))).
get_size129(N):- N = 29.
get_height129(N):- N = 6.
get_inorder129(L):- L = [34, 31, 66, 49, 77, 88, 24, 48, 40, 86, 55, 68, 58, 59, 38, 19, 23, 51, 90, 93, 67, 10, 83, 38, 5, 12, 78, 89, 9].
get_postorder129(L):- L = [34, 31, 49, 66, 88, 48, 24, 77, 86, 55, 58, 68, 38, 19, 59, 40, 51, 90, 67, 93, 83, 38, 10, 12, 78, 9, 89, 5, 23].
get_preorder129(L):- L = [23, 40, 77, 66, 31, 34, 49, 24, 88, 48, 59, 68, 55, 86, 58, 19, 38, 5, 10, 93, 90, 51, 67, 38, 83, 89, 78, 12, 9].
get_tour129(L):- L = [23, 40, 77, 66, 31, 34, 34, 34, 31, 31, 66, 49, 49, 49, 66, 77, 24, 88, 88, 88, 24, 48, 48, 48, 24, 77, 40, 59, 68, 55, 86, 86, 86, 55, 55, 68, 58, 58, 58, 68, 59, 19, 38, 38, 38, 19, 19, 59, 40, 23, 5, 10, 93, 90, 51, 51, 51, 90, 90, 93, 67, 67, 67, 93, 10, 38, 83, 83, 83, 38, 38, 10, 5, 89, 78, 12, 12, 12, 78, 78, 89, 9, 9, 9, 89, 5, 23].
is_balanced129.
get_string129(S):- S = "(23, (40, (77, (66, (31, (34, (), ()), ()), (49, (), ())), (24, (88, (), ()), (48, (), ()))), (59, (68, (55, (86, (), ()), ()), (58, (), ())), (19, (38, (), ()), ()))), (5, (10, (93, (90, (51, (), ()), ()), (67, (), ())), (38, (83, (), ()), ())), (89, (78, (12, (), ()), ()), (9, (), ()))))".
build_tree130(BT):- BT = node(93, node(53, node(66, node(9, node(51, node(16, empty, empty), empty), node(82, empty, empty)), node(83, node(94, empty, empty), empty)), node(18, node(14, node(64, empty, empty), node(74, empty, empty)), node(6, node(95, empty, empty), empty))), node(30, node(40, node(31, node(57, node(73, empty, empty), empty), node(81, empty, empty)), node(5, node(82, empty, empty), empty)), node(14, node(56, node(74, empty, empty), empty), node(38, empty, empty)))).
get_size130(N):- N = 27.
get_height130(N):- N = 6.
get_inorder130(L):- L = [16, 51, 9, 82, 66, 94, 83, 53, 64, 14, 74, 18, 95, 6, 93, 73, 57, 31, 81, 40, 82, 5, 30, 74, 56, 14, 38].
get_postorder130(L):- L = [16, 51, 82, 9, 94, 83, 66, 64, 74, 14, 95, 6, 18, 53, 73, 57, 81, 31, 82, 5, 40, 74, 56, 38, 14, 30, 93].
get_preorder130(L):- L = [93, 53, 66, 9, 51, 16, 82, 83, 94, 18, 14, 64, 74, 6, 95, 30, 40, 31, 57, 73, 81, 5, 82, 14, 56, 74, 38].
get_tour130(L):- L = [93, 53, 66, 9, 51, 16, 16, 16, 51, 51, 9, 82, 82, 82, 9, 66, 83, 94, 94, 94, 83, 83, 66, 53, 18, 14, 64, 64, 64, 14, 74, 74, 74, 14, 18, 6, 95, 95, 95, 6, 6, 18, 53, 93, 30, 40, 31, 57, 73, 73, 73, 57, 57, 31, 81, 81, 81, 31, 40, 5, 82, 82, 82, 5, 5, 40, 30, 14, 56, 74, 74, 74, 56, 56, 14, 38, 38, 38, 14, 30, 93].
is_balanced130.
get_string130(S):- S = "(93, (53, (66, (9, (51, (16, (), ()), ()), (82, (), ())), (83, (94, (), ()), ())), (18, (14, (64, (), ()), (74, (), ())), (6, (95, (), ()), ()))), (30, (40, (31, (57, (73, (), ()), ()), (81, (), ())), (5, (82, (), ()), ())), (14, (56, (74, (), ()), ()), (38, (), ()))))".
build_tree131(BT):- BT = node(78, node(89, node(42, node(80, node(34, node(60, empty, empty), empty), node(19, empty, empty)), node(80, node(74, empty, empty), empty)), node(51, node(16, node(61, empty, empty), empty), node(87, node(99, empty, empty), empty))), node(72, node(94, node(9, node(77, node(24, empty, empty), empty), node(60, empty, empty)), node(50, node(56, empty, empty), empty)), node(9, node(65, node(73, empty, empty), empty), node(80, empty, empty)))).
get_size131(N):- N = 26.
get_height131(N):- N = 6.
get_inorder131(L):- L = [60, 34, 80, 19, 42, 74, 80, 89, 61, 16, 51, 99, 87, 78, 24, 77, 9, 60, 94, 56, 50, 72, 73, 65, 9, 80].
get_postorder131(L):- L = [60, 34, 19, 80, 74, 80, 42, 61, 16, 99, 87, 51, 89, 24, 77, 60, 9, 56, 50, 94, 73, 65, 80, 9, 72, 78].
get_preorder131(L):- L = [78, 89, 42, 80, 34, 60, 19, 80, 74, 51, 16, 61, 87, 99, 72, 94, 9, 77, 24, 60, 50, 56, 9, 65, 73, 80].
get_tour131(L):- L = [78, 89, 42, 80, 34, 60, 60, 60, 34, 34, 80, 19, 19, 19, 80, 42, 80, 74, 74, 74, 80, 80, 42, 89, 51, 16, 61, 61, 61, 16, 16, 51, 87, 99, 99, 99, 87, 87, 51, 89, 78, 72, 94, 9, 77, 24, 24, 24, 77, 77, 9, 60, 60, 60, 9, 94, 50, 56, 56, 56, 50, 50, 94, 72, 9, 65, 73, 73, 73, 65, 65, 9, 80, 80, 80, 9, 72, 78].
is_balanced131.
get_string131(S):- S = "(78, (89, (42, (80, (34, (60, (), ()), ()), (19, (), ())), (80, (74, (), ()), ())), (51, (16, (61, (), ()), ()), (87, (99, (), ()), ()))), (72, (94, (9, (77, (24, (), ()), ()), (60, (), ())), (50, (56, (), ()), ())), (9, (65, (73, (), ()), ()), (80, (), ()))))".
build_tree132(BT):- BT = node(33, node(6, node(63, node(89, node(82, node(7, empty, empty), empty), node(53, empty, empty)), node(33, node(86, empty, empty), empty)), node(32, node(86, node(56, empty, empty), empty), node(19, empty, empty))), node(74, node(14, node(23, node(34, empty, empty), empty), node(47, empty, empty)), node(63, node(83, node(35, empty, empty), empty), node(21, empty, empty)))).
get_size132(N):- N = 22.
get_height132(N):- N = 6.
get_inorder132(L):- L = [7, 82, 89, 53, 63, 86, 33, 6, 56, 86, 32, 19, 33, 34, 23, 14, 47, 74, 35, 83, 63, 21].
get_postorder132(L):- L = [7, 82, 53, 89, 86, 33, 63, 56, 86, 19, 32, 6, 34, 23, 47, 14, 35, 83, 21, 63, 74, 33].
get_preorder132(L):- L = [33, 6, 63, 89, 82, 7, 53, 33, 86, 32, 86, 56, 19, 74, 14, 23, 34, 47, 63, 83, 35, 21].
get_tour132(L):- L = [33, 6, 63, 89, 82, 7, 7, 7, 82, 82, 89, 53, 53, 53, 89, 63, 33, 86, 86, 86, 33, 33, 63, 6, 32, 86, 56, 56, 56, 86, 86, 32, 19, 19, 19, 32, 6, 33, 74, 14, 23, 34, 34, 34, 23, 23, 14, 47, 47, 47, 14, 74, 63, 83, 35, 35, 35, 83, 83, 63, 21, 21, 21, 63, 74, 33].
is_balanced132.
get_string132(S):- S = "(33, (6, (63, (89, (82, (7, (), ()), ()), (53, (), ())), (33, (86, (), ()), ())), (32, (86, (56, (), ()), ()), (19, (), ()))), (74, (14, (23, (34, (), ()), ()), (47, (), ())), (63, (83, (35, (), ()), ()), (21, (), ()))))".
build_tree133(BT):- BT = node(71, node(77, node(62, node(15, node(12, node(48, empty, empty), empty), node(86, empty, empty)), node(10, node(88, empty, empty), empty)), node(75, node(65, node(13, empty, empty), empty), node(19, empty, empty))), node(76, node(33, node(99, node(46, empty, empty), node(15, empty, empty)), node(39, node(18, empty, empty), empty)), node(56, node(2, node(66, empty, empty), empty), node(90, empty, empty)))).
get_size133(N):- N = 24.
get_height133(N):- N = 6.
get_inorder133(L):- L = [48, 12, 15, 86, 62, 88, 10, 77, 13, 65, 75, 19, 71, 46, 99, 15, 33, 18, 39, 76, 66, 2, 56, 90].
get_postorder133(L):- L = [48, 12, 86, 15, 88, 10, 62, 13, 65, 19, 75, 77, 46, 15, 99, 18, 39, 33, 66, 2, 90, 56, 76, 71].
get_preorder133(L):- L = [71, 77, 62, 15, 12, 48, 86, 10, 88, 75, 65, 13, 19, 76, 33, 99, 46, 15, 39, 18, 56, 2, 66, 90].
get_tour133(L):- L = [71, 77, 62, 15, 12, 48, 48, 48, 12, 12, 15, 86, 86, 86, 15, 62, 10, 88, 88, 88, 10, 10, 62, 77, 75, 65, 13, 13, 13, 65, 65, 75, 19, 19, 19, 75, 77, 71, 76, 33, 99, 46, 46, 46, 99, 15, 15, 15, 99, 33, 39, 18, 18, 18, 39, 39, 33, 76, 56, 2, 66, 66, 66, 2, 2, 56, 90, 90, 90, 56, 76, 71].
is_balanced133.
get_string133(S):- S = "(71, (77, (62, (15, (12, (48, (), ()), ()), (86, (), ())), (10, (88, (), ()), ())), (75, (65, (13, (), ()), ()), (19, (), ()))), (76, (33, (99, (46, (), ()), (15, (), ())), (39, (18, (), ()), ())), (56, (2, (66, (), ()), ()), (90, (), ()))))".
build_tree134(BT):- BT = node(16, node(80, node(95, node(54, node(89, node(87, node(24, empty, empty), empty), node(44, empty, empty)), node(65, node(57, empty, empty), empty)), node(99, node(58, node(20, empty, empty), empty), node(63, empty, empty))), node(97, node(46, node(81, node(54, empty, empty), empty), node(27, empty, empty)), node(87, node(17, empty, empty), empty))), node(77, node(32, node(93, node(30, node(10, empty, empty), empty), node(40, empty, empty)), node(2, node(81, empty, empty), empty)), node(13, node(99, node(41, empty, empty), node(68, empty, empty)), node(1, node(73, empty, empty), empty)))).
get_size134(N):- N = 35.
get_height134(N):- N = 7.
get_inorder134(L):- L = [24, 87, 89, 44, 54, 57, 65, 95, 20, 58, 99, 63, 80, 54, 81, 46, 27, 97, 17, 87, 16, 10, 30, 93, 40, 32, 81, 2, 77, 41, 99, 68, 13, 73, 1].
get_postorder134(L):- L = [24, 87, 44, 89, 57, 65, 54, 20, 58, 63, 99, 95, 54, 81, 27, 46, 17, 87, 97, 80, 10, 30, 40, 93, 81, 2, 32, 41, 68, 99, 73, 1, 13, 77, 16].
get_preorder134(L):- L = [16, 80, 95, 54, 89, 87, 24, 44, 65, 57, 99, 58, 20, 63, 97, 46, 81, 54, 27, 87, 17, 77, 32, 93, 30, 10, 40, 2, 81, 13, 99, 41, 68, 1, 73].
get_tour134(L):- L = [16, 80, 95, 54, 89, 87, 24, 24, 24, 87, 87, 89, 44, 44, 44, 89, 54, 65, 57, 57, 57, 65, 65, 54, 95, 99, 58, 20, 20, 20, 58, 58, 99, 63, 63, 63, 99, 95, 80, 97, 46, 81, 54, 54, 54, 81, 81, 46, 27, 27, 27, 46, 97, 87, 17, 17, 17, 87, 87, 97, 80, 16, 77, 32, 93, 30, 10, 10, 10, 30, 30, 93, 40, 40, 40, 93, 32, 2, 81, 81, 81, 2, 2, 32, 77, 13, 99, 41, 41, 41, 99, 68, 68, 68, 99, 13, 1, 73, 73, 73, 1, 1, 13, 77, 16].
is_balanced134.
get_string134(S):- S = "(16, (80, (95, (54, (89, (87, (24, (), ()), ()), (44, (), ())), (65, (57, (), ()), ())), (99, (58, (20, (), ()), ()), (63, (), ()))), (97, (46, (81, (54, (), ()), ()), (27, (), ())), (87, (17, (), ()), ()))), (77, (32, (93, (30, (10, (), ()), ()), (40, (), ())), (2, (81, (), ()), ())), (13, (99, (41, (), ()), (68, (), ())), (1, (73, (), ()), ()))))".
build_tree135(BT):- BT = node(14, node(26, node(45, node(48, node(53, node(45, node(71, empty, empty), empty), node(29, empty, empty)), node(57, node(7, empty, empty), empty)), node(67, node(71, node(68, empty, empty), empty), node(51, empty, empty))), node(40, node(78, node(15, node(92, empty, empty), empty), node(45, empty, empty)), node(86, node(96, empty, empty), empty))), node(57, node(61, node(10, node(8, node(86, empty, empty), empty), node(38, empty, empty)), node(36, node(10, empty, empty), node(79, empty, empty))), node(4, node(63, node(85, node(80, empty, empty), empty), node(94, empty, empty)), node(72, node(33, empty, empty), empty)))).
get_size135(N):- N = 37.
get_height135(N):- N = 7.
get_inorder135(L):- L = [71, 45, 53, 29, 48, 7, 57, 45, 68, 71, 67, 51, 26, 92, 15, 78, 45, 40, 96, 86, 14, 86, 8, 10, 38, 61, 10, 36, 79, 57, 80, 85, 63, 94, 4, 33, 72].
get_postorder135(L):- L = [71, 45, 29, 53, 7, 57, 48, 68, 71, 51, 67, 45, 92, 15, 45, 78, 96, 86, 40, 26, 86, 8, 38, 10, 10, 79, 36, 61, 80, 85, 94, 63, 33, 72, 4, 57, 14].
get_preorder135(L):- L = [14, 26, 45, 48, 53, 45, 71, 29, 57, 7, 67, 71, 68, 51, 40, 78, 15, 92, 45, 86, 96, 57, 61, 10, 8, 86, 38, 36, 10, 79, 4, 63, 85, 80, 94, 72, 33].
get_tour135(L):- L = [14, 26, 45, 48, 53, 45, 71, 71, 71, 45, 45, 53, 29, 29, 29, 53, 48, 57, 7, 7, 7, 57, 57, 48, 45, 67, 71, 68, 68, 68, 71, 71, 67, 51, 51, 51, 67, 45, 26, 40, 78, 15, 92, 92, 92, 15, 15, 78, 45, 45, 45, 78, 40, 86, 96, 96, 96, 86, 86, 40, 26, 14, 57, 61, 10, 8, 86, 86, 86, 8, 8, 10, 38, 38, 38, 10, 61, 36, 10, 10, 10, 36, 79, 79, 79, 36, 61, 57, 4, 63, 85, 80, 80, 80, 85, 85, 63, 94, 94, 94, 63, 4, 72, 33, 33, 33, 72, 72, 4, 57, 14].
is_balanced135.
get_string135(S):- S = "(14, (26, (45, (48, (53, (45, (71, (), ()), ()), (29, (), ())), (57, (7, (), ()), ())), (67, (71, (68, (), ()), ()), (51, (), ()))), (40, (78, (15, (92, (), ()), ()), (45, (), ())), (86, (96, (), ()), ()))), (57, (61, (10, (8, (86, (), ()), ()), (38, (), ())), (36, (10, (), ()), (79, (), ()))), (4, (63, (85, (80, (), ()), ()), (94, (), ())), (72, (33, (), ()), ()))))".
build_tree136(BT):- BT = node(80, node(81, node(41, node(61, node(7, node(63, empty, empty), empty), node(4, empty, empty)), node(13, node(40, empty, empty), empty)), node(13, node(48, node(23, empty, empty), empty), node(63, empty, empty))), node(44, node(25, node(63, node(14, empty, empty), empty), node(40, node(21, empty, empty), empty)), node(5, node(68, node(91, empty, empty), empty), node(23, empty, empty)))).
get_size136(N):- N = 23.
get_height136(N):- N = 6.
get_inorder136(L):- L = [63, 7, 61, 4, 41, 40, 13, 81, 23, 48, 13, 63, 80, 14, 63, 25, 21, 40, 44, 91, 68, 5, 23].
get_postorder136(L):- L = [63, 7, 4, 61, 40, 13, 41, 23, 48, 63, 13, 81, 14, 63, 21, 40, 25, 91, 68, 23, 5, 44, 80].
get_preorder136(L):- L = [80, 81, 41, 61, 7, 63, 4, 13, 40, 13, 48, 23, 63, 44, 25, 63, 14, 40, 21, 5, 68, 91, 23].
get_tour136(L):- L = [80, 81, 41, 61, 7, 63, 63, 63, 7, 7, 61, 4, 4, 4, 61, 41, 13, 40, 40, 40, 13, 13, 41, 81, 13, 48, 23, 23, 23, 48, 48, 13, 63, 63, 63, 13, 81, 80, 44, 25, 63, 14, 14, 14, 63, 63, 25, 40, 21, 21, 21, 40, 40, 25, 44, 5, 68, 91, 91, 91, 68, 68, 5, 23, 23, 23, 5, 44, 80].
is_balanced136.
get_string136(S):- S = "(80, (81, (41, (61, (7, (63, (), ()), ()), (4, (), ())), (13, (40, (), ()), ())), (13, (48, (23, (), ()), ()), (63, (), ()))), (44, (25, (63, (14, (), ()), ()), (40, (21, (), ()), ())), (5, (68, (91, (), ()), ()), (23, (), ()))))".
build_tree137(BT):- BT = node(56, node(95, node(9, node(5, node(76, node(62, node(59, empty, empty), empty), node(22, empty, empty)), node(42, node(65, empty, empty), empty)), node(51, node(60, node(17, empty, empty), empty), node(90, empty, empty))), node(17, node(78, node(69, node(75, empty, empty), empty), node(8, empty, empty)), node(83, node(36, empty, empty), empty))), node(47, node(88, node(24, node(51, node(50, empty, empty), empty), node(76, empty, empty)), node(16, node(75, empty, empty), empty)), node(91, node(35, node(97, node(79, empty, empty), empty), node(72, empty, empty)), node(54, node(7, empty, empty), empty)))).
get_size137(N):- N = 36.
get_height137(N):- N = 7.
get_inorder137(L):- L = [59, 62, 76, 22, 5, 65, 42, 9, 17, 60, 51, 90, 95, 75, 69, 78, 8, 17, 36, 83, 56, 50, 51, 24, 76, 88, 75, 16, 47, 79, 97, 35, 72, 91, 7, 54].
get_postorder137(L):- L = [59, 62, 22, 76, 65, 42, 5, 17, 60, 90, 51, 9, 75, 69, 8, 78, 36, 83, 17, 95, 50, 51, 76, 24, 75, 16, 88, 79, 97, 72, 35, 7, 54, 91, 47, 56].
get_preorder137(L):- L = [56, 95, 9, 5, 76, 62, 59, 22, 42, 65, 51, 60, 17, 90, 17, 78, 69, 75, 8, 83, 36, 47, 88, 24, 51, 50, 76, 16, 75, 91, 35, 97, 79, 72, 54, 7].
get_tour137(L):- L = [56, 95, 9, 5, 76, 62, 59, 59, 59, 62, 62, 76, 22, 22, 22, 76, 5, 42, 65, 65, 65, 42, 42, 5, 9, 51, 60, 17, 17, 17, 60, 60, 51, 90, 90, 90, 51, 9, 95, 17, 78, 69, 75, 75, 75, 69, 69, 78, 8, 8, 8, 78, 17, 83, 36, 36, 36, 83, 83, 17, 95, 56, 47, 88, 24, 51, 50, 50, 50, 51, 51, 24, 76, 76, 76, 24, 88, 16, 75, 75, 75, 16, 16, 88, 47, 91, 35, 97, 79, 79, 79, 97, 97, 35, 72, 72, 72, 35, 91, 54, 7, 7, 7, 54, 54, 91, 47, 56].
is_balanced137.
get_string137(S):- S = "(56, (95, (9, (5, (76, (62, (59, (), ()), ()), (22, (), ())), (42, (65, (), ()), ())), (51, (60, (17, (), ()), ()), (90, (), ()))), (17, (78, (69, (75, (), ()), ()), (8, (), ())), (83, (36, (), ()), ()))), (47, (88, (24, (51, (50, (), ()), ()), (76, (), ())), (16, (75, (), ()), ())), (91, (35, (97, (79, (), ()), ()), (72, (), ())), (54, (7, (), ()), ()))))".
build_tree138(BT):- BT = node(58, node(40, node(26, node(83, node(64, node(45, node(60, empty, empty), empty), node(19, empty, empty)), node(70, node(23, empty, empty), empty)), node(3, node(21, node(10, empty, empty), empty), node(73, empty, empty))), node(23, node(10, node(46, node(44, empty, empty), empty), node(84, empty, empty)), node(42, node(69, empty, empty), empty))), node(22, node(72, node(35, node(43, node(16, empty, empty), empty), node(32, empty, empty)), node(24, node(92, node(38, empty, empty), empty), node(3, empty, empty))), node(20, node(72, node(67, node(74, empty, empty), empty), node(31, empty, empty)), node(14, node(47, empty, empty), empty)))).
get_size138(N):- N = 38.
get_height138(N):- N = 7.
get_inorder138(L):- L = [60, 45, 64, 19, 83, 23, 70, 26, 10, 21, 3, 73, 40, 44, 46, 10, 84, 23, 69, 42, 58, 16, 43, 35, 32, 72, 38, 92, 24, 3, 22, 74, 67, 72, 31, 20, 47, 14].
get_postorder138(L):- L = [60, 45, 19, 64, 23, 70, 83, 10, 21, 73, 3, 26, 44, 46, 84, 10, 69, 42, 23, 40, 16, 43, 32, 35, 38, 92, 3, 24, 72, 74, 67, 31, 72, 47, 14, 20, 22, 58].
get_preorder138(L):- L = [58, 40, 26, 83, 64, 45, 60, 19, 70, 23, 3, 21, 10, 73, 23, 10, 46, 44, 84, 42, 69, 22, 72, 35, 43, 16, 32, 24, 92, 38, 3, 20, 72, 67, 74, 31, 14, 47].
get_tour138(L):- L = [58, 40, 26, 83, 64, 45, 60, 60, 60, 45, 45, 64, 19, 19, 19, 64, 83, 70, 23, 23, 23, 70, 70, 83, 26, 3, 21, 10, 10, 10, 21, 21, 3, 73, 73, 73, 3, 26, 40, 23, 10, 46, 44, 44, 44, 46, 46, 10, 84, 84, 84, 10, 23, 42, 69, 69, 69, 42, 42, 23, 40, 58, 22, 72, 35, 43, 16, 16, 16, 43, 43, 35, 32, 32, 32, 35, 72, 24, 92, 38, 38, 38, 92, 92, 24, 3, 3, 3, 24, 72, 22, 20, 72, 67, 74, 74, 74, 67, 67, 72, 31, 31, 31, 72, 20, 14, 47, 47, 47, 14, 14, 20, 22, 58].
is_balanced138.
get_string138(S):- S = "(58, (40, (26, (83, (64, (45, (60, (), ()), ()), (19, (), ())), (70, (23, (), ()), ())), (3, (21, (10, (), ()), ()), (73, (), ()))), (23, (10, (46, (44, (), ()), ()), (84, (), ())), (42, (69, (), ()), ()))), (22, (72, (35, (43, (16, (), ()), ()), (32, (), ())), (24, (92, (38, (), ()), ()), (3, (), ()))), (20, (72, (67, (74, (), ()), ()), (31, (), ())), (14, (47, (), ()), ()))))".
build_tree139(BT):- BT = node(85, node(68, node(95, node(97, node(59, node(7, empty, empty), empty), node(54, empty, empty)), node(61, node(98, empty, empty), empty)), node(45, node(53, node(5, empty, empty), empty), node(82, empty, empty))), node(28, node(21, node(21, node(33, empty, empty), empty), node(52, empty, empty)), node(65, node(87, empty, empty), node(27, empty, empty)))).
get_size139(N):- N = 21.
get_height139(N):- N = 6.
get_inorder139(L):- L = [7, 59, 97, 54, 95, 98, 61, 68, 5, 53, 45, 82, 85, 33, 21, 21, 52, 28, 87, 65, 27].
get_postorder139(L):- L = [7, 59, 54, 97, 98, 61, 95, 5, 53, 82, 45, 68, 33, 21, 52, 21, 87, 27, 65, 28, 85].
get_preorder139(L):- L = [85, 68, 95, 97, 59, 7, 54, 61, 98, 45, 53, 5, 82, 28, 21, 21, 33, 52, 65, 87, 27].
get_tour139(L):- L = [85, 68, 95, 97, 59, 7, 7, 7, 59, 59, 97, 54, 54, 54, 97, 95, 61, 98, 98, 98, 61, 61, 95, 68, 45, 53, 5, 5, 5, 53, 53, 45, 82, 82, 82, 45, 68, 85, 28, 21, 21, 33, 33, 33, 21, 21, 21, 52, 52, 52, 21, 28, 65, 87, 87, 87, 65, 27, 27, 27, 65, 28, 85].
is_balanced139.
get_string139(S):- S = "(85, (68, (95, (97, (59, (7, (), ()), ()), (54, (), ())), (61, (98, (), ()), ())), (45, (53, (5, (), ()), ()), (82, (), ()))), (28, (21, (21, (33, (), ()), ()), (52, (), ())), (65, (87, (), ()), (27, (), ()))))".
build_tree140(BT):- BT = node(92, node(13, node(98, node(88, node(19, node(27, empty, empty), empty), node(69, node(52, empty, empty), empty)), node(91, node(54, node(50, empty, empty), empty), node(29, empty, empty))), node(59, node(97, node(44, node(16, empty, empty), empty), node(27, empty, empty)), node(36, node(20, empty, empty), empty))), node(22, node(87, node(47, node(77, node(85, empty, empty), empty), node(44, empty, empty)), node(82, node(50, empty, empty), empty)), node(95, node(91, node(78, empty, empty), empty), node(96, empty, empty)))).
get_size140(N):- N = 31.
get_height140(N):- N = 6.
get_inorder140(L):- L = [27, 19, 88, 52, 69, 98, 50, 54, 91, 29, 13, 16, 44, 97, 27, 59, 20, 36, 92, 85, 77, 47, 44, 87, 50, 82, 22, 78, 91, 95, 96].
get_postorder140(L):- L = [27, 19, 52, 69, 88, 50, 54, 29, 91, 98, 16, 44, 27, 97, 20, 36, 59, 13, 85, 77, 44, 47, 50, 82, 87, 78, 91, 96, 95, 22, 92].
get_preorder140(L):- L = [92, 13, 98, 88, 19, 27, 69, 52, 91, 54, 50, 29, 59, 97, 44, 16, 27, 36, 20, 22, 87, 47, 77, 85, 44, 82, 50, 95, 91, 78, 96].
get_tour140(L):- L = [92, 13, 98, 88, 19, 27, 27, 27, 19, 19, 88, 69, 52, 52, 52, 69, 69, 88, 98, 91, 54, 50, 50, 50, 54, 54, 91, 29, 29, 29, 91, 98, 13, 59, 97, 44, 16, 16, 16, 44, 44, 97, 27, 27, 27, 97, 59, 36, 20, 20, 20, 36, 36, 59, 13, 92, 22, 87, 47, 77, 85, 85, 85, 77, 77, 47, 44, 44, 44, 47, 87, 82, 50, 50, 50, 82, 82, 87, 22, 95, 91, 78, 78, 78, 91, 91, 95, 96, 96, 96, 95, 22, 92].
is_balanced140.
get_string140(S):- S = "(92, (13, (98, (88, (19, (27, (), ()), ()), (69, (52, (), ()), ())), (91, (54, (50, (), ()), ()), (29, (), ()))), (59, (97, (44, (16, (), ()), ()), (27, (), ())), (36, (20, (), ()), ()))), (22, (87, (47, (77, (85, (), ()), ()), (44, (), ())), (82, (50, (), ()), ())), (95, (91, (78, (), ()), ()), (96, (), ()))))".
build_tree141(BT):- BT = node(7, node(38, node(86, node(46, node(10, node(68, node(83, empty, empty), empty), node(10, empty, empty)), node(47, node(12, empty, empty), empty)), node(48, node(21, node(67, empty, empty), empty), node(82, empty, empty))), node(71, node(11, node(71, node(97, empty, empty), empty), node(69, empty, empty)), node(88, node(13, empty, empty), empty))), node(36, node(31, node(55, node(91, node(16, empty, empty), empty), node(85, node(61, empty, empty), empty)), node(62, node(21, node(46, empty, empty), empty), node(21, empty, empty))), node(14, node(57, node(31, node(93, empty, empty), empty), node(16, empty, empty)), node(11, node(22, empty, empty), empty)))).
get_size141(N):- N = 39.
get_height141(N):- N = 7.
get_inorder141(L):- L = [83, 68, 10, 10, 46, 12, 47, 86, 67, 21, 48, 82, 38, 97, 71, 11, 69, 71, 13, 88, 7, 16, 91, 55, 61, 85, 31, 46, 21, 62, 21, 36, 93, 31, 57, 16, 14, 22, 11].
get_postorder141(L):- L = [83, 68, 10, 10, 12, 47, 46, 67, 21, 82, 48, 86, 97, 71, 69, 11, 13, 88, 71, 38, 16, 91, 61, 85, 55, 46, 21, 21, 62, 31, 93, 31, 16, 57, 22, 11, 14, 36, 7].
get_preorder141(L):- L = [7, 38, 86, 46, 10, 68, 83, 10, 47, 12, 48, 21, 67, 82, 71, 11, 71, 97, 69, 88, 13, 36, 31, 55, 91, 16, 85, 61, 62, 21, 46, 21, 14, 57, 31, 93, 16, 11, 22].
get_tour141(L):- L = [7, 38, 86, 46, 10, 68, 83, 83, 83, 68, 68, 10, 10, 10, 10, 10, 46, 47, 12, 12, 12, 47, 47, 46, 86, 48, 21, 67, 67, 67, 21, 21, 48, 82, 82, 82, 48, 86, 38, 71, 11, 71, 97, 97, 97, 71, 71, 11, 69, 69, 69, 11, 71, 88, 13, 13, 13, 88, 88, 71, 38, 7, 36, 31, 55, 91, 16, 16, 16, 91, 91, 55, 85, 61, 61, 61, 85, 85, 55, 31, 62, 21, 46, 46, 46, 21, 21, 62, 21, 21, 21, 62, 31, 36, 14, 57, 31, 93, 93, 93, 31, 31, 57, 16, 16, 16, 57, 14, 11, 22, 22, 22, 11, 11, 14, 36, 7].
is_balanced141.
get_string141(S):- S = "(7, (38, (86, (46, (10, (68, (83, (), ()), ()), (10, (), ())), (47, (12, (), ()), ())), (48, (21, (67, (), ()), ()), (82, (), ()))), (71, (11, (71, (97, (), ()), ()), (69, (), ())), (88, (13, (), ()), ()))), (36, (31, (55, (91, (16, (), ()), ()), (85, (61, (), ()), ())), (62, (21, (46, (), ()), ()), (21, (), ()))), (14, (57, (31, (93, (), ()), ()), (16, (), ())), (11, (22, (), ()), ()))))".
build_tree142(BT):- BT = node(80, node(80, node(28, node(56, node(11, node(71, empty, empty), empty), node(53, empty, empty)), node(73, node(34, empty, empty), empty)), node(57, node(77, node(73, node(59, empty, empty), empty), node(52, empty, empty)), node(25, node(54, empty, empty), empty))), node(54, node(8, node(97, node(69, node(34, empty, empty), empty), node(48, empty, empty)), node(9, node(67, empty, empty), empty)), node(74, node(77, node(78, empty, empty), empty), node(21, empty, empty)))).
get_size142(N):- N = 28.
get_height142(N):- N = 6.
get_inorder142(L):- L = [71, 11, 56, 53, 28, 34, 73, 80, 59, 73, 77, 52, 57, 54, 25, 80, 34, 69, 97, 48, 8, 67, 9, 54, 78, 77, 74, 21].
get_postorder142(L):- L = [71, 11, 53, 56, 34, 73, 28, 59, 73, 52, 77, 54, 25, 57, 80, 34, 69, 48, 97, 67, 9, 8, 78, 77, 21, 74, 54, 80].
get_preorder142(L):- L = [80, 80, 28, 56, 11, 71, 53, 73, 34, 57, 77, 73, 59, 52, 25, 54, 54, 8, 97, 69, 34, 48, 9, 67, 74, 77, 78, 21].
get_tour142(L):- L = [80, 80, 28, 56, 11, 71, 71, 71, 11, 11, 56, 53, 53, 53, 56, 28, 73, 34, 34, 34, 73, 73, 28, 80, 57, 77, 73, 59, 59, 59, 73, 73, 77, 52, 52, 52, 77, 57, 25, 54, 54, 54, 25, 25, 57, 80, 80, 54, 8, 97, 69, 34, 34, 34, 69, 69, 97, 48, 48, 48, 97, 8, 9, 67, 67, 67, 9, 9, 8, 54, 74, 77, 78, 78, 78, 77, 77, 74, 21, 21, 21, 74, 54, 80].
is_balanced142.
get_string142(S):- S = "(80, (80, (28, (56, (11, (71, (), ()), ()), (53, (), ())), (73, (34, (), ()), ())), (57, (77, (73, (59, (), ()), ()), (52, (), ())), (25, (54, (), ()), ()))), (54, (8, (97, (69, (34, (), ()), ()), (48, (), ())), (9, (67, (), ()), ())), (74, (77, (78, (), ()), ()), (21, (), ()))))".
build_tree143(BT):- BT = node(39, node(66, node(36, node(59, node(72, node(77, empty, empty), empty), node(74, empty, empty)), node(81, node(38, empty, empty), empty)), node(17, node(65, node(43, empty, empty), empty), node(56, empty, empty))), node(46, node(17, node(84, node(35, node(6, empty, empty), empty), node(81, empty, empty)), node(52, node(27, empty, empty), empty)), node(53, node(88, node(24, empty, empty), empty), node(65, empty, empty)))).
get_size143(N):- N = 25.
get_height143(N):- N = 6.
get_inorder143(L):- L = [77, 72, 59, 74, 36, 38, 81, 66, 43, 65, 17, 56, 39, 6, 35, 84, 81, 17, 27, 52, 46, 24, 88, 53, 65].
get_postorder143(L):- L = [77, 72, 74, 59, 38, 81, 36, 43, 65, 56, 17, 66, 6, 35, 81, 84, 27, 52, 17, 24, 88, 65, 53, 46, 39].
get_preorder143(L):- L = [39, 66, 36, 59, 72, 77, 74, 81, 38, 17, 65, 43, 56, 46, 17, 84, 35, 6, 81, 52, 27, 53, 88, 24, 65].
get_tour143(L):- L = [39, 66, 36, 59, 72, 77, 77, 77, 72, 72, 59, 74, 74, 74, 59, 36, 81, 38, 38, 38, 81, 81, 36, 66, 17, 65, 43, 43, 43, 65, 65, 17, 56, 56, 56, 17, 66, 39, 46, 17, 84, 35, 6, 6, 6, 35, 35, 84, 81, 81, 81, 84, 17, 52, 27, 27, 27, 52, 52, 17, 46, 53, 88, 24, 24, 24, 88, 88, 53, 65, 65, 65, 53, 46, 39].
is_balanced143.
get_string143(S):- S = "(39, (66, (36, (59, (72, (77, (), ()), ()), (74, (), ())), (81, (38, (), ()), ())), (17, (65, (43, (), ()), ()), (56, (), ()))), (46, (17, (84, (35, (6, (), ()), ()), (81, (), ())), (52, (27, (), ()), ())), (53, (88, (24, (), ()), ()), (65, (), ()))))".
build_tree144(BT):- BT = node(4, node(46, node(85, node(83, node(63, node(38, empty, empty), empty), node(37, node(39, empty, empty), empty)), node(97, node(96, node(42, empty, empty), empty), node(5, empty, empty))), node(67, node(20, node(34, node(69, empty, empty), empty), node(14, empty, empty)), node(70, node(53, empty, empty), empty))), node(3, node(84, node(38, node(38, node(61, empty, empty), empty), node(71, empty, empty)), node(48, node(8, empty, empty), empty)), node(64, node(31, node(69, empty, empty), empty), node(87, empty, empty)))).
get_size144(N):- N = 31.
get_height144(N):- N = 6.
get_inorder144(L):- L = [38, 63, 83, 39, 37, 85, 42, 96, 97, 5, 46, 69, 34, 20, 14, 67, 53, 70, 4, 61, 38, 38, 71, 84, 8, 48, 3, 69, 31, 64, 87].
get_postorder144(L):- L = [38, 63, 39, 37, 83, 42, 96, 5, 97, 85, 69, 34, 14, 20, 53, 70, 67, 46, 61, 38, 71, 38, 8, 48, 84, 69, 31, 87, 64, 3, 4].
get_preorder144(L):- L = [4, 46, 85, 83, 63, 38, 37, 39, 97, 96, 42, 5, 67, 20, 34, 69, 14, 70, 53, 3, 84, 38, 38, 61, 71, 48, 8, 64, 31, 69, 87].
get_tour144(L):- L = [4, 46, 85, 83, 63, 38, 38, 38, 63, 63, 83, 37, 39, 39, 39, 37, 37, 83, 85, 97, 96, 42, 42, 42, 96, 96, 97, 5, 5, 5, 97, 85, 46, 67, 20, 34, 69, 69, 69, 34, 34, 20, 14, 14, 14, 20, 67, 70, 53, 53, 53, 70, 70, 67, 46, 4, 3, 84, 38, 38, 61, 61, 61, 38, 38, 38, 71, 71, 71, 38, 84, 48, 8, 8, 8, 48, 48, 84, 3, 64, 31, 69, 69, 69, 31, 31, 64, 87, 87, 87, 64, 3, 4].
is_balanced144.
get_string144(S):- S = "(4, (46, (85, (83, (63, (38, (), ()), ()), (37, (39, (), ()), ())), (97, (96, (42, (), ()), ()), (5, (), ()))), (67, (20, (34, (69, (), ()), ()), (14, (), ())), (70, (53, (), ()), ()))), (3, (84, (38, (38, (61, (), ()), ()), (71, (), ())), (48, (8, (), ()), ())), (64, (31, (69, (), ()), ()), (87, (), ()))))".
build_tree145(BT):- BT = node(15, node(49, node(54, node(93, node(69, node(97, empty, empty), empty), node(1, empty, empty)), node(47, node(44, empty, empty), node(97, empty, empty))), node(10, node(16, node(77, node(31, empty, empty), empty), node(11, empty, empty)), node(95, node(98, empty, empty), empty))), node(54, node(2, node(42, node(86, node(28, empty, empty), empty), node(93, empty, empty)), node(14, node(5, empty, empty), empty)), node(92, node(95, node(62, empty, empty), empty), node(2, empty, empty)))).
get_size145(N):- N = 29.
get_height145(N):- N = 6.
get_inorder145(L):- L = [97, 69, 93, 1, 54, 44, 47, 97, 49, 31, 77, 16, 11, 10, 98, 95, 15, 28, 86, 42, 93, 2, 5, 14, 54, 62, 95, 92, 2].
get_postorder145(L):- L = [97, 69, 1, 93, 44, 97, 47, 54, 31, 77, 11, 16, 98, 95, 10, 49, 28, 86, 93, 42, 5, 14, 2, 62, 95, 2, 92, 54, 15].
get_preorder145(L):- L = [15, 49, 54, 93, 69, 97, 1, 47, 44, 97, 10, 16, 77, 31, 11, 95, 98, 54, 2, 42, 86, 28, 93, 14, 5, 92, 95, 62, 2].
get_tour145(L):- L = [15, 49, 54, 93, 69, 97, 97, 97, 69, 69, 93, 1, 1, 1, 93, 54, 47, 44, 44, 44, 47, 97, 97, 97, 47, 54, 49, 10, 16, 77, 31, 31, 31, 77, 77, 16, 11, 11, 11, 16, 10, 95, 98, 98, 98, 95, 95, 10, 49, 15, 54, 2, 42, 86, 28, 28, 28, 86, 86, 42, 93, 93, 93, 42, 2, 14, 5, 5, 5, 14, 14, 2, 54, 92, 95, 62, 62, 62, 95, 95, 92, 2, 2, 2, 92, 54, 15].
is_balanced145.
get_string145(S):- S = "(15, (49, (54, (93, (69, (97, (), ()), ()), (1, (), ())), (47, (44, (), ()), (97, (), ()))), (10, (16, (77, (31, (), ()), ()), (11, (), ())), (95, (98, (), ()), ()))), (54, (2, (42, (86, (28, (), ()), ()), (93, (), ())), (14, (5, (), ()), ())), (92, (95, (62, (), ()), ()), (2, (), ()))))".
build_tree146(BT):- BT = node(85, node(45, node(62, node(83, node(8, node(68, node(70, empty, empty), empty), node(3, empty, empty)), node(35, node(62, empty, empty), empty)), node(8, node(39, node(10, empty, empty), empty), node(66, empty, empty))), node(7, node(79, node(2, node(28, empty, empty), empty), node(83, empty, empty)), node(13, node(3, empty, empty), empty))), node(30, node(87, node(95, node(62, node(30, empty, empty), empty), node(37, empty, empty)), node(75, node(95, empty, empty), empty)), node(56, node(80, node(48, empty, empty), empty), node(50, empty, empty)))).
get_size146(N):- N = 33.
get_height146(N):- N = 7.
get_inorder146(L):- L = [70, 68, 8, 3, 83, 62, 35, 62, 10, 39, 8, 66, 45, 28, 2, 79, 83, 7, 3, 13, 85, 30, 62, 95, 37, 87, 95, 75, 30, 48, 80, 56, 50].
get_postorder146(L):- L = [70, 68, 3, 8, 62, 35, 83, 10, 39, 66, 8, 62, 28, 2, 83, 79, 3, 13, 7, 45, 30, 62, 37, 95, 95, 75, 87, 48, 80, 50, 56, 30, 85].
get_preorder146(L):- L = [85, 45, 62, 83, 8, 68, 70, 3, 35, 62, 8, 39, 10, 66, 7, 79, 2, 28, 83, 13, 3, 30, 87, 95, 62, 30, 37, 75, 95, 56, 80, 48, 50].
get_tour146(L):- L = [85, 45, 62, 83, 8, 68, 70, 70, 70, 68, 68, 8, 3, 3, 3, 8, 83, 35, 62, 62, 62, 35, 35, 83, 62, 8, 39, 10, 10, 10, 39, 39, 8, 66, 66, 66, 8, 62, 45, 7, 79, 2, 28, 28, 28, 2, 2, 79, 83, 83, 83, 79, 7, 13, 3, 3, 3, 13, 13, 7, 45, 85, 30, 87, 95, 62, 30, 30, 30, 62, 62, 95, 37, 37, 37, 95, 87, 75, 95, 95, 95, 75, 75, 87, 30, 56, 80, 48, 48, 48, 80, 80, 56, 50, 50, 50, 56, 30, 85].
is_balanced146.
get_string146(S):- S = "(85, (45, (62, (83, (8, (68, (70, (), ()), ()), (3, (), ())), (35, (62, (), ()), ())), (8, (39, (10, (), ()), ()), (66, (), ()))), (7, (79, (2, (28, (), ()), ()), (83, (), ())), (13, (3, (), ()), ()))), (30, (87, (95, (62, (30, (), ()), ()), (37, (), ())), (75, (95, (), ()), ())), (56, (80, (48, (), ()), ()), (50, (), ()))))".
build_tree147(BT):- BT = node(59, node(7, node(82, node(69, node(88, node(41, node(28, empty, empty), empty), node(11, empty, empty)), node(31, node(58, empty, empty), empty)), node(96, node(39, node(10, empty, empty), empty), node(75, empty, empty))), node(22, node(5, node(49, node(33, empty, empty), empty), node(85, empty, empty)), node(91, node(37, empty, empty), empty))), node(66, node(35, node(40, node(98, node(45, empty, empty), empty), node(88, empty, empty)), node(82, node(81, empty, empty), empty)), node(15, node(30, node(21, empty, empty), empty), node(28, node(64, empty, empty), empty)))).
get_size147(N):- N = 34.
get_height147(N):- N = 7.
get_inorder147(L):- L = [28, 41, 88, 11, 69, 58, 31, 82, 10, 39, 96, 75, 7, 33, 49, 5, 85, 22, 37, 91, 59, 45, 98, 40, 88, 35, 81, 82, 66, 21, 30, 15, 64, 28].
get_postorder147(L):- L = [28, 41, 11, 88, 58, 31, 69, 10, 39, 75, 96, 82, 33, 49, 85, 5, 37, 91, 22, 7, 45, 98, 88, 40, 81, 82, 35, 21, 30, 64, 28, 15, 66, 59].
get_preorder147(L):- L = [59, 7, 82, 69, 88, 41, 28, 11, 31, 58, 96, 39, 10, 75, 22, 5, 49, 33, 85, 91, 37, 66, 35, 40, 98, 45, 88, 82, 81, 15, 30, 21, 28, 64].
get_tour147(L):- L = [59, 7, 82, 69, 88, 41, 28, 28, 28, 41, 41, 88, 11, 11, 11, 88, 69, 31, 58, 58, 58, 31, 31, 69, 82, 96, 39, 10, 10, 10, 39, 39, 96, 75, 75, 75, 96, 82, 7, 22, 5, 49, 33, 33, 33, 49, 49, 5, 85, 85, 85, 5, 22, 91, 37, 37, 37, 91, 91, 22, 7, 59, 66, 35, 40, 98, 45, 45, 45, 98, 98, 40, 88, 88, 88, 40, 35, 82, 81, 81, 81, 82, 82, 35, 66, 15, 30, 21, 21, 21, 30, 30, 15, 28, 64, 64, 64, 28, 28, 15, 66, 59].
is_balanced147.
get_string147(S):- S = "(59, (7, (82, (69, (88, (41, (28, (), ()), ()), (11, (), ())), (31, (58, (), ()), ())), (96, (39, (10, (), ()), ()), (75, (), ()))), (22, (5, (49, (33, (), ()), ()), (85, (), ())), (91, (37, (), ()), ()))), (66, (35, (40, (98, (45, (), ()), ()), (88, (), ())), (82, (81, (), ()), ())), (15, (30, (21, (), ()), ()), (28, (64, (), ()), ()))))".
build_tree148(BT):- BT = node(33, node(83, node(1, node(51, node(51, node(6, node(60, empty, empty), empty), node(29, empty, empty)), node(90, node(4, empty, empty), empty)), node(36, node(92, node(19, empty, empty), empty), node(94, empty, empty))), node(18, node(17, node(48, node(42, empty, empty), empty), node(31, empty, empty)), node(23, node(11, empty, empty), empty))), node(29, node(56, node(80, node(92, node(13, empty, empty), empty), node(83, empty, empty)), node(33, node(64, empty, empty), empty)), node(6, node(56, node(54, node(44, empty, empty), empty), node(60, empty, empty)), node(43, node(73, empty, empty), empty)))).
get_size148(N):- N = 36.
get_height148(N):- N = 7.
get_inorder148(L):- L = [60, 6, 51, 29, 51, 4, 90, 1, 19, 92, 36, 94, 83, 42, 48, 17, 31, 18, 11, 23, 33, 13, 92, 80, 83, 56, 64, 33, 29, 44, 54, 56, 60, 6, 73, 43].
get_postorder148(L):- L = [60, 6, 29, 51, 4, 90, 51, 19, 92, 94, 36, 1, 42, 48, 31, 17, 11, 23, 18, 83, 13, 92, 83, 80, 64, 33, 56, 44, 54, 60, 56, 73, 43, 6, 29, 33].
get_preorder148(L):- L = [33, 83, 1, 51, 51, 6, 60, 29, 90, 4, 36, 92, 19, 94, 18, 17, 48, 42, 31, 23, 11, 29, 56, 80, 92, 13, 83, 33, 64, 6, 56, 54, 44, 60, 43, 73].
get_tour148(L):- L = [33, 83, 1, 51, 51, 6, 60, 60, 60, 6, 6, 51, 29, 29, 29, 51, 51, 90, 4, 4, 4, 90, 90, 51, 1, 36, 92, 19, 19, 19, 92, 92, 36, 94, 94, 94, 36, 1, 83, 18, 17, 48, 42, 42, 42, 48, 48, 17, 31, 31, 31, 17, 18, 23, 11, 11, 11, 23, 23, 18, 83, 33, 29, 56, 80, 92, 13, 13, 13, 92, 92, 80, 83, 83, 83, 80, 56, 33, 64, 64, 64, 33, 33, 56, 29, 6, 56, 54, 44, 44, 44, 54, 54, 56, 60, 60, 60, 56, 6, 43, 73, 73, 73, 43, 43, 6, 29, 33].
is_balanced148.
get_string148(S):- S = "(33, (83, (1, (51, (51, (6, (60, (), ()), ()), (29, (), ())), (90, (4, (), ()), ())), (36, (92, (19, (), ()), ()), (94, (), ()))), (18, (17, (48, (42, (), ()), ()), (31, (), ())), (23, (11, (), ()), ()))), (29, (56, (80, (92, (13, (), ()), ()), (83, (), ())), (33, (64, (), ()), ())), (6, (56, (54, (44, (), ()), ()), (60, (), ())), (43, (73, (), ()), ()))))".
build_tree149(BT):- BT = node(22, node(82, node(93, node(6, node(73, node(40, empty, empty), node(73, empty, empty)), node(54, node(17, empty, empty), empty)), node(97, node(64, node(5, empty, empty), empty), node(48, empty, empty))), node(72, node(2, node(17, node(50, empty, empty), empty), node(68, empty, empty)), node(9, node(88, empty, empty), empty))), node(85, node(3, node(99, node(71, node(72, empty, empty), empty), node(41, empty, empty)), node(83, node(69, empty, empty), empty)), node(35, node(29, node(55, empty, empty), empty), node(47, empty, empty)))).
get_size149(N):- N = 32.
get_height149(N):- N = 6.
get_inorder149(L):- L = [40, 73, 73, 6, 17, 54, 93, 5, 64, 97, 48, 82, 50, 17, 2, 68, 72, 88, 9, 22, 72, 71, 99, 41, 3, 69, 83, 85, 55, 29, 35, 47].
get_postorder149(L):- L = [40, 73, 73, 17, 54, 6, 5, 64, 48, 97, 93, 50, 17, 68, 2, 88, 9, 72, 82, 72, 71, 41, 99, 69, 83, 3, 55, 29, 47, 35, 85, 22].
get_preorder149(L):- L = [22, 82, 93, 6, 73, 40, 73, 54, 17, 97, 64, 5, 48, 72, 2, 17, 50, 68, 9, 88, 85, 3, 99, 71, 72, 41, 83, 69, 35, 29, 55, 47].
get_tour149(L):- L = [22, 82, 93, 6, 73, 40, 40, 40, 73, 73, 73, 73, 73, 6, 54, 17, 17, 17, 54, 54, 6, 93, 97, 64, 5, 5, 5, 64, 64, 97, 48, 48, 48, 97, 93, 82, 72, 2, 17, 50, 50, 50, 17, 17, 2, 68, 68, 68, 2, 72, 9, 88, 88, 88, 9, 9, 72, 82, 22, 85, 3, 99, 71, 72, 72, 72, 71, 71, 99, 41, 41, 41, 99, 3, 83, 69, 69, 69, 83, 83, 3, 85, 35, 29, 55, 55, 55, 29, 29, 35, 47, 47, 47, 35, 85, 22].
is_balanced149.
get_string149(S):- S = "(22, (82, (93, (6, (73, (40, (), ()), (73, (), ())), (54, (17, (), ()), ())), (97, (64, (5, (), ()), ()), (48, (), ()))), (72, (2, (17, (50, (), ()), ()), (68, (), ())), (9, (88, (), ()), ()))), (85, (3, (99, (71, (72, (), ()), ()), (41, (), ())), (83, (69, (), ()), ())), (35, (29, (55, (), ()), ()), (47, (), ()))))".
run_test100:-build_tree100(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size100(N1),
get_height100(N2),
get_preorder100(L1),
get_preorder100(L4),
get_preorder100(L7),
get_postorder100(L2),
get_postorder100(L5),
get_postorder100(L8),
get_inorder100(L3),
get_inorder100(L6),
get_inorder100(L9),
get_tour100(L10),
get_string100(S),
checkSame(is_balanced100, isBalanced(BT)).
run_test101:-build_tree101(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size101(N1),
get_height101(N2),
get_preorder101(L1),
get_preorder101(L4),
get_preorder101(L7),
get_postorder101(L2),
get_postorder101(L5),
get_postorder101(L8),
get_inorder101(L3),
get_inorder101(L6),
get_inorder101(L9),
get_tour101(L10),
get_string101(S),
checkSame(is_balanced101, isBalanced(BT)).
run_test102:-build_tree102(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size102(N1),
get_height102(N2),
get_preorder102(L1),
get_preorder102(L4),
get_preorder102(L7),
get_postorder102(L2),
get_postorder102(L5),
get_postorder102(L8),
get_inorder102(L3),
get_inorder102(L6),
get_inorder102(L9),
get_tour102(L10),
get_string102(S),
checkSame(is_balanced102, isBalanced(BT)).
run_test103:-build_tree103(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size103(N1),
get_height103(N2),
get_preorder103(L1),
get_preorder103(L4),
get_preorder103(L7),
get_postorder103(L2),
get_postorder103(L5),
get_postorder103(L8),
get_inorder103(L3),
get_inorder103(L6),
get_inorder103(L9),
get_tour103(L10),
get_string103(S),
checkSame(is_balanced103, isBalanced(BT)).
run_test104:-build_tree104(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size104(N1),
get_height104(N2),
get_preorder104(L1),
get_preorder104(L4),
get_preorder104(L7),
get_postorder104(L2),
get_postorder104(L5),
get_postorder104(L8),
get_inorder104(L3),
get_inorder104(L6),
get_inorder104(L9),
get_tour104(L10),
get_string104(S),
checkSame(is_balanced104, isBalanced(BT)).
run_test105:-build_tree105(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size105(N1),
get_height105(N2),
get_preorder105(L1),
get_preorder105(L4),
get_preorder105(L7),
get_postorder105(L2),
get_postorder105(L5),
get_postorder105(L8),
get_inorder105(L3),
get_inorder105(L6),
get_inorder105(L9),
get_tour105(L10),
get_string105(S),
checkSame(is_balanced105, isBalanced(BT)).
run_test106:-build_tree106(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size106(N1),
get_height106(N2),
get_preorder106(L1),
get_preorder106(L4),
get_preorder106(L7),
get_postorder106(L2),
get_postorder106(L5),
get_postorder106(L8),
get_inorder106(L3),
get_inorder106(L6),
get_inorder106(L9),
get_tour106(L10),
get_string106(S),
checkSame(is_balanced106, isBalanced(BT)).
run_test107:-build_tree107(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size107(N1),
get_height107(N2),
get_preorder107(L1),
get_preorder107(L4),
get_preorder107(L7),
get_postorder107(L2),
get_postorder107(L5),
get_postorder107(L8),
get_inorder107(L3),
get_inorder107(L6),
get_inorder107(L9),
get_tour107(L10),
get_string107(S),
checkSame(is_balanced107, isBalanced(BT)).
run_test108:-build_tree108(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size108(N1),
get_height108(N2),
get_preorder108(L1),
get_preorder108(L4),
get_preorder108(L7),
get_postorder108(L2),
get_postorder108(L5),
get_postorder108(L8),
get_inorder108(L3),
get_inorder108(L6),
get_inorder108(L9),
get_tour108(L10),
get_string108(S),
checkSame(is_balanced108, isBalanced(BT)).
run_test109:-build_tree109(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size109(N1),
get_height109(N2),
get_preorder109(L1),
get_preorder109(L4),
get_preorder109(L7),
get_postorder109(L2),
get_postorder109(L5),
get_postorder109(L8),
get_inorder109(L3),
get_inorder109(L6),
get_inorder109(L9),
get_tour109(L10),
get_string109(S),
checkSame(is_balanced109, isBalanced(BT)).
run_test110:-build_tree110(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size110(N1),
get_height110(N2),
get_preorder110(L1),
get_preorder110(L4),
get_preorder110(L7),
get_postorder110(L2),
get_postorder110(L5),
get_postorder110(L8),
get_inorder110(L3),
get_inorder110(L6),
get_inorder110(L9),
get_tour110(L10),
get_string110(S),
checkSame(is_balanced110, isBalanced(BT)).
run_test111:-build_tree111(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size111(N1),
get_height111(N2),
get_preorder111(L1),
get_preorder111(L4),
get_preorder111(L7),
get_postorder111(L2),
get_postorder111(L5),
get_postorder111(L8),
get_inorder111(L3),
get_inorder111(L6),
get_inorder111(L9),
get_tour111(L10),
get_string111(S),
checkSame(is_balanced111, isBalanced(BT)).
run_test112:-build_tree112(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size112(N1),
get_height112(N2),
get_preorder112(L1),
get_preorder112(L4),
get_preorder112(L7),
get_postorder112(L2),
get_postorder112(L5),
get_postorder112(L8),
get_inorder112(L3),
get_inorder112(L6),
get_inorder112(L9),
get_tour112(L10),
get_string112(S),
checkSame(is_balanced112, isBalanced(BT)).
run_test113:-build_tree113(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size113(N1),
get_height113(N2),
get_preorder113(L1),
get_preorder113(L4),
get_preorder113(L7),
get_postorder113(L2),
get_postorder113(L5),
get_postorder113(L8),
get_inorder113(L3),
get_inorder113(L6),
get_inorder113(L9),
get_tour113(L10),
get_string113(S),
checkSame(is_balanced113, isBalanced(BT)).
run_test114:-build_tree114(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size114(N1),
get_height114(N2),
get_preorder114(L1),
get_preorder114(L4),
get_preorder114(L7),
get_postorder114(L2),
get_postorder114(L5),
get_postorder114(L8),
get_inorder114(L3),
get_inorder114(L6),
get_inorder114(L9),
get_tour114(L10),
get_string114(S),
checkSame(is_balanced114, isBalanced(BT)).
run_test115:-build_tree115(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size115(N1),
get_height115(N2),
get_preorder115(L1),
get_preorder115(L4),
get_preorder115(L7),
get_postorder115(L2),
get_postorder115(L5),
get_postorder115(L8),
get_inorder115(L3),
get_inorder115(L6),
get_inorder115(L9),
get_tour115(L10),
get_string115(S),
checkSame(is_balanced115, isBalanced(BT)).
run_test116:-build_tree116(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size116(N1),
get_height116(N2),
get_preorder116(L1),
get_preorder116(L4),
get_preorder116(L7),
get_postorder116(L2),
get_postorder116(L5),
get_postorder116(L8),
get_inorder116(L3),
get_inorder116(L6),
get_inorder116(L9),
get_tour116(L10),
get_string116(S),
checkSame(is_balanced116, isBalanced(BT)).
run_test117:-build_tree117(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size117(N1),
get_height117(N2),
get_preorder117(L1),
get_preorder117(L4),
get_preorder117(L7),
get_postorder117(L2),
get_postorder117(L5),
get_postorder117(L8),
get_inorder117(L3),
get_inorder117(L6),
get_inorder117(L9),
get_tour117(L10),
get_string117(S),
checkSame(is_balanced117, isBalanced(BT)).
run_test118:-build_tree118(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size118(N1),
get_height118(N2),
get_preorder118(L1),
get_preorder118(L4),
get_preorder118(L7),
get_postorder118(L2),
get_postorder118(L5),
get_postorder118(L8),
get_inorder118(L3),
get_inorder118(L6),
get_inorder118(L9),
get_tour118(L10),
get_string118(S),
checkSame(is_balanced118, isBalanced(BT)).
run_test119:-build_tree119(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size119(N1),
get_height119(N2),
get_preorder119(L1),
get_preorder119(L4),
get_preorder119(L7),
get_postorder119(L2),
get_postorder119(L5),
get_postorder119(L8),
get_inorder119(L3),
get_inorder119(L6),
get_inorder119(L9),
get_tour119(L10),
get_string119(S),
checkSame(is_balanced119, isBalanced(BT)).
run_test120:-build_tree120(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size120(N1),
get_height120(N2),
get_preorder120(L1),
get_preorder120(L4),
get_preorder120(L7),
get_postorder120(L2),
get_postorder120(L5),
get_postorder120(L8),
get_inorder120(L3),
get_inorder120(L6),
get_inorder120(L9),
get_tour120(L10),
get_string120(S),
checkSame(is_balanced120, isBalanced(BT)).
run_test121:-build_tree121(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size121(N1),
get_height121(N2),
get_preorder121(L1),
get_preorder121(L4),
get_preorder121(L7),
get_postorder121(L2),
get_postorder121(L5),
get_postorder121(L8),
get_inorder121(L3),
get_inorder121(L6),
get_inorder121(L9),
get_tour121(L10),
get_string121(S),
checkSame(is_balanced121, isBalanced(BT)).
run_test122:-build_tree122(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size122(N1),
get_height122(N2),
get_preorder122(L1),
get_preorder122(L4),
get_preorder122(L7),
get_postorder122(L2),
get_postorder122(L5),
get_postorder122(L8),
get_inorder122(L3),
get_inorder122(L6),
get_inorder122(L9),
get_tour122(L10),
get_string122(S),
checkSame(is_balanced122, isBalanced(BT)).
run_test123:-build_tree123(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size123(N1),
get_height123(N2),
get_preorder123(L1),
get_preorder123(L4),
get_preorder123(L7),
get_postorder123(L2),
get_postorder123(L5),
get_postorder123(L8),
get_inorder123(L3),
get_inorder123(L6),
get_inorder123(L9),
get_tour123(L10),
get_string123(S),
checkSame(is_balanced123, isBalanced(BT)).
run_test124:-build_tree124(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size124(N1),
get_height124(N2),
get_preorder124(L1),
get_preorder124(L4),
get_preorder124(L7),
get_postorder124(L2),
get_postorder124(L5),
get_postorder124(L8),
get_inorder124(L3),
get_inorder124(L6),
get_inorder124(L9),
get_tour124(L10),
get_string124(S),
checkSame(is_balanced124, isBalanced(BT)).
run_test125:-build_tree125(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size125(N1),
get_height125(N2),
get_preorder125(L1),
get_preorder125(L4),
get_preorder125(L7),
get_postorder125(L2),
get_postorder125(L5),
get_postorder125(L8),
get_inorder125(L3),
get_inorder125(L6),
get_inorder125(L9),
get_tour125(L10),
get_string125(S),
checkSame(is_balanced125, isBalanced(BT)).
run_test126:-build_tree126(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size126(N1),
get_height126(N2),
get_preorder126(L1),
get_preorder126(L4),
get_preorder126(L7),
get_postorder126(L2),
get_postorder126(L5),
get_postorder126(L8),
get_inorder126(L3),
get_inorder126(L6),
get_inorder126(L9),
get_tour126(L10),
get_string126(S),
checkSame(is_balanced126, isBalanced(BT)).
run_test127:-build_tree127(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size127(N1),
get_height127(N2),
get_preorder127(L1),
get_preorder127(L4),
get_preorder127(L7),
get_postorder127(L2),
get_postorder127(L5),
get_postorder127(L8),
get_inorder127(L3),
get_inorder127(L6),
get_inorder127(L9),
get_tour127(L10),
get_string127(S),
checkSame(is_balanced127, isBalanced(BT)).
run_test128:-build_tree128(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size128(N1),
get_height128(N2),
get_preorder128(L1),
get_preorder128(L4),
get_preorder128(L7),
get_postorder128(L2),
get_postorder128(L5),
get_postorder128(L8),
get_inorder128(L3),
get_inorder128(L6),
get_inorder128(L9),
get_tour128(L10),
get_string128(S),
checkSame(is_balanced128, isBalanced(BT)).
run_test129:-build_tree129(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size129(N1),
get_height129(N2),
get_preorder129(L1),
get_preorder129(L4),
get_preorder129(L7),
get_postorder129(L2),
get_postorder129(L5),
get_postorder129(L8),
get_inorder129(L3),
get_inorder129(L6),
get_inorder129(L9),
get_tour129(L10),
get_string129(S),
checkSame(is_balanced129, isBalanced(BT)).
run_test130:-build_tree130(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size130(N1),
get_height130(N2),
get_preorder130(L1),
get_preorder130(L4),
get_preorder130(L7),
get_postorder130(L2),
get_postorder130(L5),
get_postorder130(L8),
get_inorder130(L3),
get_inorder130(L6),
get_inorder130(L9),
get_tour130(L10),
get_string130(S),
checkSame(is_balanced130, isBalanced(BT)).
run_test131:-build_tree131(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size131(N1),
get_height131(N2),
get_preorder131(L1),
get_preorder131(L4),
get_preorder131(L7),
get_postorder131(L2),
get_postorder131(L5),
get_postorder131(L8),
get_inorder131(L3),
get_inorder131(L6),
get_inorder131(L9),
get_tour131(L10),
get_string131(S),
checkSame(is_balanced131, isBalanced(BT)).
run_test132:-build_tree132(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size132(N1),
get_height132(N2),
get_preorder132(L1),
get_preorder132(L4),
get_preorder132(L7),
get_postorder132(L2),
get_postorder132(L5),
get_postorder132(L8),
get_inorder132(L3),
get_inorder132(L6),
get_inorder132(L9),
get_tour132(L10),
get_string132(S),
checkSame(is_balanced132, isBalanced(BT)).
run_test133:-build_tree133(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size133(N1),
get_height133(N2),
get_preorder133(L1),
get_preorder133(L4),
get_preorder133(L7),
get_postorder133(L2),
get_postorder133(L5),
get_postorder133(L8),
get_inorder133(L3),
get_inorder133(L6),
get_inorder133(L9),
get_tour133(L10),
get_string133(S),
checkSame(is_balanced133, isBalanced(BT)).
run_test134:-build_tree134(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size134(N1),
get_height134(N2),
get_preorder134(L1),
get_preorder134(L4),
get_preorder134(L7),
get_postorder134(L2),
get_postorder134(L5),
get_postorder134(L8),
get_inorder134(L3),
get_inorder134(L6),
get_inorder134(L9),
get_tour134(L10),
get_string134(S),
checkSame(is_balanced134, isBalanced(BT)).
run_test135:-build_tree135(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size135(N1),
get_height135(N2),
get_preorder135(L1),
get_preorder135(L4),
get_preorder135(L7),
get_postorder135(L2),
get_postorder135(L5),
get_postorder135(L8),
get_inorder135(L3),
get_inorder135(L6),
get_inorder135(L9),
get_tour135(L10),
get_string135(S),
checkSame(is_balanced135, isBalanced(BT)).
run_test136:-build_tree136(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size136(N1),
get_height136(N2),
get_preorder136(L1),
get_preorder136(L4),
get_preorder136(L7),
get_postorder136(L2),
get_postorder136(L5),
get_postorder136(L8),
get_inorder136(L3),
get_inorder136(L6),
get_inorder136(L9),
get_tour136(L10),
get_string136(S),
checkSame(is_balanced136, isBalanced(BT)).
run_test137:-build_tree137(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size137(N1),
get_height137(N2),
get_preorder137(L1),
get_preorder137(L4),
get_preorder137(L7),
get_postorder137(L2),
get_postorder137(L5),
get_postorder137(L8),
get_inorder137(L3),
get_inorder137(L6),
get_inorder137(L9),
get_tour137(L10),
get_string137(S),
checkSame(is_balanced137, isBalanced(BT)).
run_test138:-build_tree138(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size138(N1),
get_height138(N2),
get_preorder138(L1),
get_preorder138(L4),
get_preorder138(L7),
get_postorder138(L2),
get_postorder138(L5),
get_postorder138(L8),
get_inorder138(L3),
get_inorder138(L6),
get_inorder138(L9),
get_tour138(L10),
get_string138(S),
checkSame(is_balanced138, isBalanced(BT)).
run_test139:-build_tree139(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size139(N1),
get_height139(N2),
get_preorder139(L1),
get_preorder139(L4),
get_preorder139(L7),
get_postorder139(L2),
get_postorder139(L5),
get_postorder139(L8),
get_inorder139(L3),
get_inorder139(L6),
get_inorder139(L9),
get_tour139(L10),
get_string139(S),
checkSame(is_balanced139, isBalanced(BT)).
run_test140:-build_tree140(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size140(N1),
get_height140(N2),
get_preorder140(L1),
get_preorder140(L4),
get_preorder140(L7),
get_postorder140(L2),
get_postorder140(L5),
get_postorder140(L8),
get_inorder140(L3),
get_inorder140(L6),
get_inorder140(L9),
get_tour140(L10),
get_string140(S),
checkSame(is_balanced140, isBalanced(BT)).
run_test141:-build_tree141(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size141(N1),
get_height141(N2),
get_preorder141(L1),
get_preorder141(L4),
get_preorder141(L7),
get_postorder141(L2),
get_postorder141(L5),
get_postorder141(L8),
get_inorder141(L3),
get_inorder141(L6),
get_inorder141(L9),
get_tour141(L10),
get_string141(S),
checkSame(is_balanced141, isBalanced(BT)).
run_test142:-build_tree142(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size142(N1),
get_height142(N2),
get_preorder142(L1),
get_preorder142(L4),
get_preorder142(L7),
get_postorder142(L2),
get_postorder142(L5),
get_postorder142(L8),
get_inorder142(L3),
get_inorder142(L6),
get_inorder142(L9),
get_tour142(L10),
get_string142(S),
checkSame(is_balanced142, isBalanced(BT)).
run_test143:-build_tree143(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size143(N1),
get_height143(N2),
get_preorder143(L1),
get_preorder143(L4),
get_preorder143(L7),
get_postorder143(L2),
get_postorder143(L5),
get_postorder143(L8),
get_inorder143(L3),
get_inorder143(L6),
get_inorder143(L9),
get_tour143(L10),
get_string143(S),
checkSame(is_balanced143, isBalanced(BT)).
run_test144:-build_tree144(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size144(N1),
get_height144(N2),
get_preorder144(L1),
get_preorder144(L4),
get_preorder144(L7),
get_postorder144(L2),
get_postorder144(L5),
get_postorder144(L8),
get_inorder144(L3),
get_inorder144(L6),
get_inorder144(L9),
get_tour144(L10),
get_string144(S),
checkSame(is_balanced144, isBalanced(BT)).
run_test145:-build_tree145(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size145(N1),
get_height145(N2),
get_preorder145(L1),
get_preorder145(L4),
get_preorder145(L7),
get_postorder145(L2),
get_postorder145(L5),
get_postorder145(L8),
get_inorder145(L3),
get_inorder145(L6),
get_inorder145(L9),
get_tour145(L10),
get_string145(S),
checkSame(is_balanced145, isBalanced(BT)).
run_test146:-build_tree146(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size146(N1),
get_height146(N2),
get_preorder146(L1),
get_preorder146(L4),
get_preorder146(L7),
get_postorder146(L2),
get_postorder146(L5),
get_postorder146(L8),
get_inorder146(L3),
get_inorder146(L6),
get_inorder146(L9),
get_tour146(L10),
get_string146(S),
checkSame(is_balanced146, isBalanced(BT)).
run_test147:-build_tree147(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size147(N1),
get_height147(N2),
get_preorder147(L1),
get_preorder147(L4),
get_preorder147(L7),
get_postorder147(L2),
get_postorder147(L5),
get_postorder147(L8),
get_inorder147(L3),
get_inorder147(L6),
get_inorder147(L9),
get_tour147(L10),
get_string147(S),
checkSame(is_balanced147, isBalanced(BT)).
run_test148:-build_tree148(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size148(N1),
get_height148(N2),
get_preorder148(L1),
get_preorder148(L4),
get_preorder148(L7),
get_postorder148(L2),
get_postorder148(L5),
get_postorder148(L8),
get_inorder148(L3),
get_inorder148(L6),
get_inorder148(L9),
get_tour148(L10),
get_string148(S),
checkSame(is_balanced148, isBalanced(BT)).
run_test149:-build_tree149(BT),
preorder(BT, L1),
postorder(BT, L2),
inorder(BT, L3),
trPreorder(BT, L4),
trPostorder(BT, L5),
trInorder(BT, L6),
preET(BT, L7),
postET(BT, L8),
inET(BT, L9),
eulerTour(BT, L10),
size(BT, N1), 
height(BT, N2), 
toString(BT, S),
get_size149(N1),
get_height149(N2),
get_preorder149(L1),
get_preorder149(L4),
get_preorder149(L7),
get_postorder149(L2),
get_postorder149(L5),
get_postorder149(L8),
get_inorder149(L3),
get_inorder149(L6),
get_inorder149(L9),
get_tour149(L10),
get_string149(S),
checkSame(is_balanced149, isBalanced(BT)).
run_all_BT_tests:-run_test0, 
run_test1, 
run_test2, 
run_test3, 
run_test4, 
run_test5, 
run_test6, 
run_test7, 
run_test8, 
run_test9, 
run_test10, 
run_test11, 
run_test12, 
run_test13, 
run_test14, 
run_test15, 
run_test16, 
run_test17, 
run_test18, 
run_test19, 
run_test20, 
run_test21, 
run_test22, 
run_test23, 
run_test24, 
run_test25, 
run_test26, 
run_test27, 
run_test28, 
run_test29, 
run_test30, 
run_test31, 
run_test32, 
run_test33, 
run_test34, 
run_test35, 
run_test36, 
run_test37, 
run_test38, 
run_test39, 
run_test40, 
run_test41, 
run_test42, 
run_test43, 
run_test44, 
run_test45, 
run_test46, 
run_test47, 
run_test48, 
run_test49, 
run_test50, 
run_test51, 
run_test52, 
run_test53, 
run_test54, 
run_test55, 
run_test56, 
run_test57, 
run_test58, 
run_test59, 
run_test60, 
run_test61, 
run_test62, 
run_test63, 
run_test64, 
run_test65, 
run_test66, 
run_test67, 
run_test68, 
run_test69, 
run_test70, 
run_test71, 
run_test72, 
run_test73, 
run_test74, 
run_test75, 
run_test76, 
run_test77, 
run_test78, 
run_test79, 
run_test80, 
run_test81, 
run_test82, 
run_test83, 
run_test84, 
run_test85, 
run_test86, 
run_test87, 
run_test88, 
run_test89, 
run_test90, 
run_test91, 
run_test92, 
run_test93, 
run_test94, 
run_test95, 
run_test96, 
run_test97, 
run_test98, 
run_test99, 
run_test100, 
run_test101, 
run_test102, 
run_test103, 
run_test104, 
run_test105, 
run_test106, 
run_test107, 
run_test108, 
run_test109, 
run_test110, 
run_test111, 
run_test112, 
run_test113, 
run_test114, 
run_test115, 
run_test116, 
run_test117, 
run_test118, 
run_test119, 
run_test120, 
run_test121, 
run_test122, 
run_test123, 
run_test124, 
run_test125, 
run_test126, 
run_test127, 
run_test128, 
run_test129, 
run_test130, 
run_test131, 
run_test132, 
run_test133, 
run_test134, 
run_test135, 
run_test136, 
run_test137, 
run_test138, 
run_test139, 
run_test140, 
run_test141, 
run_test142, 
run_test143, 
run_test144, 
run_test145, 
run_test146, 
run_test147, 
run_test148, 
run_test149. 
random_array0(L):- L = [80, 27, 47, 7, 63, 19, 75, 21, 76, 99, 97, 6, 73, 65, 17, 32, 96, 1, 90, 84, 42, 95, 87, 81, 89, 78, 29, 82, 53, 79, 24, 85, 62, 68, 93, 31, 67, 58, 11, 59, 51, 13, 91].
sorted_array0(L):- L = [1, 6, 7, 11, 13, 17, 19, 21, 24, 27, 29, 31, 32, 42, 47, 51, 53, 58, 59, 62, 63, 65, 67, 68, 73, 75, 76, 78, 79, 80, 81, 82, 84, 85, 87, 89, 90, 91, 93, 95, 96, 97, 99].
run_make_bst_test0:- random_array0(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array0(Sorted).
random_array1(L):- L = [66, 9, 34, 94, 33, 31, 75, 95, 43, 76, 90, 6, 27, 15, 63, 78, 64, 14, 16, 83, 47, 30, 80, 57, 3, 87, 38, 67, 86, 46, 20, 92, 12, 56, 39, 28, 97].
sorted_array1(L):- L = [3, 6, 9, 12, 14, 15, 16, 20, 27, 28, 30, 31, 33, 34, 38, 39, 43, 46, 47, 56, 57, 63, 64, 66, 67, 75, 76, 78, 80, 83, 86, 87, 90, 92, 94, 95, 97].
run_make_bst_test1:- random_array1(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array1(Sorted).
random_array2(L):- L = [93, 41, 51, 84, 44, 91, 10, 31, 81, 24, 43, 90, 56, 32, 68, 74, 85, 99, 86, 14, 40, 17, 16, 9, 15, 65, 59, 5, 49, 78, 25, 1, 30, 64, 39, 6, 79, 20].
sorted_array2(L):- L = [1, 5, 6, 9, 10, 14, 15, 16, 17, 20, 24, 25, 30, 31, 32, 39, 40, 41, 43, 44, 49, 51, 56, 59, 64, 65, 68, 74, 78, 79, 81, 84, 85, 86, 90, 91, 93, 99].
run_make_bst_test2:- random_array2(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array2(Sorted).
random_array3(L):- L = [97, 54, 30, 69, 10, 9, 73, 33, 83, 71, 7, 74, 67, 78, 48, 72, 38, 36, 14, 59, 89, 39, 61, 25, 15, 42, 63, 57, 17, 53, 6, 60, 50, 27, 88, 84, 81, 52, 94, 20, 56, 93].
sorted_array3(L):- L = [6, 7, 9, 10, 14, 15, 17, 20, 25, 27, 30, 33, 36, 38, 39, 42, 48, 50, 52, 53, 54, 56, 57, 59, 60, 61, 63, 67, 69, 71, 72, 73, 74, 78, 81, 83, 84, 88, 89, 93, 94, 97].
run_make_bst_test3:- random_array3(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array3(Sorted).
random_array4(L):- L = [48, 89, 37, 6, 85, 60, 66, 81, 5, 19, 75, 3, 39, 96, 35, 14, 25, 31, 15, 68, 38, 50, 90, 20, 41, 91, 82, 78, 59, 12, 99, 44, 34, 67].
sorted_array4(L):- L = [3, 5, 6, 12, 14, 15, 19, 20, 25, 31, 34, 35, 37, 38, 39, 41, 44, 48, 50, 59, 60, 66, 67, 68, 75, 78, 81, 82, 85, 89, 90, 91, 96, 99].
run_make_bst_test4:- random_array4(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array4(Sorted).
random_array5(L):- L = [87, 78, 5, 28, 91, 94, 81, 64, 74, 65, 17, 1, 6, 8, 62, 24, 4, 55, 25, 37, 40, 48, 85, 36, 41, 33, 89, 7, 12, 34, 26, 57, 95, 76, 54, 61, 77, 88, 47].
sorted_array5(L):- L = [1, 4, 5, 6, 7, 8, 12, 17, 24, 25, 26, 28, 33, 34, 36, 37, 40, 41, 47, 48, 54, 55, 57, 61, 62, 64, 65, 74, 76, 77, 78, 81, 85, 87, 88, 89, 91, 94, 95].
run_make_bst_test5:- random_array5(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array5(Sorted).
random_array6(L):- L = [95, 91, 44, 19, 28, 78, 70, 92, 39, 9, 90, 3, 96, 12, 20, 99, 4, 41, 55, 30, 97, 81, 59, 82, 64, 51, 36, 14, 24, 83, 37, 77, 68, 33, 98].
sorted_array6(L):- L = [3, 4, 9, 12, 14, 19, 20, 24, 28, 30, 33, 36, 37, 39, 41, 44, 51, 55, 59, 64, 68, 70, 77, 78, 81, 82, 83, 90, 91, 92, 95, 96, 97, 98, 99].
run_make_bst_test6:- random_array6(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array6(Sorted).
random_array7(L):- L = [29, 18, 47, 54, 93, 2, 80, 15, 49, 50, 32, 33, 35, 24, 99, 21, 31, 74, 13, 59, 45, 30, 10, 91, 96, 46, 38, 86, 98, 57, 11, 64, 77, 70, 9, 19, 88, 61, 55].
sorted_array7(L):- L = [2, 9, 10, 11, 13, 15, 18, 19, 21, 24, 29, 30, 31, 32, 33, 35, 38, 45, 46, 47, 49, 50, 54, 55, 57, 59, 61, 64, 70, 74, 77, 80, 86, 88, 91, 93, 96, 98, 99].
run_make_bst_test7:- random_array7(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array7(Sorted).
random_array8(L):- L = [83, 97, 3, 24, 90, 14, 67, 48, 65, 51, 79, 66, 92, 5, 59, 87, 94, 38, 86, 57, 9, 40, 15, 70, 49, 21, 63, 52, 64, 56, 72, 78, 22, 82, 7, 33].
sorted_array8(L):- L = [3, 5, 7, 9, 14, 15, 21, 22, 24, 33, 38, 40, 48, 49, 51, 52, 56, 57, 59, 63, 64, 65, 66, 67, 70, 72, 78, 79, 82, 83, 86, 87, 90, 92, 94, 97].
run_make_bst_test8:- random_array8(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array8(Sorted).
random_array9(L):- L = [20, 55, 65, 23, 31, 5, 94, 47, 74, 45, 28, 62, 29, 19, 85, 38, 91, 10, 72, 56, 39, 25, 17, 6, 18, 71, 63, 81, 78, 21, 95, 70, 90, 42, 49, 64].
sorted_array9(L):- L = [5, 6, 10, 17, 18, 19, 20, 21, 23, 25, 28, 29, 31, 38, 39, 42, 45, 47, 49, 55, 56, 62, 63, 64, 65, 70, 71, 72, 74, 78, 81, 85, 90, 91, 94, 95].
run_make_bst_test9:- random_array9(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array9(Sorted).
random_array10(L):- L = [51, 30, 56, 4, 97, 72, 41, 18, 6, 49, 36, 59, 64, 61, 96, 86, 31, 95, 84, 35, 39, 90, 42, 66, 22, 1, 10, 37, 25, 63, 91, 62].
sorted_array10(L):- L = [1, 4, 6, 10, 18, 22, 25, 30, 31, 35, 36, 37, 39, 41, 42, 49, 51, 56, 59, 61, 62, 63, 64, 66, 72, 84, 86, 90, 91, 95, 96, 97].
run_make_bst_test10:- random_array10(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array10(Sorted).
random_array11(L):- L = [82, 2, 26, 96, 60, 54, 44, 52, 41, 21, 65, 19, 94, 48, 45, 98, 62, 7, 10, 87, 95, 23, 13, 3, 8, 4, 53, 14, 56, 40, 42, 5, 63, 74, 61, 11, 39, 83, 15].
sorted_array11(L):- L = [2, 3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 19, 21, 23, 26, 39, 40, 41, 42, 44, 45, 48, 52, 53, 54, 56, 60, 61, 62, 63, 65, 74, 82, 83, 87, 94, 95, 96, 98].
run_make_bst_test11:- random_array11(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array11(Sorted).
random_array12(L):- L = [19, 58, 71, 96, 45, 34, 94, 38, 41, 57, 25, 50, 4, 73, 5, 67, 69, 32, 63, 95, 12, 97, 85, 90, 15, 59, 53, 52, 61, 9, 35, 91, 66, 68, 44, 22, 77, 89, 82, 75, 42, 49, 7, 29, 47, 23, 27].
sorted_array12(L):- L = [4, 5, 7, 9, 12, 15, 19, 22, 23, 25, 27, 29, 32, 34, 35, 38, 41, 42, 44, 45, 47, 49, 50, 52, 53, 57, 58, 59, 61, 63, 66, 67, 68, 69, 71, 73, 75, 77, 82, 85, 89, 90, 91, 94, 95, 96, 97].
run_make_bst_test12:- random_array12(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array12(Sorted).
random_array13(L):- L = [48, 32, 71, 9, 23, 33, 21, 2, 20, 75, 4, 78, 29, 41, 79, 86, 98, 36, 3, 99, 64, 74, 26, 72, 67, 19, 55, 83, 93, 46, 11, 54, 13, 57, 66, 40, 77, 22, 39].
sorted_array13(L):- L = [2, 3, 4, 9, 11, 13, 19, 20, 21, 22, 23, 26, 29, 32, 33, 36, 39, 40, 41, 46, 48, 54, 55, 57, 64, 66, 67, 71, 72, 74, 75, 77, 78, 79, 83, 86, 93, 98, 99].
run_make_bst_test13:- random_array13(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array13(Sorted).
random_array14(L):- L = [30, 5, 95, 57, 40, 10, 93, 74, 21, 48, 3, 25, 15, 43, 23, 7, 79, 28, 19, 2, 91, 55, 35, 38, 27, 63, 65, 22, 86, 66, 14, 59, 12, 44, 99, 36, 11, 6, 94, 16, 69, 17, 32, 41].
sorted_array14(L):- L = [2, 3, 5, 6, 7, 10, 11, 12, 14, 15, 16, 17, 19, 21, 22, 23, 25, 27, 28, 30, 32, 35, 36, 38, 40, 41, 43, 44, 48, 55, 57, 59, 63, 65, 66, 69, 74, 79, 86, 91, 93, 94, 95, 99].
run_make_bst_test14:- random_array14(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array14(Sorted).
random_array15(L):- L = [8, 67, 69, 76, 82, 99, 92, 14, 27, 33, 62, 96, 49, 26, 87, 75, 1, 46, 51, 6, 21, 55, 17, 15, 30, 28, 90, 44, 11, 4, 39, 38, 59, 89, 34, 41, 23, 53, 98, 73, 71].
sorted_array15(L):- L = [1, 4, 6, 8, 11, 14, 15, 17, 21, 23, 26, 27, 28, 30, 33, 34, 38, 39, 41, 44, 46, 49, 51, 53, 55, 59, 62, 67, 69, 71, 73, 75, 76, 82, 87, 89, 90, 92, 96, 98, 99].
run_make_bst_test15:- random_array15(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array15(Sorted).
random_array16(L):- L = [86, 47, 8, 9, 75, 45, 29, 73, 11, 52, 88, 62, 31, 93, 44, 72, 5, 27, 17, 90, 84, 18, 87, 3, 15, 46, 22, 34, 61, 37, 10, 40, 42, 98, 77, 76, 69, 4].
sorted_array16(L):- L = [3, 4, 5, 8, 9, 10, 11, 15, 17, 18, 22, 27, 29, 31, 34, 37, 40, 42, 44, 45, 46, 47, 52, 61, 62, 69, 72, 73, 75, 76, 77, 84, 86, 87, 88, 90, 93, 98].
run_make_bst_test16:- random_array16(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array16(Sorted).
random_array17(L):- L = [31, 27, 55, 43, 73, 60, 41, 53, 48, 35, 30, 62, 15, 91, 3, 46, 59, 79, 34, 17, 69, 5, 95, 80, 92, 61, 54, 40, 89, 97, 52, 72, 45, 98, 36, 58, 51, 66, 7, 85, 94, 44].
sorted_array17(L):- L = [3, 5, 7, 15, 17, 27, 30, 31, 34, 35, 36, 40, 41, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 66, 69, 72, 73, 79, 80, 85, 89, 91, 92, 94, 95, 97, 98].
run_make_bst_test17:- random_array17(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array17(Sorted).
random_array18(L):- L = [30, 67, 44, 55, 48, 78, 70, 65, 21, 62, 53, 12, 36, 82, 24, 15, 63, 14, 38, 40, 49, 22, 18, 25, 87, 27, 95, 47, 86, 89, 6, 42, 71, 68, 45, 59, 72, 52, 79].
sorted_array18(L):- L = [6, 12, 14, 15, 18, 21, 22, 24, 25, 27, 30, 36, 38, 40, 42, 44, 45, 47, 48, 49, 52, 53, 55, 59, 62, 63, 65, 67, 68, 70, 71, 72, 78, 79, 82, 86, 87, 89, 95].
run_make_bst_test18:- random_array18(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array18(Sorted).
random_array19(L):- L = [72, 30, 33, 78, 7, 47, 73, 75, 25, 74, 4, 94, 68, 44, 60, 62, 95, 43, 23, 99, 69, 65, 22, 76, 6, 24, 19, 59, 40, 98, 64, 54, 77, 2, 15, 37].
sorted_array19(L):- L = [2, 4, 6, 7, 15, 19, 22, 23, 24, 25, 30, 33, 37, 40, 43, 44, 47, 54, 59, 60, 62, 64, 65, 68, 69, 72, 73, 74, 75, 76, 77, 78, 94, 95, 98, 99].
run_make_bst_test19:- random_array19(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array19(Sorted).
random_array20(L):- L = [8, 81, 84, 87, 92, 4, 13, 49, 69, 63, 24, 93, 28, 31, 99, 54, 65, 91, 34, 62, 23, 33, 26, 64, 97, 7, 30, 83, 75, 94, 37, 56, 15, 72, 47, 88, 2].
sorted_array20(L):- L = [2, 4, 7, 8, 13, 15, 23, 24, 26, 28, 30, 31, 33, 34, 37, 47, 49, 54, 56, 62, 63, 64, 65, 69, 72, 75, 81, 83, 84, 87, 88, 91, 92, 93, 94, 97, 99].
run_make_bst_test20:- random_array20(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array20(Sorted).
random_array21(L):- L = [10, 13, 38, 35, 25, 86, 31, 97, 6, 52, 93, 82, 67, 89, 27, 95, 69, 19, 87, 15, 88, 42, 39, 44, 72, 51, 62, 75, 55, 73, 32, 1, 66, 17, 21].
sorted_array21(L):- L = [1, 6, 10, 13, 15, 17, 19, 21, 25, 27, 31, 32, 35, 38, 39, 42, 44, 51, 52, 55, 62, 66, 67, 69, 72, 73, 75, 82, 86, 87, 88, 89, 93, 95, 97].
run_make_bst_test21:- random_array21(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array21(Sorted).
random_array22(L):- L = [76, 29, 10, 35, 90, 42, 56, 34, 21, 91, 87, 31, 22, 84, 83, 65, 88, 73, 61, 70, 48, 60, 82, 32, 7, 23, 59, 97, 18, 15, 92, 62, 16, 57, 85, 12, 36].
sorted_array22(L):- L = [7, 10, 12, 15, 16, 18, 21, 22, 23, 29, 31, 32, 34, 35, 36, 42, 48, 56, 57, 59, 60, 61, 62, 65, 70, 73, 76, 82, 83, 84, 85, 87, 88, 90, 91, 92, 97].
run_make_bst_test22:- random_array22(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array22(Sorted).
random_array23(L):- L = [44, 7, 13, 80, 91, 78, 90, 62, 20, 88, 75, 67, 32, 58, 95, 35, 72, 22, 99, 2, 71, 81, 70, 47, 86, 39, 29, 52, 21, 31, 5, 43, 42, 25, 92, 54, 85, 10, 23, 97, 3, 46, 98, 16, 65, 6].
sorted_array23(L):- L = [2, 3, 5, 6, 7, 10, 13, 16, 20, 21, 22, 23, 25, 29, 31, 32, 35, 39, 42, 43, 44, 46, 47, 52, 54, 58, 62, 65, 67, 70, 71, 72, 75, 78, 80, 81, 85, 86, 88, 90, 91, 92, 95, 97, 98, 99].
run_make_bst_test23:- random_array23(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array23(Sorted).
random_array24(L):- L = [47, 23, 78, 36, 85, 11, 48, 73, 59, 35, 21, 87, 2, 12, 91, 7, 39, 66, 56, 65, 8, 71, 46, 99, 62, 6, 84, 1, 20, 63, 88, 3, 86, 55, 51, 15, 76, 14, 57, 26, 31, 93, 41, 52].
sorted_array24(L):- L = [1, 2, 3, 6, 7, 8, 11, 12, 14, 15, 20, 21, 23, 26, 31, 35, 36, 39, 41, 46, 47, 48, 51, 52, 55, 56, 57, 59, 62, 63, 65, 66, 71, 73, 76, 78, 84, 85, 86, 87, 88, 91, 93, 99].
run_make_bst_test24:- random_array24(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array24(Sorted).
random_array25(L):- L = [69, 81, 57, 90, 10, 82, 12, 15, 65, 58, 74, 97, 6, 76, 47, 48, 31, 33, 68, 87, 72, 79, 51, 42, 96, 27, 11, 30, 1, 84, 40, 71, 95, 60, 34, 86, 89, 49, 19, 38, 24, 77, 94, 61, 66, 91, 73].
sorted_array25(L):- L = [1, 6, 10, 11, 12, 15, 19, 24, 27, 30, 31, 33, 34, 38, 40, 42, 47, 48, 49, 51, 57, 58, 60, 61, 65, 66, 68, 69, 71, 72, 73, 74, 76, 77, 79, 81, 82, 84, 86, 87, 89, 90, 91, 94, 95, 96, 97].
run_make_bst_test25:- random_array25(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array25(Sorted).
random_array26(L):- L = [96, 98, 14, 39, 56, 32, 25, 92, 69, 51, 60, 53, 42, 68, 86, 88, 95, 24, 2, 73, 93, 94, 84, 97, 28, 81, 82, 10, 44, 62, 65, 36].
sorted_array26(L):- L = [2, 10, 14, 24, 25, 28, 32, 36, 39, 42, 44, 51, 53, 56, 60, 62, 65, 68, 69, 73, 81, 82, 84, 86, 88, 92, 93, 94, 95, 96, 97, 98].
run_make_bst_test26:- random_array26(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array26(Sorted).
random_array27(L):- L = [22, 50, 48, 45, 58, 4, 54, 67, 66, 37, 84, 28, 43, 26, 14, 97, 41, 63, 72, 32, 9, 70, 78, 99, 55, 98, 91, 89, 95, 23, 65, 71, 13, 96, 73, 38, 42, 93, 82, 10, 40, 24].
sorted_array27(L):- L = [4, 9, 10, 13, 14, 22, 23, 24, 26, 28, 32, 37, 38, 40, 41, 42, 43, 45, 48, 50, 54, 55, 58, 63, 65, 66, 67, 70, 71, 72, 73, 78, 82, 84, 89, 91, 93, 95, 96, 97, 98, 99].
run_make_bst_test27:- random_array27(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array27(Sorted).
random_array28(L):- L = [5, 54, 46, 40, 49, 71, 21, 22, 4, 28, 23, 79, 52, 2, 81, 19, 70, 30, 38, 32, 74, 41, 12, 67, 35, 76, 13, 77, 37, 83, 20, 64, 9, 39, 85, 36, 60, 26, 31].
sorted_array28(L):- L = [2, 4, 5, 9, 12, 13, 19, 20, 21, 22, 23, 26, 28, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 46, 49, 52, 54, 60, 64, 67, 70, 71, 74, 76, 77, 79, 81, 83, 85].
run_make_bst_test28:- random_array28(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array28(Sorted).
random_array29(L):- L = [7, 78, 50, 39, 19, 92, 53, 57, 33, 94, 93, 37, 81, 52, 97, 2, 32, 77, 66, 25, 22, 87, 48, 84, 20, 10, 4, 23, 95, 8, 11, 43, 82, 76].
sorted_array29(L):- L = [2, 4, 7, 8, 10, 11, 19, 20, 22, 23, 25, 32, 33, 37, 39, 43, 48, 50, 52, 53, 57, 66, 76, 77, 78, 81, 82, 84, 87, 92, 93, 94, 95, 97].
run_make_bst_test29:- random_array29(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array29(Sorted).
random_array30(L):- L = [42, 20, 27, 87, 85, 59, 24, 44, 78, 88, 41, 95, 65, 56, 3, 83, 70, 99, 2, 61, 82, 92, 72, 47, 12, 8, 96, 23, 11, 63, 37, 67, 36, 53, 79, 48].
sorted_array30(L):- L = [2, 3, 8, 11, 12, 20, 23, 24, 27, 36, 37, 41, 42, 44, 47, 48, 53, 56, 59, 61, 63, 65, 67, 70, 72, 78, 79, 82, 83, 85, 87, 88, 92, 95, 96, 99].
run_make_bst_test30:- random_array30(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array30(Sorted).
random_array31(L):- L = [24, 35, 85, 1, 82, 60, 3, 7, 78, 55, 68, 33, 26, 47, 21, 70, 40, 87, 91, 65, 46, 64, 18, 95, 32, 74, 93, 39, 84, 28, 53, 42, 79, 9, 29, 16, 37, 48, 57, 58].
sorted_array31(L):- L = [1, 3, 7, 9, 16, 18, 21, 24, 26, 28, 29, 32, 33, 35, 37, 39, 40, 42, 46, 47, 48, 53, 55, 57, 58, 60, 64, 65, 68, 70, 74, 78, 79, 82, 84, 85, 87, 91, 93, 95].
run_make_bst_test31:- random_array31(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array31(Sorted).
random_array32(L):- L = [71, 5, 98, 89, 72, 75, 70, 90, 69, 60, 99, 93, 61, 6, 46, 11, 64, 22, 62, 84, 3, 17, 37, 65, 38, 79, 1, 91, 29, 55, 51, 49, 66, 56, 18].
sorted_array32(L):- L = [1, 3, 5, 6, 11, 17, 18, 22, 29, 37, 38, 46, 49, 51, 55, 56, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 75, 79, 84, 89, 90, 91, 93, 98, 99].
run_make_bst_test32:- random_array32(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array32(Sorted).
random_array33(L):- L = [63, 95, 84, 18, 49, 60, 80, 87, 50, 71, 56, 96, 42, 81, 59, 3, 41, 4, 65, 16, 20, 8, 76, 25, 22, 54, 70, 74, 77, 30, 32, 36, 35, 1, 94, 53, 23, 9].
sorted_array33(L):- L = [1, 3, 4, 8, 9, 16, 18, 20, 22, 23, 25, 30, 32, 35, 36, 41, 42, 49, 50, 53, 54, 56, 59, 60, 63, 65, 70, 71, 74, 76, 77, 80, 81, 84, 87, 94, 95, 96].
run_make_bst_test33:- random_array33(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array33(Sorted).
random_array34(L):- L = [1, 37, 61, 5, 71, 26, 25, 19, 75, 56, 80, 97, 27, 23, 44, 95, 94, 67, 42, 73, 89, 62, 85, 40, 34, 59, 84, 36, 24, 69, 64, 7, 30, 12, 8, 74, 3, 17, 6, 66, 87, 41, 57].
sorted_array34(L):- L = [1, 3, 5, 6, 7, 8, 12, 17, 19, 23, 24, 25, 26, 27, 30, 34, 36, 37, 40, 41, 42, 44, 56, 57, 59, 61, 62, 64, 66, 67, 69, 71, 73, 74, 75, 80, 84, 85, 87, 89, 94, 95, 97].
run_make_bst_test34:- random_array34(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array34(Sorted).
random_array35(L):- L = [68, 51, 47, 52, 61, 36, 13, 71, 55, 95, 1, 79, 10, 24, 98, 57, 25, 64, 62, 37, 5, 3, 23, 35, 50, 86, 92, 75, 44, 93, 76, 69, 11, 40, 80, 53, 31, 67, 74, 96, 77, 33, 14, 49].
sorted_array35(L):- L = [1, 3, 5, 10, 11, 13, 14, 23, 24, 25, 31, 33, 35, 36, 37, 40, 44, 47, 49, 50, 51, 52, 53, 55, 57, 61, 62, 64, 67, 68, 69, 71, 74, 75, 76, 77, 79, 80, 86, 92, 93, 95, 96, 98].
run_make_bst_test35:- random_array35(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array35(Sorted).
random_array36(L):- L = [7, 86, 89, 57, 44, 45, 51, 36, 49, 94, 14, 87, 76, 96, 2, 90, 29, 62, 60, 16, 30, 59, 26, 47, 11, 5, 74, 32, 48, 91, 23, 56, 75, 69, 34, 84, 28, 33, 72].
sorted_array36(L):- L = [2, 5, 7, 11, 14, 16, 23, 26, 28, 29, 30, 32, 33, 34, 36, 44, 45, 47, 48, 49, 51, 56, 57, 59, 60, 62, 69, 72, 74, 75, 76, 84, 86, 87, 89, 90, 91, 94, 96].
run_make_bst_test36:- random_array36(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array36(Sorted).
random_array37(L):- L = [98, 57, 35, 72, 91, 54, 81, 77, 73, 15, 87, 32, 90, 20, 39, 96, 21, 43, 74, 14, 13, 49, 22, 34, 60, 4, 44, 55, 56, 53, 88, 36, 7, 28, 92, 84, 8, 45, 93, 61, 51, 12, 95, 11, 31].
sorted_array37(L):- L = [4, 7, 8, 11, 12, 13, 14, 15, 20, 21, 22, 28, 31, 32, 34, 35, 36, 39, 43, 44, 45, 49, 51, 53, 54, 55, 56, 57, 60, 61, 72, 73, 74, 77, 81, 84, 87, 88, 90, 91, 92, 93, 95, 96, 98].
run_make_bst_test37:- random_array37(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array37(Sorted).
random_array38(L):- L = [4, 94, 73, 20, 34, 9, 18, 7, 21, 81, 25, 35, 37, 2, 5, 10, 67, 8, 48, 3, 71, 29, 53, 86, 99, 38, 23, 69, 56, 91, 80, 98, 30].
sorted_array38(L):- L = [2, 3, 4, 5, 7, 8, 9, 10, 18, 20, 21, 23, 25, 29, 30, 34, 35, 37, 38, 48, 53, 56, 67, 69, 71, 73, 80, 81, 86, 91, 94, 98, 99].
run_make_bst_test38:- random_array38(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array38(Sorted).
random_array39(L):- L = [51, 93, 66, 23, 56, 99, 19, 98, 30, 47, 52, 24, 44, 1, 46, 7, 15, 55, 71, 39, 73, 25, 3, 22, 34, 69, 37, 53, 92, 2, 65, 5, 84, 31, 79, 64, 43, 95].
sorted_array39(L):- L = [1, 2, 3, 5, 7, 15, 19, 22, 23, 24, 25, 30, 31, 34, 37, 39, 43, 44, 46, 47, 51, 52, 53, 55, 56, 64, 65, 66, 69, 71, 73, 79, 84, 92, 93, 95, 98, 99].
run_make_bst_test39:- random_array39(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array39(Sorted).
random_array40(L):- L = [32, 58, 7, 57, 67, 82, 53, 96, 4, 62, 66, 83, 31, 5, 68, 75, 59, 13, 74, 24, 30, 19, 3, 88, 33, 21, 69, 54, 47, 25, 16].
sorted_array40(L):- L = [3, 4, 5, 7, 13, 16, 19, 21, 24, 25, 30, 31, 32, 33, 47, 53, 54, 57, 58, 59, 62, 66, 67, 68, 69, 74, 75, 82, 83, 88, 96].
run_make_bst_test40:- random_array40(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array40(Sorted).
random_array41(L):- L = [53, 6, 25, 9, 21, 30, 85, 75, 60, 57, 10, 86, 82, 72, 91, 52, 62, 38, 32, 40, 29, 47, 1, 14, 56, 46, 81, 98, 24, 49, 43, 34, 61, 15, 84, 54, 63].
sorted_array41(L):- L = [1, 6, 9, 10, 14, 15, 21, 24, 25, 29, 30, 32, 34, 38, 40, 43, 46, 47, 49, 52, 53, 54, 56, 57, 60, 61, 62, 63, 72, 75, 81, 82, 84, 85, 86, 91, 98].
run_make_bst_test41:- random_array41(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array41(Sorted).
random_array42(L):- L = [66, 23, 39, 32, 63, 48, 72, 15, 6, 16, 52, 61, 94, 47, 62, 33, 43, 4, 99, 80, 92, 30, 83, 53, 73, 85, 76, 56, 42, 79, 27, 7, 65, 82, 49].
sorted_array42(L):- L = [4, 6, 7, 15, 16, 23, 27, 30, 32, 33, 39, 42, 43, 47, 48, 49, 52, 53, 56, 61, 62, 63, 65, 66, 72, 73, 76, 79, 80, 82, 83, 85, 92, 94, 99].
run_make_bst_test42:- random_array42(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array42(Sorted).
random_array43(L):- L = [86, 52, 15, 45, 81, 11, 99, 6, 57, 77, 64, 5, 70, 83, 13, 18, 9, 79, 84, 23, 33, 80, 42, 10, 31, 54, 47, 16, 75, 58, 94, 3, 66, 69, 46, 40, 29, 82].
sorted_array43(L):- L = [3, 5, 6, 9, 10, 11, 13, 15, 16, 18, 23, 29, 31, 33, 40, 42, 45, 46, 47, 52, 54, 57, 58, 64, 66, 69, 70, 75, 77, 79, 80, 81, 82, 83, 84, 86, 94, 99].
run_make_bst_test43:- random_array43(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array43(Sorted).
random_array44(L):- L = [10, 62, 86, 52, 65, 93, 43, 44, 47, 76, 87, 92, 1, 54, 98, 34, 95, 49, 29, 21, 26, 25, 57, 23, 73, 51, 81, 2, 22, 30, 63, 82, 37, 41, 91, 59, 36, 72, 38, 12].
sorted_array44(L):- L = [1, 2, 10, 12, 21, 22, 23, 25, 26, 29, 30, 34, 36, 37, 38, 41, 43, 44, 47, 49, 51, 52, 54, 57, 59, 62, 63, 65, 72, 73, 76, 81, 82, 86, 87, 91, 92, 93, 95, 98].
run_make_bst_test44:- random_array44(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array44(Sorted).
random_array45(L):- L = [21, 47, 6, 16, 62, 72, 67, 32, 36, 37, 51, 9, 10, 73, 80, 27, 2, 12, 89, 18, 78, 40, 68, 66, 17, 42, 58, 64, 92, 38, 50, 95, 71, 15, 7, 8, 1].
sorted_array45(L):- L = [1, 2, 6, 7, 8, 9, 10, 12, 15, 16, 17, 18, 21, 27, 32, 36, 37, 38, 40, 42, 47, 50, 51, 58, 62, 64, 66, 67, 68, 71, 72, 73, 78, 80, 89, 92, 95].
run_make_bst_test45:- random_array45(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array45(Sorted).
random_array46(L):- L = [86, 25, 33, 54, 99, 39, 82, 56, 27, 7, 2, 96, 98, 55, 62, 93, 26, 49, 92, 65, 51, 17, 35, 23, 41, 29, 90, 45, 73, 94, 43, 24, 16, 84, 72, 38, 58, 48, 60, 10, 34, 12, 69, 57, 9, 91, 59, 61, 31].
sorted_array46(L):- L = [2, 7, 9, 10, 12, 16, 17, 23, 24, 25, 26, 27, 29, 31, 33, 34, 35, 38, 39, 41, 43, 45, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 69, 72, 73, 82, 84, 86, 90, 91, 92, 93, 94, 96, 98, 99].
run_make_bst_test46:- random_array46(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array46(Sorted).
random_array47(L):- L = [38, 99, 55, 39, 58, 72, 36, 27, 66, 53, 67, 75, 31, 77, 33, 86, 89, 71, 32, 23, 25, 48, 63, 94, 12, 49, 51, 45, 26, 93, 6, 1, 4, 30, 68, 73, 70].
sorted_array47(L):- L = [1, 4, 6, 12, 23, 25, 26, 27, 30, 31, 32, 33, 36, 38, 39, 45, 48, 49, 51, 53, 55, 58, 63, 66, 67, 68, 70, 71, 72, 73, 75, 77, 86, 89, 93, 94, 99].
run_make_bst_test47:- random_array47(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array47(Sorted).
random_array48(L):- L = [85, 24, 8, 73, 69, 6, 59, 9, 71, 80, 38, 98, 96, 18, 20, 32, 40, 1, 29, 12, 25, 91, 88, 36, 86, 82, 21, 46, 15, 77, 65, 75, 4, 47, 14, 63, 89, 64, 48, 37, 99, 52, 27].
sorted_array48(L):- L = [1, 4, 6, 8, 9, 12, 14, 15, 18, 20, 21, 24, 25, 27, 29, 32, 36, 37, 38, 40, 46, 47, 48, 52, 59, 63, 64, 65, 69, 71, 73, 75, 77, 80, 82, 85, 86, 88, 89, 91, 96, 98, 99].
run_make_bst_test48:- random_array48(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array48(Sorted).
random_array49(L):- L = [2, 19, 9, 29, 20, 94, 82, 6, 11, 12, 86, 79, 50, 48, 71, 74, 22, 17, 67, 81, 77, 47, 57, 34, 32, 40, 69, 23, 70, 42, 62, 13, 44, 24, 98, 26, 16, 52, 96, 83].
sorted_array49(L):- L = [2, 6, 9, 11, 12, 13, 16, 17, 19, 20, 22, 23, 24, 26, 29, 32, 34, 40, 42, 44, 47, 48, 50, 52, 57, 62, 67, 69, 70, 71, 74, 77, 79, 81, 82, 83, 86, 94, 96, 98].
run_make_bst_test49:- random_array49(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array49(Sorted).
random_array50(L):- L = [43, 14, 64, 53, 75, 46, 76, 71, 2, 63, 86, 68, 49, 67, 25, 28, 26, 97, 27, 1, 79, 9, 17, 60, 66, 29, 50, 91, 11, 54, 22, 21, 19, 15, 42, 33, 92, 52, 20, 16, 39, 4, 13, 3, 70].
sorted_array50(L):- L = [1, 2, 3, 4, 9, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 25, 26, 27, 28, 29, 33, 39, 42, 43, 46, 49, 50, 52, 53, 54, 60, 63, 64, 66, 67, 68, 70, 71, 75, 76, 79, 86, 91, 92, 97].
run_make_bst_test50:- random_array50(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array50(Sorted).
random_array51(L):- L = [57, 20, 76, 47, 63, 13, 17, 30, 24, 38, 3, 59, 10, 96, 72, 6, 78, 58, 69, 74, 7, 50, 48, 66, 95, 8, 12, 5, 93, 75, 86, 77, 11, 1, 43, 90, 2, 44, 18, 40, 56, 92, 37, 98, 84].
sorted_array51(L):- L = [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 17, 18, 20, 24, 30, 37, 38, 40, 43, 44, 47, 48, 50, 56, 57, 58, 59, 63, 66, 69, 72, 74, 75, 76, 77, 78, 84, 86, 90, 92, 93, 95, 96, 98].
run_make_bst_test51:- random_array51(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array51(Sorted).
random_array52(L):- L = [56, 65, 24, 46, 73, 94, 14, 92, 32, 11, 16, 43, 10, 64, 22, 27, 12, 71, 30, 76, 17, 98, 21, 9, 28, 58, 15, 93, 4, 80, 63, 90, 23, 86, 57, 84, 42, 89, 20].
sorted_array52(L):- L = [4, 9, 10, 11, 12, 14, 15, 16, 17, 20, 21, 22, 23, 24, 27, 28, 30, 32, 42, 43, 46, 56, 57, 58, 63, 64, 65, 71, 73, 76, 80, 84, 86, 89, 90, 92, 93, 94, 98].
run_make_bst_test52:- random_array52(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array52(Sorted).
random_array53(L):- L = [13, 80, 42, 96, 11, 1, 4, 6, 75, 74, 31, 33, 38, 67, 40, 59, 95, 83, 52, 58, 2, 21, 64, 22, 46, 70, 36, 71, 77, 47, 43, 39, 30, 78, 28].
sorted_array53(L):- L = [1, 2, 4, 6, 11, 13, 21, 22, 28, 30, 31, 33, 36, 38, 39, 40, 42, 43, 46, 47, 52, 58, 59, 64, 67, 70, 71, 74, 75, 77, 78, 80, 83, 95, 96].
run_make_bst_test53:- random_array53(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array53(Sorted).
random_array54(L):- L = [89, 97, 70, 84, 49, 59, 80, 67, 44, 4, 10, 88, 75, 25, 1, 79, 71, 39, 7, 66, 17, 76, 29, 92, 35, 42, 87, 47, 8, 32, 73, 60, 98, 36, 48, 16, 9, 14, 18, 96].
sorted_array54(L):- L = [1, 4, 7, 8, 9, 10, 14, 16, 17, 18, 25, 29, 32, 35, 36, 39, 42, 44, 47, 48, 49, 59, 60, 66, 67, 70, 71, 73, 75, 76, 79, 80, 84, 87, 88, 89, 92, 96, 97, 98].
run_make_bst_test54:- random_array54(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array54(Sorted).
random_array55(L):- L = [96, 58, 20, 51, 84, 3, 8, 63, 71, 99, 68, 77, 74, 43, 87, 22, 28, 92, 41, 85, 37, 46, 50, 90, 7, 73, 24, 12, 21, 14, 55, 48, 83, 39, 17, 32, 98, 18, 33, 25, 40, 34, 59, 78, 47, 27].
sorted_array55(L):- L = [3, 7, 8, 12, 14, 17, 18, 20, 21, 22, 24, 25, 27, 28, 32, 33, 34, 37, 39, 40, 41, 43, 46, 47, 48, 50, 51, 55, 58, 59, 63, 68, 71, 73, 74, 77, 78, 83, 84, 85, 87, 90, 92, 96, 98, 99].
run_make_bst_test55:- random_array55(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array55(Sorted).
random_array56(L):- L = [71, 28, 74, 20, 27, 2, 67, 58, 5, 19, 81, 21, 33, 65, 94, 14, 93, 88, 42, 57, 76, 48, 16, 54, 84, 29, 56, 32, 23, 51, 44, 50, 35, 61, 37].
sorted_array56(L):- L = [2, 5, 14, 16, 19, 20, 21, 23, 27, 28, 29, 32, 33, 35, 37, 42, 44, 48, 50, 51, 54, 56, 57, 58, 61, 65, 67, 71, 74, 76, 81, 84, 88, 93, 94].
run_make_bst_test56:- random_array56(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array56(Sorted).
random_array57(L):- L = [38, 96, 49, 52, 62, 11, 90, 42, 41, 70, 4, 13, 3, 82, 77, 73, 75, 69, 94, 26, 5, 16, 63, 58, 45, 80, 74, 9, 14, 56, 43, 10, 23, 51, 47].
sorted_array57(L):- L = [3, 4, 5, 9, 10, 11, 13, 14, 16, 23, 26, 38, 41, 42, 43, 45, 47, 49, 51, 52, 56, 58, 62, 63, 69, 70, 73, 74, 75, 77, 80, 82, 90, 94, 96].
run_make_bst_test57:- random_array57(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array57(Sorted).
random_array58(L):- L = [13, 14, 83, 62, 6, 37, 33, 92, 58, 80, 84, 19, 28, 4, 85, 71, 61, 77, 55, 64, 82, 94, 3, 9, 25, 8, 65, 57, 12, 15, 10, 99, 46, 53, 29].
sorted_array58(L):- L = [3, 4, 6, 8, 9, 10, 12, 13, 14, 15, 19, 25, 28, 29, 33, 37, 46, 53, 55, 57, 58, 61, 62, 64, 65, 71, 77, 80, 82, 83, 84, 85, 92, 94, 99].
run_make_bst_test58:- random_array58(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array58(Sorted).
random_array59(L):- L = [25, 5, 19, 69, 87, 22, 57, 26, 77, 9, 24, 89, 34, 72, 46, 1, 2, 21, 47, 70, 73, 83, 10, 12, 3, 36, 16, 59, 75, 74, 81, 68, 17, 84, 18, 6, 35].
sorted_array59(L):- L = [1, 2, 3, 5, 6, 9, 10, 12, 16, 17, 18, 19, 21, 22, 24, 25, 26, 34, 35, 36, 46, 47, 57, 59, 68, 69, 70, 72, 73, 74, 75, 77, 81, 83, 84, 87, 89].
run_make_bst_test59:- random_array59(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array59(Sorted).
random_array60(L):- L = [38, 70, 20, 34, 48, 63, 8, 61, 98, 31, 40, 84, 11, 57, 2, 30, 33, 91, 26, 96, 89, 51, 77, 52, 3, 82, 14, 47, 81, 92, 49, 90, 45, 10, 75, 19, 74, 35, 73, 41].
sorted_array60(L):- L = [2, 3, 8, 10, 11, 14, 19, 20, 26, 30, 31, 33, 34, 35, 38, 40, 41, 45, 47, 48, 49, 51, 52, 57, 61, 63, 70, 73, 74, 75, 77, 81, 82, 84, 89, 90, 91, 92, 96, 98].
run_make_bst_test60:- random_array60(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array60(Sorted).
random_array61(L):- L = [41, 39, 63, 66, 27, 3, 84, 98, 55, 88, 51, 37, 73, 25, 68, 50, 76, 29, 99, 93, 23, 62, 42, 75, 69, 35, 8, 80, 77, 71, 64, 91, 95, 19, 44, 81, 21, 2, 74, 54, 46].
sorted_array61(L):- L = [2, 3, 8, 19, 21, 23, 25, 27, 29, 35, 37, 39, 41, 42, 44, 46, 50, 51, 54, 55, 62, 63, 64, 66, 68, 69, 71, 73, 74, 75, 76, 77, 80, 81, 84, 88, 91, 93, 95, 98, 99].
run_make_bst_test61:- random_array61(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array61(Sorted).
random_array62(L):- L = [2, 96, 50, 97, 54, 98, 5, 80, 9, 38, 73, 72, 25, 12, 55, 84, 90, 32, 59, 64, 34, 14, 94, 65, 74, 6, 76, 13, 75, 82, 63, 20].
sorted_array62(L):- L = [2, 5, 6, 9, 12, 13, 14, 20, 25, 32, 34, 38, 50, 54, 55, 59, 63, 64, 65, 72, 73, 74, 75, 76, 80, 82, 84, 90, 94, 96, 97, 98].
run_make_bst_test62:- random_array62(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array62(Sorted).
random_array63(L):- L = [91, 71, 47, 33, 43, 39, 98, 13, 42, 60, 83, 38, 5, 19, 35, 9, 20, 96, 2, 64, 27, 57, 87, 59, 52, 90, 72, 4, 55, 48, 67, 61, 69, 30, 79, 40, 56, 14, 12, 7].
sorted_array63(L):- L = [2, 4, 5, 7, 9, 12, 13, 14, 19, 20, 27, 30, 33, 35, 38, 39, 40, 42, 43, 47, 48, 52, 55, 56, 57, 59, 60, 61, 64, 67, 69, 71, 72, 79, 83, 87, 90, 91, 96, 98].
run_make_bst_test63:- random_array63(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array63(Sorted).
random_array64(L):- L = [77, 99, 56, 65, 81, 23, 72, 83, 25, 93, 21, 34, 45, 84, 33, 66, 17, 51, 64, 44, 37, 53, 18, 40, 47, 76, 97, 36, 98, 20, 49, 38, 15, 4, 90, 95, 31, 27, 63, 91, 54].
sorted_array64(L):- L = [4, 15, 17, 18, 20, 21, 23, 25, 27, 31, 33, 34, 36, 37, 38, 40, 44, 45, 47, 49, 51, 53, 54, 56, 63, 64, 65, 66, 72, 76, 77, 81, 83, 84, 90, 91, 93, 95, 97, 98, 99].
run_make_bst_test64:- random_array64(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array64(Sorted).
random_array65(L):- L = [93, 8, 36, 5, 60, 34, 32, 66, 51, 73, 30, 7, 38, 40, 29, 89, 43, 54, 99, 9, 84, 46, 10, 97, 44, 11, 57, 42, 47, 15, 4, 95, 13, 98, 27, 37, 67, 16, 59, 94, 58].
sorted_array65(L):- L = [4, 5, 7, 8, 9, 10, 11, 13, 15, 16, 27, 29, 30, 32, 34, 36, 37, 38, 40, 42, 43, 44, 46, 47, 51, 54, 57, 58, 59, 60, 66, 67, 73, 84, 89, 93, 94, 95, 97, 98, 99].
run_make_bst_test65:- random_array65(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array65(Sorted).
random_array66(L):- L = [78, 99, 23, 36, 33, 3, 17, 53, 97, 90, 35, 76, 73, 12, 22, 93, 77, 57, 54, 94, 47, 10, 71, 32, 74, 9, 46, 6, 28, 82, 98, 52, 27, 7, 55, 37, 58, 25, 65, 44, 83, 87, 85].
sorted_array66(L):- L = [3, 6, 7, 9, 10, 12, 17, 22, 23, 25, 27, 28, 32, 33, 35, 36, 37, 44, 46, 47, 52, 53, 54, 55, 57, 58, 65, 71, 73, 74, 76, 77, 78, 82, 83, 85, 87, 90, 93, 94, 97, 98, 99].
run_make_bst_test66:- random_array66(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array66(Sorted).
random_array67(L):- L = [22, 42, 58, 35, 16, 30, 88, 11, 97, 24, 76, 50, 25, 53, 70, 93, 81, 18, 17, 23, 67, 91, 49, 14, 98, 96, 72, 37, 84, 6, 20, 39, 85].
sorted_array67(L):- L = [6, 11, 14, 16, 17, 18, 20, 22, 23, 24, 25, 30, 35, 37, 39, 42, 49, 50, 53, 58, 67, 70, 72, 76, 81, 84, 85, 88, 91, 93, 96, 97, 98].
run_make_bst_test67:- random_array67(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array67(Sorted).
random_array68(L):- L = [38, 2, 59, 54, 53, 67, 65, 91, 26, 7, 17, 14, 40, 4, 34, 8, 1, 83, 96, 77, 56, 6, 10, 58, 99, 51, 5, 57, 78, 3, 18, 36, 20, 95, 87, 23, 43, 30, 47, 9, 88, 84, 94, 27].
sorted_array68(L):- L = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 17, 18, 20, 23, 26, 27, 30, 34, 36, 38, 40, 43, 47, 51, 53, 54, 56, 57, 58, 59, 65, 67, 77, 78, 83, 84, 87, 88, 91, 94, 95, 96, 99].
run_make_bst_test68:- random_array68(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array68(Sorted).
random_array69(L):- L = [98, 23, 25, 43, 37, 60, 97, 12, 77, 58, 72, 40, 33, 44, 28, 82, 27, 61, 88, 90, 65, 10, 30, 17, 29, 7, 16, 55, 2, 4, 15, 66, 89, 35, 85, 87, 78, 94, 39, 6, 91, 5, 34, 24, 50, 8, 45].
sorted_array69(L):- L = [2, 4, 5, 6, 7, 8, 10, 12, 15, 16, 17, 23, 24, 25, 27, 28, 29, 30, 33, 34, 35, 37, 39, 40, 43, 44, 45, 50, 55, 58, 60, 61, 65, 66, 72, 77, 78, 82, 85, 87, 88, 89, 90, 91, 94, 97, 98].
run_make_bst_test69:- random_array69(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array69(Sorted).
random_array70(L):- L = [40, 93, 21, 48, 50, 63, 73, 20, 30, 27, 58, 11, 76, 61, 67, 22, 13, 98, 2, 39, 81, 43, 47, 87, 42, 71, 17, 29, 97, 55, 91, 59, 49, 41, 72, 99, 60, 16, 85].
sorted_array70(L):- L = [2, 11, 13, 16, 17, 20, 21, 22, 27, 29, 30, 39, 40, 41, 42, 43, 47, 48, 49, 50, 55, 58, 59, 60, 61, 63, 67, 71, 72, 73, 76, 81, 85, 87, 91, 93, 97, 98, 99].
run_make_bst_test70:- random_array70(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array70(Sorted).
random_array71(L):- L = [20, 44, 73, 39, 5, 35, 93, 77, 55, 16, 36, 79, 61, 68, 27, 86, 83, 92, 12, 31, 58, 26, 70, 21, 72, 59, 19, 95, 8, 33, 40, 25, 71, 32, 7, 65, 38, 28, 96, 49, 99, 66, 34, 47, 60, 29, 48, 9].
sorted_array71(L):- L = [5, 7, 8, 9, 12, 16, 19, 20, 21, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 44, 47, 48, 49, 55, 58, 59, 60, 61, 65, 66, 68, 70, 71, 72, 73, 77, 79, 83, 86, 92, 93, 95, 96, 99].
run_make_bst_test71:- random_array71(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array71(Sorted).
random_array72(L):- L = [26, 40, 5, 82, 52, 21, 76, 30, 41, 18, 3, 6, 1, 14, 70, 12, 2, 91, 37, 45, 53, 74, 66, 4, 8, 59, 61, 32, 78, 29, 79, 73, 27, 13, 77, 15, 42, 36, 60, 17, 56, 10, 58].
sorted_array72(L):- L = [1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 14, 15, 17, 18, 21, 26, 27, 29, 30, 32, 36, 37, 40, 41, 42, 45, 52, 53, 56, 58, 59, 60, 61, 66, 70, 73, 74, 76, 77, 78, 79, 82, 91].
run_make_bst_test72:- random_array72(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array72(Sorted).
random_array73(L):- L = [39, 69, 96, 44, 37, 66, 92, 19, 46, 11, 77, 1, 82, 88, 38, 36, 35, 27, 61, 14, 2, 72, 8, 5, 17, 24, 41, 62, 40, 12, 7, 60, 18, 26, 74].
sorted_array73(L):- L = [1, 2, 5, 7, 8, 11, 12, 14, 17, 18, 19, 24, 26, 27, 35, 36, 37, 38, 39, 40, 41, 44, 46, 60, 61, 62, 66, 69, 72, 74, 77, 82, 88, 92, 96].
run_make_bst_test73:- random_array73(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array73(Sorted).
random_array74(L):- L = [87, 48, 93, 77, 26, 16, 81, 4, 12, 76, 49, 53, 55, 99, 96, 31, 59, 89, 91, 69, 85, 33, 41, 14, 47, 38, 25, 17, 78, 11, 28, 67, 6, 46, 34, 61, 60, 24, 22, 68].
sorted_array74(L):- L = [4, 6, 11, 12, 14, 16, 17, 22, 24, 25, 26, 28, 31, 33, 34, 38, 41, 46, 47, 48, 49, 53, 55, 59, 60, 61, 67, 68, 69, 76, 77, 78, 81, 85, 87, 89, 91, 93, 96, 99].
run_make_bst_test74:- random_array74(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array74(Sorted).
random_array75(L):- L = [75, 83, 5, 60, 12, 47, 23, 10, 77, 68, 79, 27, 41, 53, 21, 86, 80, 30, 46, 29, 74, 94, 97, 52, 61, 11, 32, 56, 28, 51, 4, 78, 73].
sorted_array75(L):- L = [4, 5, 10, 11, 12, 21, 23, 27, 28, 29, 30, 32, 41, 46, 47, 51, 52, 53, 56, 60, 61, 68, 73, 74, 75, 77, 78, 79, 80, 83, 86, 94, 97].
run_make_bst_test75:- random_array75(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array75(Sorted).
random_array76(L):- L = [6, 60, 42, 39, 31, 53, 82, 47, 76, 48, 92, 99, 34, 70, 59, 95, 33, 61, 97, 24, 17, 81, 5, 38, 10, 32, 13, 14, 89, 77, 84, 58, 26, 35, 4, 52, 90, 49, 57, 83, 79, 19, 63, 41].
sorted_array76(L):- L = [4, 5, 6, 10, 13, 14, 17, 19, 24, 26, 31, 32, 33, 34, 35, 38, 39, 41, 42, 47, 48, 49, 52, 53, 57, 58, 59, 60, 61, 63, 70, 76, 77, 79, 81, 82, 83, 84, 89, 90, 92, 95, 97, 99].
run_make_bst_test76:- random_array76(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array76(Sorted).
random_array77(L):- L = [47, 43, 48, 10, 38, 44, 50, 75, 65, 15, 73, 92, 58, 83, 96, 51, 36, 80, 60, 26, 12, 14, 98, 2, 77, 57, 21, 31, 67, 34, 6, 42, 81, 45, 1, 30, 29, 64, 89, 86, 20, 52, 49].
sorted_array77(L):- L = [1, 2, 6, 10, 12, 14, 15, 20, 21, 26, 29, 30, 31, 34, 36, 38, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 57, 58, 60, 64, 65, 67, 73, 75, 77, 80, 81, 83, 86, 89, 92, 96, 98].
run_make_bst_test77:- random_array77(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array77(Sorted).
random_array78(L):- L = [94, 49, 23, 65, 14, 70, 18, 11, 58, 28, 88, 84, 9, 91, 96, 39, 52, 15, 13, 71, 8, 89, 62, 22, 67, 51, 60, 63, 79, 37, 34, 66, 61, 46, 40, 44, 81, 25, 12, 48, 38].
sorted_array78(L):- L = [8, 9, 11, 12, 13, 14, 15, 18, 22, 23, 25, 28, 34, 37, 38, 39, 40, 44, 46, 48, 49, 51, 52, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 79, 81, 84, 88, 89, 91, 94, 96].
run_make_bst_test78:- random_array78(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array78(Sorted).
random_array79(L):- L = [16, 22, 39, 74, 15, 97, 55, 20, 1, 58, 2, 3, 54, 92, 42, 76, 60, 21, 30, 11, 94, 87, 37, 53, 91, 83, 18, 98, 82, 33, 67, 35, 61, 79, 8, 70, 10, 38].
sorted_array79(L):- L = [1, 2, 3, 8, 10, 11, 15, 16, 18, 20, 21, 22, 30, 33, 35, 37, 38, 39, 42, 53, 54, 55, 58, 60, 61, 67, 70, 74, 76, 79, 82, 83, 87, 91, 92, 94, 97, 98].
run_make_bst_test79:- random_array79(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array79(Sorted).
random_array80(L):- L = [88, 86, 31, 99, 95, 62, 85, 3, 54, 81, 28, 18, 13, 34, 74, 27, 92, 56, 44, 73, 48, 83, 63, 78, 19, 36, 59, 64, 42, 9, 12, 57, 97, 76, 51, 94, 30, 43, 47, 21].
sorted_array80(L):- L = [3, 9, 12, 13, 18, 19, 21, 27, 28, 30, 31, 34, 36, 42, 43, 44, 47, 48, 51, 54, 56, 57, 59, 62, 63, 64, 73, 74, 76, 78, 81, 83, 85, 86, 88, 92, 94, 95, 97, 99].
run_make_bst_test80:- random_array80(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array80(Sorted).
random_array81(L):- L = [87, 79, 77, 83, 10, 44, 62, 63, 52, 86, 8, 1, 76, 9, 23, 22, 31, 41, 60, 73, 75, 29, 14, 84, 34, 43, 3, 56, 61, 95, 39, 57, 12, 90, 25].
sorted_array81(L):- L = [1, 3, 8, 9, 10, 12, 14, 22, 23, 25, 29, 31, 34, 39, 41, 43, 44, 52, 56, 57, 60, 61, 62, 63, 73, 75, 76, 77, 79, 83, 84, 86, 87, 90, 95].
run_make_bst_test81:- random_array81(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array81(Sorted).
random_array82(L):- L = [13, 76, 9, 98, 65, 27, 42, 17, 21, 72, 38, 43, 86, 95, 60, 33, 87, 12, 41, 68, 85, 69, 34, 44, 48, 88, 64, 6, 15, 58, 49, 89, 22, 46, 81, 83, 51, 32, 8].
sorted_array82(L):- L = [6, 8, 9, 12, 13, 15, 17, 21, 22, 27, 32, 33, 34, 38, 41, 42, 43, 44, 46, 48, 49, 51, 58, 60, 64, 65, 68, 69, 72, 76, 81, 83, 85, 86, 87, 88, 89, 95, 98].
run_make_bst_test82:- random_array82(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array82(Sorted).
random_array83(L):- L = [28, 97, 42, 78, 82, 32, 87, 94, 92, 33, 69, 35, 91, 90, 66, 8, 88, 10, 47, 86, 77, 71, 15, 48, 2, 76, 56, 59, 23].
sorted_array83(L):- L = [2, 8, 10, 15, 23, 28, 32, 33, 35, 42, 47, 48, 56, 59, 66, 69, 71, 76, 77, 78, 82, 86, 87, 88, 90, 91, 92, 94, 97].
run_make_bst_test83:- random_array83(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array83(Sorted).
random_array84(L):- L = [79, 50, 54, 83, 9, 27, 80, 78, 31, 91, 37, 33, 47, 42, 82, 88, 49, 77, 87, 81, 93, 12, 89, 66, 1, 7, 13, 62, 40, 48, 90, 51, 73, 19, 46, 55, 58, 10, 63].
sorted_array84(L):- L = [1, 7, 9, 10, 12, 13, 19, 27, 31, 33, 37, 40, 42, 46, 47, 48, 49, 50, 51, 54, 55, 58, 62, 63, 66, 73, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 93].
run_make_bst_test84:- random_array84(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array84(Sorted).
random_array85(L):- L = [88, 57, 77, 32, 84, 13, 94, 20, 4, 18, 55, 39, 90, 61, 78, 15, 24, 11, 58, 89, 72, 36, 1, 7, 33, 79, 22, 27, 62, 8, 35, 96, 45, 81, 92, 56, 34].
sorted_array85(L):- L = [1, 4, 7, 8, 11, 13, 15, 18, 20, 22, 24, 27, 32, 33, 34, 35, 36, 39, 45, 55, 56, 57, 58, 61, 62, 72, 77, 78, 79, 81, 84, 88, 89, 90, 92, 94, 96].
run_make_bst_test85:- random_array85(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array85(Sorted).
random_array86(L):- L = [26, 3, 58, 73, 17, 4, 56, 63, 98, 89, 20, 86, 96, 78, 39, 49, 31, 13, 94, 1, 71, 33, 66, 68, 97, 11, 42, 92, 34, 14, 9, 91, 69, 82, 79, 28, 52, 5, 67, 51].
sorted_array86(L):- L = [1, 3, 4, 5, 9, 11, 13, 14, 17, 20, 26, 28, 31, 33, 34, 39, 42, 49, 51, 52, 56, 58, 63, 66, 67, 68, 69, 71, 73, 78, 79, 82, 86, 89, 91, 92, 94, 96, 97, 98].
run_make_bst_test86:- random_array86(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array86(Sorted).
random_array87(L):- L = [56, 58, 36, 1, 93, 74, 60, 85, 46, 73, 88, 97, 51, 57, 14, 25, 53, 89, 81, 39, 54, 34, 42, 7, 83, 99, 12, 69, 48, 52, 37, 15, 94, 86, 82].
sorted_array87(L):- L = [1, 7, 12, 14, 15, 25, 34, 36, 37, 39, 42, 46, 48, 51, 52, 53, 54, 56, 57, 58, 60, 69, 73, 74, 81, 82, 83, 85, 86, 88, 89, 93, 94, 97, 99].
run_make_bst_test87:- random_array87(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array87(Sorted).
random_array88(L):- L = [14, 46, 40, 26, 32, 86, 57, 97, 76, 51, 17, 39, 27, 99, 60, 5, 9, 54, 42, 7, 73, 70, 31, 4, 21, 95, 8, 75, 84, 43, 88, 44, 30, 34, 12, 11, 85, 1, 96, 78, 36].
sorted_array88(L):- L = [1, 4, 5, 7, 8, 9, 11, 12, 14, 17, 21, 26, 27, 30, 31, 32, 34, 36, 39, 40, 42, 43, 44, 46, 51, 54, 57, 60, 70, 73, 75, 76, 78, 84, 85, 86, 88, 95, 96, 97, 99].
run_make_bst_test88:- random_array88(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array88(Sorted).
random_array89(L):- L = [45, 27, 70, 9, 85, 82, 88, 56, 7, 25, 41, 74, 64, 33, 96, 83, 23, 13, 52, 68, 44, 91, 66, 59, 81, 21, 35, 43, 15, 71, 10, 72, 3, 22, 57, 6, 49, 28, 11, 30, 2, 31, 40].
sorted_array89(L):- L = [2, 3, 6, 7, 9, 10, 11, 13, 15, 21, 22, 23, 25, 27, 28, 30, 31, 33, 35, 40, 41, 43, 44, 45, 49, 52, 56, 57, 59, 64, 66, 68, 70, 71, 72, 74, 81, 82, 83, 85, 88, 91, 96].
run_make_bst_test89:- random_array89(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array89(Sorted).
random_array90(L):- L = [97, 77, 2, 9, 80, 51, 24, 39, 99, 95, 65, 78, 5, 64, 8, 17, 88, 54, 81, 93, 84, 18, 4, 21, 61, 52, 50, 55, 38, 48, 22, 7, 46].
sorted_array90(L):- L = [2, 4, 5, 7, 8, 9, 17, 18, 21, 22, 24, 38, 39, 46, 48, 50, 51, 52, 54, 55, 61, 64, 65, 77, 78, 80, 81, 84, 88, 93, 95, 97, 99].
run_make_bst_test90:- random_array90(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array90(Sorted).
random_array91(L):- L = [30, 98, 32, 93, 22, 15, 38, 61, 46, 62, 79, 80, 5, 49, 36, 44, 94, 66, 1, 77, 37, 18, 3, 91, 55, 20, 28, 8, 83, 85, 69, 92, 47, 99, 10, 34, 24, 14, 39, 97, 41, 16, 70].
sorted_array91(L):- L = [1, 3, 5, 8, 10, 14, 15, 16, 18, 20, 22, 24, 28, 30, 32, 34, 36, 37, 38, 39, 41, 44, 46, 47, 49, 55, 61, 62, 66, 69, 70, 77, 79, 80, 83, 85, 91, 92, 93, 94, 97, 98, 99].
run_make_bst_test91:- random_array91(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array91(Sorted).
random_array92(L):- L = [6, 90, 25, 65, 10, 32, 26, 3, 67, 85, 11, 7, 63, 1, 83, 59, 71, 55, 37, 29, 31, 24, 18, 58, 87, 94, 75, 81, 22, 80, 82, 20, 52, 30, 98, 66, 13, 93, 92, 56, 2, 5, 47].
sorted_array92(L):- L = [1, 2, 3, 5, 6, 7, 10, 11, 13, 18, 20, 22, 24, 25, 26, 29, 30, 31, 32, 37, 47, 52, 55, 56, 58, 59, 63, 65, 66, 67, 71, 75, 80, 81, 82, 83, 85, 87, 90, 92, 93, 94, 98].
run_make_bst_test92:- random_array92(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array92(Sorted).
random_array93(L):- L = [63, 69, 45, 21, 22, 83, 75, 33, 59, 25, 66, 27, 32, 17, 80, 4, 12, 92, 46, 57, 87, 38, 52, 77, 72, 6, 31, 14, 3, 56, 34, 89, 1, 64, 43, 99, 13, 65, 40, 7].
sorted_array93(L):- L = [1, 3, 4, 6, 7, 12, 13, 14, 17, 21, 22, 25, 27, 31, 32, 33, 34, 38, 40, 43, 45, 46, 52, 56, 57, 59, 63, 64, 65, 66, 69, 72, 75, 77, 80, 83, 87, 89, 92, 99].
run_make_bst_test93:- random_array93(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array93(Sorted).
random_array94(L):- L = [20, 11, 39, 3, 48, 59, 44, 57, 29, 53, 81, 23, 73, 68, 22, 5, 9, 92, 87, 86, 91, 17, 83, 82, 6, 4, 28, 56, 78, 16, 1, 27, 40, 74, 15, 36, 21, 85, 94, 37, 66].
sorted_array94(L):- L = [1, 3, 4, 5, 6, 9, 11, 15, 16, 17, 20, 21, 22, 23, 27, 28, 29, 36, 37, 39, 40, 44, 48, 53, 56, 57, 59, 66, 68, 73, 74, 78, 81, 82, 83, 85, 86, 87, 91, 92, 94].
run_make_bst_test94:- random_array94(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array94(Sorted).
random_array95(L):- L = [42, 19, 89, 44, 18, 77, 24, 85, 1, 15, 62, 20, 3, 16, 14, 61, 50, 95, 17, 28, 71, 41, 45, 8, 96, 54, 70, 55, 75, 57, 40, 31].
sorted_array95(L):- L = [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 24, 28, 31, 40, 41, 42, 44, 45, 50, 54, 55, 57, 61, 62, 70, 71, 75, 77, 85, 89, 95, 96].
run_make_bst_test95:- random_array95(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array95(Sorted).
random_array96(L):- L = [62, 56, 89, 59, 68, 23, 26, 80, 73, 13, 48, 15, 75, 21, 9, 6, 22, 82, 78, 85, 14, 97, 46, 84, 86, 60, 94, 7, 64, 96, 28, 81, 66, 92, 77, 88, 93, 49, 27, 38, 65, 50, 95, 91].
sorted_array96(L):- L = [6, 7, 9, 13, 14, 15, 21, 22, 23, 26, 27, 28, 38, 46, 48, 49, 50, 56, 59, 60, 62, 64, 65, 66, 68, 73, 75, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97].
run_make_bst_test96:- random_array96(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array96(Sorted).
random_array97(L):- L = [50, 95, 6, 74, 32, 44, 16, 86, 96, 13, 9, 97, 62, 53, 65, 35, 78, 5, 33, 90, 37, 56, 85, 99, 8, 48, 68, 76, 98, 10, 39, 12, 89, 75, 69, 1, 24, 51, 63, 77, 60].
sorted_array97(L):- L = [1, 5, 6, 8, 9, 10, 12, 13, 16, 24, 32, 33, 35, 37, 39, 44, 48, 50, 51, 53, 56, 60, 62, 63, 65, 68, 69, 74, 75, 76, 77, 78, 85, 86, 89, 90, 95, 96, 97, 98, 99].
run_make_bst_test97:- random_array97(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array97(Sorted).
random_array98(L):- L = [95, 32, 46, 98, 54, 3, 33, 8, 25, 29, 37, 80, 27, 16, 78, 12, 47, 77, 6, 18, 17, 20, 81, 61, 79, 40, 13, 38, 99, 82, 11, 22, 23].
sorted_array98(L):- L = [3, 6, 8, 11, 12, 13, 16, 17, 18, 20, 22, 23, 25, 27, 29, 32, 33, 37, 38, 40, 46, 47, 54, 61, 77, 78, 79, 80, 81, 82, 95, 98, 99].
run_make_bst_test98:- random_array98(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array98(Sorted).
random_array99(L):- L = [1, 15, 67, 94, 64, 68, 44, 61, 84, 48, 16, 34, 60, 59, 28, 97, 2, 20, 36, 46, 92, 37, 42, 54, 83, 14, 88, 45, 71, 51, 5, 6, 95, 3, 70, 43, 65, 57].
sorted_array99(L):- L = [1, 2, 3, 5, 6, 14, 15, 16, 20, 28, 34, 36, 37, 42, 43, 44, 45, 46, 48, 51, 54, 57, 59, 60, 61, 64, 65, 67, 68, 70, 71, 83, 84, 88, 92, 94, 95, 97].
run_make_bst_test99:- random_array99(L), 
        makeBST(L, BT),
        isBST(BT), 
        isBalanced(BT),
        inorder(BT, Sorted),
        sorted_array99(Sorted).
run_all_make_bst_tests:-run_make_bst_test0, 
run_make_bst_test1, 
run_make_bst_test2, 
run_make_bst_test3, 
run_make_bst_test4, 
run_make_bst_test5, 
run_make_bst_test6, 
run_make_bst_test7, 
run_make_bst_test8, 
run_make_bst_test9, 
run_make_bst_test10, 
run_make_bst_test11, 
run_make_bst_test12, 
run_make_bst_test13, 
run_make_bst_test14, 
run_make_bst_test15, 
run_make_bst_test16, 
run_make_bst_test17, 
run_make_bst_test18, 
run_make_bst_test19, 
run_make_bst_test20, 
run_make_bst_test21, 
run_make_bst_test22, 
run_make_bst_test23, 
run_make_bst_test24, 
run_make_bst_test25, 
run_make_bst_test26, 
run_make_bst_test27, 
run_make_bst_test28, 
run_make_bst_test29, 
run_make_bst_test30, 
run_make_bst_test31, 
run_make_bst_test32, 
run_make_bst_test33, 
run_make_bst_test34, 
run_make_bst_test35, 
run_make_bst_test36, 
run_make_bst_test37, 
run_make_bst_test38, 
run_make_bst_test39, 
run_make_bst_test40, 
run_make_bst_test41, 
run_make_bst_test42, 
run_make_bst_test43, 
run_make_bst_test44, 
run_make_bst_test45, 
run_make_bst_test46, 
run_make_bst_test47, 
run_make_bst_test48, 
run_make_bst_test49, 
run_make_bst_test50, 
run_make_bst_test51, 
run_make_bst_test52, 
run_make_bst_test53, 
run_make_bst_test54, 
run_make_bst_test55, 
run_make_bst_test56, 
run_make_bst_test57, 
run_make_bst_test58, 
run_make_bst_test59, 
run_make_bst_test60, 
run_make_bst_test61, 
run_make_bst_test62, 
run_make_bst_test63, 
run_make_bst_test64, 
run_make_bst_test65, 
run_make_bst_test66, 
run_make_bst_test67, 
run_make_bst_test68, 
run_make_bst_test69, 
run_make_bst_test70, 
run_make_bst_test71, 
run_make_bst_test72, 
run_make_bst_test73, 
run_make_bst_test74, 
run_make_bst_test75, 
run_make_bst_test76, 
run_make_bst_test77, 
run_make_bst_test78, 
run_make_bst_test79, 
run_make_bst_test80, 
run_make_bst_test81, 
run_make_bst_test82, 
run_make_bst_test83, 
run_make_bst_test84, 
run_make_bst_test85, 
run_make_bst_test86, 
run_make_bst_test87, 
run_make_bst_test88, 
run_make_bst_test89, 
run_make_bst_test90, 
run_make_bst_test91, 
run_make_bst_test92, 
run_make_bst_test93, 
run_make_bst_test94, 
run_make_bst_test95, 
run_make_bst_test96, 
run_make_bst_test97, 
run_make_bst_test98, 
run_make_bst_test99. 
build_bst0(BT):- BT = node(89, node(77, node(29, node(28, node(20, node(18, node(11, node(8, node(4, empty, node(5, empty, empty)), empty), empty), node(19, empty, empty)), node(21, empty, empty)), empty), node(61, node(55, node(44, node(30, empty, node(38, node(34, empty, empty), node(42, empty, empty))), node(47, node(45, empty, empty), node(49, empty, empty))), node(60, empty, empty)), node(63, empty, node(66, empty, node(74, empty, empty))))), node(87, node(81, node(80, empty, empty), node(86, node(82, empty, empty), empty)), node(88, empty, empty))), node(93, node(91, empty, empty), node(94, empty, node(96, empty, node(97, empty, node(98, empty, empty)))))).
after_insertion_list0(L):- L = [1, 4, 5, 7, 8, 11, 18, 19, 20, 21, 28, 29, 30, 34, 38, 40, 42, 44, 45, 47, 49, 53, 55, 57, 60, 61, 63, 66, 74, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 91, 93, 94, 96, 97, 98].
after_deletion_list0(L):- L = [1, 4, 5, 7, 8, 11, 18, 19, 20, 21, 28, 29, 30, 34, 38, 40, 42, 44, 45, 47, 49, 53, 55, 57, 60, 61, 63, 66, 74, 76, 77, 80, 81, 82, 85, 86, 88, 89, 91, 93, 94, 96, 97].
run_bst_test0:- build_bst0(BT0),
not(lookup(57, BT0)),
not(lookup(85, BT0)),
not(lookup(40, BT0)),
not(lookup(7, BT0)),
not(lookup(53, BT0)),
not(lookup(76, BT0)),
not(lookup(1, BT0)),
lookup(87, BT0),
lookup(98, BT0),
isBST(BT0),
insert(57, BT0, BT1),
insert(85, BT1, BT2),
insert(40, BT2, BT3),
insert(7, BT3, BT4),
insert(53, BT4, BT5),
insert(76, BT5, BT6),
insert(1, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list0(L1), 
delete(87, BT7, BT8), 
delete(98, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list0(L2). 
build_bst1(BT):- BT = node(49, node(6, node(1, empty, node(2, empty, node(5, empty, empty))), node(39, node(31, node(26, node(13, node(9, node(8, empty, empty), empty), node(23, node(14, empty, empty), empty)), node(27, empty, empty)), node(32, empty, node(34, empty, node(37, empty, empty)))), node(48, node(47, node(44, node(40, empty, empty), node(46, empty, empty)), empty), empty))), node(87, node(82, node(80, node(69, node(67, node(53, node(51, empty, empty), node(55, node(54, empty, empty), node(66, empty, empty))), empty), node(76, node(75, node(71, empty, empty), empty), node(77, empty, empty))), node(81, empty, empty)), node(83, empty, node(86, empty, empty))), node(98, node(97, node(95, node(93, node(90, empty, empty), empty), empty), empty), empty))).
after_insertion_list1(L):- L = [1, 2, 5, 6, 8, 9, 13, 14, 19, 21, 23, 26, 27, 31, 32, 34, 37, 39, 40, 41, 44, 46, 47, 48, 49, 51, 53, 54, 55, 66, 67, 69, 71, 75, 76, 77, 80, 81, 82, 83, 86, 87, 90, 92, 93, 95, 97, 98].
after_deletion_list1(L):- L = [1, 2, 5, 6, 9, 13, 14, 19, 21, 23, 26, 27, 32, 34, 37, 39, 40, 41, 44, 46, 47, 48, 51, 53, 54, 66, 67, 69, 71, 75, 76, 77, 80, 81, 82, 83, 86, 87, 92, 93, 95, 97, 98].
run_bst_test1:- build_bst1(BT0),
not(lookup(41, BT0)),
not(lookup(92, BT0)),
not(lookup(19, BT0)),
not(lookup(21, BT0)),
lookup(90, BT0),
lookup(49, BT0),
lookup(55, BT0),
lookup(8, BT0),
lookup(31, BT0),
isBST(BT0),
insert(41, BT0, BT1),
insert(92, BT1, BT2),
insert(19, BT2, BT3),
insert(21, BT3, BT4),
isBST(BT4),
inorder(BT4, L1), 
after_insertion_list1(L1), 
delete(90, BT4, BT5), 
delete(49, BT5, BT6), 
delete(55, BT6, BT7), 
delete(8, BT7, BT8), 
delete(31, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list1(L2). 
build_bst2(BT):- BT = node(72, node(37, node(1, empty, node(4, empty, node(10, node(8, empty, empty), node(13, empty, node(14, empty, node(26, node(24, empty, empty), node(35, node(33, node(31, empty, empty), empty), empty))))))), node(47, node(41, node(39, empty, empty), empty), node(60, node(56, node(50, empty, node(54, node(51, empty, node(53, empty, empty)), empty)), empty), node(67, node(64, empty, empty), node(69, empty, empty))))), node(78, node(74, node(73, empty, empty), empty), node(93, node(88, node(82, empty, node(84, empty, empty)), node(91, empty, empty)), node(99, node(94, empty, empty), empty)))).
after_insertion_list2(L):- L = [1, 3, 4, 8, 10, 13, 14, 18, 24, 26, 31, 33, 35, 37, 39, 40, 41, 47, 50, 51, 53, 54, 56, 60, 64, 65, 67, 69, 72, 73, 74, 78, 80, 82, 84, 88, 91, 92, 93, 94, 95, 96, 99].
after_deletion_list2(L):- L = [1, 3, 4, 8, 10, 13, 14, 18, 26, 31, 33, 35, 37, 39, 40, 41, 47, 50, 51, 53, 54, 56, 60, 64, 65, 67, 69, 72, 73, 74, 78, 80, 82, 84, 88, 92, 93, 94, 95, 96, 99].
run_bst_test2:- build_bst2(BT0),
not(lookup(92, BT0)),
not(lookup(80, BT0)),
not(lookup(18, BT0)),
not(lookup(96, BT0)),
not(lookup(95, BT0)),
not(lookup(40, BT0)),
not(lookup(3, BT0)),
not(lookup(65, BT0)),
lookup(24, BT0),
lookup(91, BT0),
isBST(BT0),
insert(92, BT0, BT1),
insert(80, BT1, BT2),
insert(18, BT2, BT3),
insert(96, BT3, BT4),
insert(95, BT4, BT5),
insert(40, BT5, BT6),
insert(3, BT6, BT7),
insert(65, BT7, BT8),
isBST(BT8),
inorder(BT8, L1), 
after_insertion_list2(L1), 
delete(24, BT8, BT9), 
delete(91, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list2(L2). 
build_bst3(BT):- BT = node(21, node(12, node(4, node(2, empty, empty), node(11, node(9, empty, empty), empty)), node(15, node(13, empty, node(14, empty, empty)), node(18, empty, empty))), node(41, node(24, node(22, empty, node(23, empty, empty)), node(35, node(28, node(26, node(25, empty, empty), empty), node(32, empty, empty)), node(40, node(36, empty, empty), empty))), node(51, node(45, empty, empty), node(64, node(59, empty, node(60, empty, node(62, node(61, empty, empty), empty))), node(72, empty, node(95, node(77, node(75, empty, empty), node(78, empty, node(83, node(79, empty, node(81, empty, empty)), node(89, empty, node(91, empty, empty))))), node(99, empty, empty))))))).
after_insertion_list3(L):- L = [2, 4, 7, 9, 11, 12, 13, 14, 15, 18, 21, 22, 23, 24, 25, 26, 28, 32, 35, 36, 40, 41, 45, 48, 51, 52, 53, 59, 60, 61, 62, 64, 68, 72, 75, 77, 78, 79, 81, 83, 85, 89, 91, 95, 99].
after_deletion_list3(L):- L = [2, 7, 9, 11, 12, 13, 14, 15, 18, 21, 22, 24, 25, 26, 28, 35, 36, 40, 41, 45, 48, 52, 53, 59, 60, 61, 62, 64, 68, 72, 75, 77, 78, 79, 81, 83, 85, 89, 91, 95, 99].
run_bst_test3:- build_bst3(BT0),
not(lookup(52, BT0)),
not(lookup(53, BT0)),
not(lookup(85, BT0)),
not(lookup(68, BT0)),
not(lookup(48, BT0)),
not(lookup(7, BT0)),
lookup(51, BT0),
lookup(32, BT0),
lookup(23, BT0),
lookup(4, BT0),
isBST(BT0),
insert(52, BT0, BT1),
insert(53, BT1, BT2),
insert(85, BT2, BT3),
insert(68, BT3, BT4),
insert(48, BT4, BT5),
insert(7, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list3(L1), 
delete(51, BT6, BT7), 
delete(32, BT7, BT8), 
delete(23, BT8, BT9), 
delete(4, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list3(L2). 
build_bst4(BT):- BT = node(21, node(13, node(5, node(2, empty, node(4, empty, empty)), node(8, empty, node(9, empty, node(12, empty, empty)))), node(14, empty, empty)), node(54, node(53, node(48, node(31, node(27, empty, empty), node(39, node(37, node(32, empty, node(35, empty, empty)), empty), node(44, empty, node(46, empty, empty)))), node(50, empty, empty)), empty), node(99, node(67, node(60, node(56, empty, empty), node(62, empty, node(63, empty, empty))), node(87, node(76, node(72, empty, empty), node(82, empty, empty)), node(95, node(90, node(89, node(88, empty, empty), empty), node(94, empty, empty)), empty))), empty))).
after_insertion_list4(L):- L = [2, 4, 5, 8, 9, 10, 12, 13, 14, 21, 27, 31, 32, 35, 37, 39, 44, 46, 48, 49, 50, 53, 54, 56, 57, 60, 61, 62, 63, 65, 67, 70, 72, 75, 76, 82, 87, 88, 89, 90, 94, 95, 97, 99].
after_deletion_list4(L):- L = [2, 4, 5, 8, 9, 10, 12, 13, 14, 21, 27, 31, 32, 35, 37, 39, 44, 46, 48, 49, 50, 53, 54, 56, 57, 60, 61, 62, 65, 67, 70, 72, 75, 76, 82, 87, 88, 89, 90, 94, 95, 97].
run_bst_test4:- build_bst4(BT0),
not(lookup(61, BT0)),
not(lookup(57, BT0)),
not(lookup(70, BT0)),
not(lookup(10, BT0)),
not(lookup(49, BT0)),
not(lookup(75, BT0)),
not(lookup(97, BT0)),
not(lookup(65, BT0)),
lookup(99, BT0),
lookup(63, BT0),
isBST(BT0),
insert(61, BT0, BT1),
insert(57, BT1, BT2),
insert(70, BT2, BT3),
insert(10, BT3, BT4),
insert(49, BT4, BT5),
insert(75, BT5, BT6),
insert(97, BT6, BT7),
insert(65, BT7, BT8),
isBST(BT8),
inorder(BT8, L1), 
after_insertion_list4(L1), 
delete(99, BT8, BT9), 
delete(63, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list4(L2). 
build_bst5(BT):- BT = node(71, node(1, empty, node(59, node(7, node(3, empty, empty), node(29, node(8, empty, node(17, node(14, node(10, empty, empty), empty), node(18, empty, node(28, node(22, node(19, empty, empty), empty), empty)))), node(40, node(32, node(31, empty, empty), node(34, node(33, empty, empty), node(38, empty, empty))), node(51, node(46, node(45, node(44, empty, empty), empty), node(50, node(49, empty, empty), empty)), node(55, node(52, empty, empty), node(56, empty, empty)))))), node(69, node(60, empty, node(67, node(61, empty, empty), empty)), empty))), node(99, node(79, node(73, empty, empty), node(92, node(89, node(83, empty, node(84, empty, node(88, empty, empty))), node(90, empty, empty)), node(93, empty, empty))), empty)).
after_insertion_list5(L):- L = [1, 3, 7, 8, 10, 14, 17, 18, 19, 20, 22, 26, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 43, 44, 45, 46, 48, 49, 50, 51, 52, 55, 56, 59, 60, 61, 64, 67, 69, 71, 73, 79, 82, 83, 84, 88, 89, 90, 92, 93, 98, 99].
after_deletion_list5(L):- L = [1, 3, 7, 8, 10, 14, 17, 19, 20, 22, 26, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 43, 44, 45, 46, 48, 49, 50, 51, 52, 55, 56, 59, 60, 61, 64, 67, 69, 71, 73, 79, 82, 83, 84, 88, 89, 90, 92, 93, 98, 99].
run_bst_test5:- build_bst5(BT0),
not(lookup(39, BT0)),
not(lookup(30, BT0)),
not(lookup(98, BT0)),
not(lookup(43, BT0)),
not(lookup(26, BT0)),
not(lookup(82, BT0)),
not(lookup(64, BT0)),
not(lookup(48, BT0)),
not(lookup(20, BT0)),
lookup(18, BT0),
isBST(BT0),
insert(39, BT0, BT1),
insert(30, BT1, BT2),
insert(98, BT2, BT3),
insert(43, BT3, BT4),
insert(26, BT4, BT5),
insert(82, BT5, BT6),
insert(64, BT6, BT7),
insert(48, BT7, BT8),
insert(20, BT8, BT9),
isBST(BT9),
inorder(BT9, L1), 
after_insertion_list5(L1), 
delete(18, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list5(L2). 
build_bst6(BT):- BT = node(74, node(58, node(33, node(11, node(6, empty, node(9, empty, empty)), node(24, node(22, node(14, empty, node(20, empty, empty)), empty), empty)), node(56, node(44, node(36, empty, node(41, node(40, empty, empty), empty)), node(55, node(54, empty, empty), empty)), node(57, empty, empty))), node(59, empty, node(73, node(67, node(62, empty, empty), node(72, empty, empty)), empty))), node(79, node(77, empty, empty), node(87, node(80, empty, node(83, node(82, empty, empty), node(85, node(84, empty, empty), empty))), node(94, node(91, node(88, empty, node(90, empty, empty)), node(92, empty, node(93, empty, empty))), node(97, node(96, empty, empty), node(98, empty, empty)))))).
after_insertion_list6(L):- L = [6, 9, 11, 14, 16, 20, 21, 22, 24, 33, 36, 40, 41, 44, 52, 54, 55, 56, 57, 58, 59, 62, 65, 67, 72, 73, 74, 77, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98].
after_deletion_list6(L):- L = [9, 11, 14, 16, 20, 21, 22, 33, 36, 40, 41, 44, 52, 54, 56, 57, 58, 59, 62, 65, 67, 72, 73, 74, 77, 79, 80, 83, 85, 87, 88, 90, 91, 92, 93, 94, 96, 98].
run_bst_test6:- build_bst6(BT0),
not(lookup(65, BT0)),
not(lookup(52, BT0)),
not(lookup(16, BT0)),
not(lookup(21, BT0)),
lookup(6, BT0),
lookup(97, BT0),
lookup(82, BT0),
lookup(55, BT0),
lookup(24, BT0),
lookup(84, BT0),
isBST(BT0),
insert(65, BT0, BT1),
insert(52, BT1, BT2),
insert(16, BT2, BT3),
insert(21, BT3, BT4),
isBST(BT4),
inorder(BT4, L1), 
after_insertion_list6(L1), 
delete(6, BT4, BT5), 
delete(97, BT5, BT6), 
delete(82, BT6, BT7), 
delete(55, BT7, BT8), 
delete(24, BT8, BT9), 
delete(84, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list6(L2). 
build_bst7(BT):- BT = node(2, empty, node(70, node(66, node(16, node(11, node(4, empty, node(7, empty, empty)), empty), node(45, node(23, node(21, node(20, empty, empty), empty), node(27, node(25, empty, empty), node(37, node(31, empty, node(35, empty, empty)), node(41, empty, empty)))), node(60, node(54, empty, empty), node(61, empty, node(63, empty, empty))))), empty), node(71, empty, node(81, node(76, empty, node(79, node(78, empty, empty), empty)), node(91, node(84, empty, empty), node(93, empty, node(98, empty, empty))))))).
after_insertion_list7(L):- L = [2, 4, 7, 11, 16, 20, 21, 23, 25, 27, 31, 35, 36, 37, 38, 41, 45, 48, 54, 59, 60, 61, 63, 64, 66, 70, 71, 76, 78, 79, 81, 84, 86, 89, 91, 93, 96, 98].
after_deletion_list7(L):- L = [2, 4, 7, 11, 16, 20, 21, 23, 25, 31, 35, 36, 37, 38, 41, 45, 48, 54, 59, 60, 61, 63, 64, 66, 70, 71, 78, 79, 81, 84, 86, 89, 91, 93, 96, 98].
run_bst_test7:- build_bst7(BT0),
not(lookup(86, BT0)),
not(lookup(96, BT0)),
not(lookup(48, BT0)),
not(lookup(36, BT0)),
not(lookup(64, BT0)),
not(lookup(38, BT0)),
not(lookup(89, BT0)),
not(lookup(59, BT0)),
lookup(27, BT0),
lookup(76, BT0),
isBST(BT0),
insert(86, BT0, BT1),
insert(96, BT1, BT2),
insert(48, BT2, BT3),
insert(36, BT3, BT4),
insert(64, BT4, BT5),
insert(38, BT5, BT6),
insert(89, BT6, BT7),
insert(59, BT7, BT8),
isBST(BT8),
inorder(BT8, L1), 
after_insertion_list7(L1), 
delete(27, BT8, BT9), 
delete(76, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list7(L2). 
build_bst8(BT):- BT = node(29, node(19, node(18, node(17, node(3, empty, node(10, empty, node(12, empty, empty))), empty), empty), node(26, node(20, empty, node(25, empty, empty)), node(28, node(27, empty, empty), empty))), node(57, node(35, node(31, empty, empty), node(45, node(37, empty, node(44, node(42, empty, empty), empty)), node(56, node(47, empty, node(51, node(49, empty, empty), node(53, empty, empty))), empty))), node(84, node(78, node(64, node(58, empty, node(59, empty, node(61, empty, empty))), node(70, node(68, empty, empty), node(74, node(71, empty, empty), empty))), node(80, node(79, empty, empty), node(81, empty, node(82, empty, empty)))), node(85, empty, node(93, node(86, empty, empty), node(97, empty, empty)))))).
after_insertion_list8(L):- L = [3, 6, 10, 12, 17, 18, 19, 20, 25, 26, 27, 28, 29, 31, 35, 37, 42, 44, 45, 47, 49, 51, 53, 56, 57, 58, 59, 61, 62, 64, 68, 70, 71, 72, 74, 75, 78, 79, 80, 81, 82, 84, 85, 86, 93, 97].
after_deletion_list8(L):- L = [3, 6, 10, 12, 17, 18, 19, 20, 25, 27, 28, 29, 31, 35, 37, 42, 44, 45, 47, 51, 53, 56, 58, 59, 61, 62, 64, 68, 70, 71, 72, 75, 78, 79, 80, 81, 85, 86, 93, 97].
run_bst_test8:- build_bst8(BT0),
not(lookup(75, BT0)),
not(lookup(62, BT0)),
not(lookup(72, BT0)),
not(lookup(6, BT0)),
lookup(84, BT0),
lookup(82, BT0),
lookup(74, BT0),
lookup(57, BT0),
lookup(26, BT0),
lookup(49, BT0),
isBST(BT0),
insert(75, BT0, BT1),
insert(62, BT1, BT2),
insert(72, BT2, BT3),
insert(6, BT3, BT4),
isBST(BT4),
inorder(BT4, L1), 
after_insertion_list8(L1), 
delete(84, BT4, BT5), 
delete(82, BT5, BT6), 
delete(74, BT6, BT7), 
delete(57, BT7, BT8), 
delete(26, BT8, BT9), 
delete(49, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list8(L2). 
build_bst9(BT):- BT = node(61, node(56, node(18, node(9, node(1, empty, empty), node(14, node(13, node(11, empty, empty), empty), node(17, empty, empty))), node(31, node(27, node(24, node(23, empty, empty), node(26, node(25, empty, empty), empty)), node(28, empty, empty)), node(44, node(36, node(35, node(33, empty, empty), empty), node(41, empty, empty)), node(47, node(45, empty, empty), node(50, node(48, empty, empty), node(54, node(53, empty, empty), empty)))))), node(58, node(57, empty, empty), node(60, empty, empty))), node(93, node(90, node(65, node(63, empty, empty), node(75, node(71, empty, node(73, empty, empty)), node(83, node(79, node(77, empty, empty), node(82, empty, empty)), node(87, node(85, empty, empty), empty)))), empty), node(95, empty, node(96, empty, node(97, empty, empty))))).
after_insertion_list9(L):- L = [1, 9, 11, 12, 13, 14, 17, 18, 20, 23, 24, 25, 26, 27, 28, 31, 32, 33, 35, 36, 37, 39, 41, 43, 44, 45, 47, 48, 50, 53, 54, 56, 57, 58, 60, 61, 63, 65, 71, 73, 75, 77, 79, 82, 83, 85, 87, 88, 90, 93, 95, 96, 97].
after_deletion_list9(L):- L = [1, 9, 11, 12, 13, 14, 17, 18, 20, 23, 24, 25, 26, 27, 28, 31, 32, 33, 35, 36, 37, 39, 41, 43, 44, 45, 47, 48, 50, 53, 54, 56, 57, 58, 60, 61, 65, 71, 73, 75, 77, 79, 82, 83, 87, 88, 90, 93, 95, 96, 97].
run_bst_test9:- build_bst9(BT0),
not(lookup(32, BT0)),
not(lookup(88, BT0)),
not(lookup(12, BT0)),
not(lookup(20, BT0)),
not(lookup(43, BT0)),
not(lookup(37, BT0)),
not(lookup(39, BT0)),
lookup(85, BT0),
lookup(63, BT0),
isBST(BT0),
insert(32, BT0, BT1),
insert(88, BT1, BT2),
insert(12, BT2, BT3),
insert(20, BT3, BT4),
insert(43, BT4, BT5),
insert(37, BT5, BT6),
insert(39, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list9(L1), 
delete(85, BT7, BT8), 
delete(63, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list9(L2). 
build_bst10(BT):- BT = node(68, node(33, node(19, node(12, node(7, node(6, node(2, empty, node(4, empty, empty)), empty), node(11, empty, empty)), node(14, empty, node(16, empty, empty))), node(20, empty, node(26, node(24, node(21, empty, empty), empty), node(27, empty, node(29, empty, node(32, empty, empty)))))), node(66, node(51, node(41, node(38, node(37, empty, empty), empty), node(43, empty, node(48, empty, empty))), node(58, empty, node(64, node(61, empty, empty), empty))), empty)), node(96, node(83, node(82, node(77, node(76, node(69, empty, empty), empty), node(81, node(78, empty, empty), empty)), empty), node(92, node(90, node(84, empty, empty), empty), node(93, empty, node(95, empty, empty)))), node(99, node(97, empty, empty), empty))).
after_insertion_list10(L):- L = [2, 4, 6, 7, 11, 12, 13, 14, 16, 18, 19, 20, 21, 24, 26, 27, 29, 32, 33, 37, 38, 41, 43, 45, 48, 51, 56, 58, 61, 64, 66, 68, 69, 70, 76, 77, 78, 81, 82, 83, 84, 90, 92, 93, 95, 96, 97, 99].
after_deletion_list10(L):- L = [2, 4, 6, 7, 12, 13, 14, 16, 18, 19, 20, 21, 24, 26, 27, 29, 32, 33, 37, 38, 41, 43, 45, 48, 51, 56, 58, 61, 66, 69, 70, 76, 77, 81, 82, 83, 84, 90, 92, 93, 95, 96, 97, 99].
run_bst_test10:- build_bst10(BT0),
not(lookup(56, BT0)),
not(lookup(13, BT0)),
not(lookup(45, BT0)),
not(lookup(70, BT0)),
not(lookup(18, BT0)),
lookup(11, BT0),
lookup(64, BT0),
lookup(78, BT0),
lookup(68, BT0),
isBST(BT0),
insert(56, BT0, BT1),
insert(13, BT1, BT2),
insert(45, BT2, BT3),
insert(70, BT3, BT4),
insert(18, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list10(L1), 
delete(11, BT5, BT6), 
delete(64, BT6, BT7), 
delete(78, BT7, BT8), 
delete(68, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list10(L2). 
build_bst11(BT):- BT = node(27, node(5, node(3, empty, empty), node(8, node(6, empty, empty), node(15, node(9, empty, empty), node(16, empty, node(21, empty, empty))))), node(97, node(91, node(65, node(57, node(50, empty, node(52, node(51, empty, empty), node(55, empty, empty))), node(61, node(60, empty, empty), node(64, empty, empty))), node(84, node(71, node(69, node(67, node(66, empty, empty), empty), empty), node(73, empty, node(75, empty, node(79, empty, empty)))), node(85, empty, empty))), node(93, node(92, empty, empty), node(96, empty, empty))), empty)).
after_insertion_list11(L):- L = [3, 5, 6, 8, 9, 15, 16, 17, 21, 24, 27, 29, 43, 50, 51, 52, 55, 56, 57, 58, 60, 61, 64, 65, 66, 67, 69, 71, 73, 75, 79, 81, 84, 85, 91, 92, 93, 96, 97].
after_deletion_list11(L):- L = [3, 5, 6, 8, 9, 15, 16, 17, 21, 24, 27, 29, 43, 50, 51, 52, 55, 56, 57, 58, 60, 61, 64, 65, 66, 67, 69, 71, 73, 75, 79, 81, 84, 91, 93, 96, 97].
run_bst_test11:- build_bst11(BT0),
not(lookup(58, BT0)),
not(lookup(43, BT0)),
not(lookup(17, BT0)),
not(lookup(56, BT0)),
not(lookup(24, BT0)),
not(lookup(29, BT0)),
not(lookup(81, BT0)),
lookup(85, BT0),
lookup(92, BT0),
isBST(BT0),
insert(58, BT0, BT1),
insert(43, BT1, BT2),
insert(17, BT2, BT3),
insert(56, BT3, BT4),
insert(24, BT4, BT5),
insert(29, BT5, BT6),
insert(81, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list11(L1), 
delete(85, BT7, BT8), 
delete(92, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list11(L2). 
build_bst12(BT):- BT = node(32, node(3, node(2, empty, empty), node(28, node(24, node(8, node(5, empty, empty), node(20, node(16, node(14, node(12, node(10, empty, empty), node(13, empty, empty)), node(15, empty, empty)), node(18, node(17, empty, empty), empty)), empty)), empty), node(31, empty, empty))), node(88, node(74, node(58, node(40, node(34, node(33, empty, empty), node(35, empty, node(38, empty, node(39, empty, empty)))), node(54, node(51, empty, empty), node(56, empty, empty))), node(72, node(65, node(62, node(59, empty, node(61, empty, empty)), node(63, empty, empty)), node(66, empty, empty)), node(73, empty, empty))), node(82, node(79, node(78, node(77, empty, empty), empty), empty), node(83, empty, node(85, empty, node(87, empty, empty))))), node(93, node(92, node(91, empty, empty), empty), node(97, empty, node(99, empty, empty))))).
after_insertion_list12(L):- L = [2, 3, 5, 8, 10, 12, 13, 14, 15, 16, 17, 18, 20, 24, 28, 29, 31, 32, 33, 34, 35, 38, 39, 40, 51, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 70, 71, 72, 73, 74, 77, 78, 79, 82, 83, 85, 86, 87, 88, 91, 92, 93, 97, 99].
after_deletion_list12(L):- L = [2, 3, 5, 8, 10, 12, 13, 14, 15, 16, 17, 18, 20, 24, 28, 29, 31, 32, 33, 34, 38, 39, 40, 51, 54, 56, 58, 59, 60, 61, 62, 63, 66, 70, 71, 72, 73, 74, 77, 78, 82, 83, 85, 86, 87, 88, 91, 93, 99].
run_bst_test12:- build_bst12(BT0),
not(lookup(71, BT0)),
not(lookup(86, BT0)),
not(lookup(60, BT0)),
not(lookup(29, BT0)),
not(lookup(70, BT0)),
lookup(35, BT0),
lookup(79, BT0),
lookup(97, BT0),
lookup(65, BT0),
lookup(92, BT0),
isBST(BT0),
insert(71, BT0, BT1),
insert(86, BT1, BT2),
insert(60, BT2, BT3),
insert(29, BT3, BT4),
insert(70, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list12(L1), 
delete(35, BT5, BT6), 
delete(79, BT6, BT7), 
delete(97, BT7, BT8), 
delete(65, BT8, BT9), 
delete(92, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list12(L2). 
build_bst13(BT):- BT = node(55, node(35, node(28, node(24, node(16, node(2, empty, node(5, node(3, empty, node(4, empty, empty)), node(10, empty, empty))), node(18, empty, empty)), node(25, empty, node(27, empty, empty))), node(29, empty, node(31, empty, node(34, node(33, empty, empty), empty)))), node(40, empty, node(53, node(42, empty, node(49, node(45, node(44, empty, empty), node(46, empty, node(47, empty, empty))), empty)), empty))), node(64, node(60, node(59, empty, empty), node(63, empty, empty)), node(74, node(73, node(69, node(67, empty, empty), empty), empty), node(79, node(78, empty, empty), node(89, node(81, empty, node(86, node(83, empty, node(85, empty, empty)), empty)), node(98, node(93, empty, node(96, empty, empty)), empty)))))).
after_insertion_list13(L):- L = [2, 3, 4, 5, 8, 10, 15, 16, 18, 22, 24, 25, 27, 28, 29, 31, 33, 34, 35, 40, 42, 44, 45, 46, 47, 49, 53, 55, 59, 60, 63, 64, 67, 69, 73, 74, 78, 79, 80, 81, 83, 85, 86, 89, 92, 93, 96, 98].
after_deletion_list13(L):- L = [2, 3, 5, 8, 10, 15, 16, 18, 22, 25, 27, 28, 29, 31, 33, 34, 35, 40, 42, 44, 45, 46, 47, 49, 53, 55, 59, 60, 63, 64, 67, 73, 74, 79, 80, 83, 85, 86, 89, 92, 93, 96, 98].
run_bst_test13:- build_bst13(BT0),
not(lookup(22, BT0)),
not(lookup(8, BT0)),
not(lookup(15, BT0)),
not(lookup(80, BT0)),
not(lookup(92, BT0)),
lookup(78, BT0),
lookup(69, BT0),
lookup(24, BT0),
lookup(81, BT0),
lookup(4, BT0),
isBST(BT0),
insert(22, BT0, BT1),
insert(8, BT1, BT2),
insert(15, BT2, BT3),
insert(80, BT3, BT4),
insert(92, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list13(L1), 
delete(78, BT5, BT6), 
delete(69, BT6, BT7), 
delete(24, BT7, BT8), 
delete(81, BT8, BT9), 
delete(4, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list13(L2). 
build_bst14(BT):- BT = node(33, node(30, node(8, node(3, empty, node(5, empty, empty)), node(10, node(9, empty, empty), node(21, node(11, empty, node(19, node(14, node(13, empty, empty), node(18, empty, empty)), node(20, empty, empty))), node(27, empty, node(28, empty, empty))))), node(31, empty, empty)), node(57, node(39, node(36, node(34, empty, empty), empty), node(42, empty, node(52, node(49, node(45, empty, node(47, node(46, empty, empty), empty)), node(51, empty, empty)), node(55, empty, empty)))), node(95, node(63, node(62, empty, empty), node(68, node(64, empty, empty), node(84, node(77, node(74, node(71, empty, empty), node(76, empty, empty)), node(78, empty, node(83, empty, empty))), node(87, empty, node(89, empty, node(94, empty, empty)))))), node(98, empty, node(99, empty, empty))))).
after_insertion_list14(L):- L = [3, 5, 8, 9, 10, 11, 13, 14, 17, 18, 19, 20, 21, 27, 28, 29, 30, 31, 33, 34, 36, 39, 42, 43, 45, 46, 47, 49, 51, 52, 55, 57, 62, 63, 64, 68, 71, 72, 74, 76, 77, 78, 83, 84, 87, 89, 94, 95, 98, 99].
after_deletion_list14(L):- L = [5, 8, 9, 10, 11, 13, 14, 17, 18, 19, 21, 27, 28, 29, 30, 31, 33, 34, 36, 39, 42, 43, 45, 46, 49, 51, 52, 55, 57, 62, 63, 68, 71, 72, 74, 77, 78, 83, 84, 87, 89, 94, 95, 98, 99].
run_bst_test14:- build_bst14(BT0),
not(lookup(43, BT0)),
not(lookup(17, BT0)),
not(lookup(29, BT0)),
not(lookup(72, BT0)),
lookup(64, BT0),
lookup(3, BT0),
lookup(20, BT0),
lookup(47, BT0),
lookup(76, BT0),
isBST(BT0),
insert(43, BT0, BT1),
insert(17, BT1, BT2),
insert(29, BT2, BT3),
insert(72, BT3, BT4),
isBST(BT4),
inorder(BT4, L1), 
after_insertion_list14(L1), 
delete(64, BT4, BT5), 
delete(3, BT5, BT6), 
delete(20, BT6, BT7), 
delete(47, BT7, BT8), 
delete(76, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list14(L2). 
build_bst15(BT):- BT = node(12, node(8, node(1, empty, node(6, empty, node(7, empty, empty))), node(9, empty, node(10, empty, empty))), node(78, node(16, node(14, empty, empty), node(67, node(36, node(28, node(20, node(19, node(17, empty, empty), empty), node(23, empty, node(24, empty, empty))), node(35, node(29, empty, node(33, empty, empty)), empty)), node(37, empty, node(60, node(45, node(41, node(38, empty, empty), empty), node(56, node(51, node(49, empty, empty), empty), node(58, empty, empty))), node(61, empty, node(65, empty, node(66, empty, empty)))))), node(69, empty, node(77, node(75, empty, empty), empty)))), node(91, node(84, node(79, empty, node(80, empty, empty)), node(89, node(87, empty, node(88, empty, empty)), empty)), node(99, node(92, empty, empty), empty)))).
after_insertion_list15(L):- L = [1, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 23, 24, 28, 29, 33, 35, 36, 37, 38, 41, 45, 46, 49, 51, 56, 58, 60, 61, 62, 64, 65, 66, 67, 69, 70, 75, 77, 78, 79, 80, 82, 84, 85, 87, 88, 89, 91, 92, 96, 99].
after_deletion_list15(L):- L = [1, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 23, 24, 28, 33, 35, 36, 37, 38, 41, 45, 46, 49, 51, 56, 58, 60, 61, 62, 64, 65, 67, 69, 70, 75, 77, 78, 79, 82, 84, 85, 87, 88, 89, 91, 92, 96, 99].
run_bst_test15:- build_bst15(BT0),
not(lookup(96, BT0)),
not(lookup(64, BT0)),
not(lookup(85, BT0)),
not(lookup(46, BT0)),
not(lookup(82, BT0)),
not(lookup(62, BT0)),
not(lookup(70, BT0)),
lookup(66, BT0),
lookup(29, BT0),
lookup(80, BT0),
isBST(BT0),
insert(96, BT0, BT1),
insert(64, BT1, BT2),
insert(85, BT2, BT3),
insert(46, BT3, BT4),
insert(82, BT4, BT5),
insert(62, BT5, BT6),
insert(70, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list15(L1), 
delete(66, BT7, BT8), 
delete(29, BT8, BT9), 
delete(80, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list15(L2). 
build_bst16(BT):- BT = node(73, node(32, node(5, node(3, node(2, empty, empty), empty), node(23, node(15, node(8, empty, node(11, empty, node(12, empty, empty))), node(22, node(20, node(18, empty, empty), empty), empty)), node(26, empty, node(31, empty, empty)))), node(42, node(36, node(34, empty, node(35, empty, empty)), node(37, empty, node(39, empty, empty))), node(47, node(44, node(43, empty, empty), empty), node(67, node(55, node(54, node(48, empty, empty), empty), empty), empty)))), node(74, empty, node(76, node(75, empty, empty), node(90, node(88, node(77, empty, node(87, node(78, empty, empty), empty)), empty), node(95, node(93, empty, empty), node(98, node(96, empty, empty), node(99, empty, empty))))))).
after_insertion_list16(L):- L = [2, 3, 5, 8, 11, 12, 14, 15, 18, 20, 22, 23, 26, 31, 32, 34, 35, 36, 37, 39, 42, 43, 44, 47, 48, 50, 54, 55, 63, 67, 73, 74, 75, 76, 77, 78, 84, 87, 88, 90, 93, 95, 96, 98, 99].
after_deletion_list16(L):- L = [2, 5, 8, 11, 12, 14, 15, 18, 20, 22, 26, 31, 32, 34, 36, 39, 42, 43, 44, 47, 48, 50, 54, 55, 63, 67, 73, 74, 75, 76, 77, 78, 84, 87, 88, 90, 93, 95, 96, 99].
run_bst_test16:- build_bst16(BT0),
not(lookup(84, BT0)),
not(lookup(63, BT0)),
not(lookup(50, BT0)),
not(lookup(14, BT0)),
lookup(35, BT0),
lookup(23, BT0),
lookup(98, BT0),
lookup(37, BT0),
lookup(3, BT0),
isBST(BT0),
insert(84, BT0, BT1),
insert(63, BT1, BT2),
insert(50, BT2, BT3),
insert(14, BT3, BT4),
isBST(BT4),
inorder(BT4, L1), 
after_insertion_list16(L1), 
delete(35, BT4, BT5), 
delete(23, BT5, BT6), 
delete(98, BT6, BT7), 
delete(37, BT7, BT8), 
delete(3, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list16(L2). 
build_bst17(BT):- BT = node(55, node(44, node(29, node(21, node(20, node(1, empty, node(9, node(4, empty, empty), node(18, node(10, empty, empty), empty))), empty), node(27, node(25, empty, empty), empty)), node(40, node(38, node(31, empty, empty), empty), node(43, empty, empty))), node(51, node(46, empty, node(48, empty, empty)), node(52, empty, node(53, empty, empty)))), node(62, node(59, empty, empty), node(81, node(76, node(75, node(68, node(65, node(63, empty, node(64, empty, empty)), empty), node(72, node(70, empty, empty), empty)), empty), empty), node(85, node(84, empty, empty), node(90, node(88, empty, empty), node(95, empty, node(97, empty, empty))))))).
after_insertion_list17(L):- L = [1, 4, 7, 9, 10, 18, 20, 21, 22, 25, 27, 29, 31, 38, 40, 41, 43, 44, 46, 48, 51, 52, 53, 54, 55, 57, 59, 62, 63, 64, 65, 68, 70, 72, 75, 76, 81, 84, 85, 88, 90, 95, 97].
after_deletion_list17(L):- L = [1, 4, 7, 9, 10, 18, 20, 22, 25, 29, 31, 38, 40, 41, 43, 44, 46, 48, 51, 53, 54, 55, 57, 59, 62, 64, 65, 68, 70, 72, 76, 81, 84, 85, 88, 90, 95, 97].
run_bst_test17:- build_bst17(BT0),
not(lookup(22, BT0)),
not(lookup(57, BT0)),
not(lookup(7, BT0)),
not(lookup(54, BT0)),
not(lookup(41, BT0)),
lookup(52, BT0),
lookup(21, BT0),
lookup(27, BT0),
lookup(75, BT0),
lookup(63, BT0),
isBST(BT0),
insert(22, BT0, BT1),
insert(57, BT1, BT2),
insert(7, BT2, BT3),
insert(54, BT3, BT4),
insert(41, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list17(L1), 
delete(52, BT5, BT6), 
delete(21, BT6, BT7), 
delete(27, BT7, BT8), 
delete(75, BT8, BT9), 
delete(63, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list17(L2). 
build_bst18(BT):- BT = node(43, node(27, node(3, node(1, empty, empty), node(5, node(4, empty, empty), node(16, node(9, node(8, empty, empty), node(14, empty, empty)), node(21, node(19, empty, node(20, empty, empty)), node(24, empty, node(26, empty, empty)))))), node(32, node(30, node(28, empty, empty), node(31, empty, empty)), node(34, node(33, empty, empty), node(39, empty, empty)))), node(46, empty, node(61, node(57, node(48, empty, empty), node(58, empty, empty)), node(91, node(87, node(65, node(62, empty, empty), node(72, empty, node(79, node(76, empty, empty), node(81, empty, empty)))), node(90, empty, empty)), node(94, node(93, node(92, empty, empty), empty), node(95, empty, node(97, empty, empty))))))).
after_insertion_list18(L):- L = [1, 3, 4, 5, 8, 9, 14, 16, 18, 19, 20, 21, 24, 26, 27, 28, 30, 31, 32, 33, 34, 39, 43, 46, 48, 50, 54, 57, 58, 60, 61, 62, 65, 72, 76, 79, 81, 87, 88, 90, 91, 92, 93, 94, 95, 97].
after_deletion_list18(L):- L = [1, 3, 4, 5, 8, 9, 14, 16, 18, 19, 20, 26, 27, 28, 30, 31, 32, 33, 34, 39, 43, 46, 48, 50, 54, 57, 58, 60, 61, 62, 65, 76, 79, 81, 88, 91, 92, 93, 94, 95, 97].
run_bst_test18:- build_bst18(BT0),
not(lookup(88, BT0)),
not(lookup(54, BT0)),
not(lookup(50, BT0)),
not(lookup(60, BT0)),
not(lookup(18, BT0)),
lookup(24, BT0),
lookup(21, BT0),
lookup(87, BT0),
lookup(72, BT0),
lookup(90, BT0),
isBST(BT0),
insert(88, BT0, BT1),
insert(54, BT1, BT2),
insert(50, BT2, BT3),
insert(60, BT3, BT4),
insert(18, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list18(L1), 
delete(24, BT5, BT6), 
delete(21, BT6, BT7), 
delete(87, BT7, BT8), 
delete(72, BT8, BT9), 
delete(90, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list18(L2). 
build_bst19(BT):- BT = node(7, node(4, node(2, empty, empty), node(5, empty, empty)), node(12, node(10, empty, node(11, empty, empty)), node(55, node(14, empty, node(51, node(41, node(38, node(35, node(16, empty, node(17, empty, node(26, node(21, empty, node(24, empty, empty)), node(28, empty, empty)))), empty), node(39, empty, empty)), node(45, node(42, empty, empty), node(46, empty, node(50, node(49, node(48, empty, empty), empty), empty)))), node(54, node(52, empty, empty), empty))), node(79, node(59, node(57, node(56, empty, empty), empty), node(66, empty, node(68, empty, node(71, empty, node(75, empty, empty))))), node(81, empty, node(84, empty, node(92, node(87, empty, empty), node(98, node(93, empty, empty), empty)))))))).
after_insertion_list19(L):- L = [2, 4, 5, 7, 10, 11, 12, 14, 16, 17, 20, 21, 24, 25, 26, 28, 29, 30, 35, 38, 39, 41, 42, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 66, 68, 71, 74, 75, 79, 81, 84, 87, 92, 93, 98, 99].
after_deletion_list19(L):- L = [2, 4, 5, 7, 10, 11, 12, 14, 16, 17, 20, 21, 24, 25, 26, 28, 29, 30, 35, 38, 39, 41, 42, 45, 46, 49, 50, 51, 52, 54, 55, 57, 59, 66, 68, 71, 74, 75, 79, 81, 84, 87, 93, 98, 99].
run_bst_test19:- build_bst19(BT0),
not(lookup(30, BT0)),
not(lookup(99, BT0)),
not(lookup(74, BT0)),
not(lookup(25, BT0)),
not(lookup(29, BT0)),
not(lookup(20, BT0)),
lookup(48, BT0),
lookup(56, BT0),
lookup(92, BT0),
isBST(BT0),
insert(30, BT0, BT1),
insert(99, BT1, BT2),
insert(74, BT2, BT3),
insert(25, BT3, BT4),
insert(29, BT4, BT5),
insert(20, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list19(L1), 
delete(48, BT6, BT7), 
delete(56, BT7, BT8), 
delete(92, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list19(L2). 
build_bst20(BT):- BT = node(88, node(15, node(3, node(2, empty, empty), node(5, node(4, empty, empty), node(7, empty, node(9, empty, node(10, empty, empty))))), node(53, node(49, node(28, node(21, node(20, empty, empty), node(22, empty, node(23, empty, empty))), node(38, node(36, node(29, empty, node(35, node(33, node(31, empty, empty), empty), empty)), empty), empty)), node(52, empty, empty)), node(58, node(54, empty, node(56, node(55, empty, empty), empty)), node(77, node(68, node(62, node(59, empty, empty), node(63, empty, empty)), empty), node(79, empty, empty))))), node(99, node(90, empty, node(97, empty, node(98, empty, empty))), empty)).
after_insertion_list20(L):- L = [1, 2, 3, 4, 5, 7, 8, 9, 10, 15, 20, 21, 22, 23, 28, 29, 31, 33, 35, 36, 37, 38, 49, 52, 53, 54, 55, 56, 58, 59, 62, 63, 68, 77, 79, 80, 88, 90, 96, 97, 98, 99].
after_deletion_list20(L):- L = [1, 2, 3, 4, 5, 7, 8, 9, 10, 20, 21, 22, 23, 28, 29, 31, 33, 35, 36, 37, 38, 52, 53, 54, 55, 56, 58, 59, 62, 63, 68, 77, 79, 80, 90, 96, 97, 98].
run_bst_test20:- build_bst20(BT0),
not(lookup(96, BT0)),
not(lookup(1, BT0)),
not(lookup(8, BT0)),
not(lookup(80, BT0)),
not(lookup(37, BT0)),
lookup(49, BT0),
lookup(88, BT0),
lookup(15, BT0),
lookup(99, BT0),
isBST(BT0),
insert(96, BT0, BT1),
insert(1, BT1, BT2),
insert(8, BT2, BT3),
insert(80, BT3, BT4),
insert(37, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list20(L1), 
delete(49, BT5, BT6), 
delete(88, BT6, BT7), 
delete(15, BT7, BT8), 
delete(99, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list20(L2). 
build_bst21(BT):- BT = node(24, node(9, node(5, empty, empty), node(19, node(17, node(16, node(12, node(11, empty, empty), empty), empty), node(18, empty, empty)), node(22, empty, empty))), node(25, empty, node(41, node(31, node(26, empty, node(30, node(28, empty, empty), empty)), node(39, empty, empty)), node(81, node(61, node(45, empty, node(56, node(50, node(47, node(46, empty, empty), node(49, empty, empty)), node(52, node(51, empty, empty), empty)), node(58, empty, node(59, empty, empty)))), node(63, empty, node(76, node(75, node(66, empty, empty), empty), node(79, empty, empty)))), node(87, node(85, node(84, node(83, empty, empty), empty), empty), node(93, node(88, empty, node(90, node(89, empty, empty), node(91, empty, empty))), node(97, node(96, empty, empty), empty))))))).
after_insertion_list21(L):- L = [5, 9, 11, 12, 14, 16, 17, 18, 19, 22, 24, 25, 26, 28, 30, 31, 39, 41, 44, 45, 46, 47, 49, 50, 51, 52, 56, 58, 59, 61, 63, 66, 74, 75, 76, 79, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 96, 97, 98].
after_deletion_list21(L):- L = [5, 9, 11, 12, 14, 16, 17, 18, 19, 22, 24, 25, 26, 30, 31, 39, 41, 44, 45, 46, 47, 49, 50, 52, 56, 59, 61, 63, 66, 74, 75, 76, 79, 81, 84, 85, 88, 89, 90, 93, 96, 97, 98].
run_bst_test21:- build_bst21(BT0),
not(lookup(98, BT0)),
not(lookup(74, BT0)),
not(lookup(14, BT0)),
not(lookup(44, BT0)),
lookup(51, BT0),
lookup(58, BT0),
lookup(91, BT0),
lookup(28, BT0),
lookup(87, BT0),
lookup(83, BT0),
isBST(BT0),
insert(98, BT0, BT1),
insert(74, BT1, BT2),
insert(14, BT2, BT3),
insert(44, BT3, BT4),
isBST(BT4),
inorder(BT4, L1), 
after_insertion_list21(L1), 
delete(51, BT4, BT5), 
delete(58, BT5, BT6), 
delete(91, BT6, BT7), 
delete(28, BT7, BT8), 
delete(87, BT8, BT9), 
delete(83, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list21(L2). 
build_bst22(BT):- BT = node(14, node(2, empty, node(10, node(9, empty, empty), empty)), node(94, node(17, empty, node(76, node(40, node(24, node(22, node(19, empty, node(21, node(20, empty, empty), empty)), empty), node(35, node(33, node(32, node(29, empty, node(30, empty, node(31, empty, empty))), empty), node(34, empty, empty)), empty)), node(60, node(43, node(42, node(41, empty, empty), empty), node(57, node(56, node(51, node(46, empty, empty), empty), empty), empty)), node(63, node(62, empty, empty), node(67, node(64, empty, empty), node(69, node(68, empty, empty), node(75, node(73, empty, empty), empty)))))), node(83, node(82, node(81, node(79, empty, empty), empty), empty), node(84, empty, node(85, empty, node(88, empty, node(90, empty, empty))))))), node(97, node(95, empty, empty), node(99, node(98, empty, empty), empty)))).
after_insertion_list22(L):- L = [2, 4, 9, 10, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 46, 51, 52, 56, 57, 60, 62, 63, 64, 67, 68, 69, 73, 75, 76, 79, 81, 82, 83, 84, 85, 88, 90, 94, 95, 97, 98, 99].
after_deletion_list22(L):- L = [2, 4, 9, 10, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 29, 30, 31, 32, 33, 40, 41, 42, 43, 46, 51, 52, 56, 57, 60, 62, 63, 64, 67, 68, 69, 73, 75, 76, 79, 81, 83, 84, 85, 88, 94, 95, 97, 99].
run_bst_test22:- build_bst22(BT0),
not(lookup(13, BT0)),
not(lookup(16, BT0)),
not(lookup(15, BT0)),
not(lookup(4, BT0)),
not(lookup(52, BT0)),
lookup(98, BT0),
lookup(34, BT0),
lookup(35, BT0),
lookup(82, BT0),
lookup(90, BT0),
isBST(BT0),
insert(13, BT0, BT1),
insert(16, BT1, BT2),
insert(15, BT2, BT3),
insert(4, BT3, BT4),
insert(52, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list22(L1), 
delete(98, BT5, BT6), 
delete(34, BT6, BT7), 
delete(35, BT7, BT8), 
delete(82, BT8, BT9), 
delete(90, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list22(L2). 
build_bst23(BT):- BT = node(51, node(34, node(24, node(1, empty, node(12, node(3, empty, empty), node(16, empty, node(23, node(20, node(18, empty, empty), empty), empty)))), node(28, node(27, empty, empty), node(32, node(29, empty, empty), empty))), node(46, node(43, node(35, empty, node(41, empty, empty)), empty), node(48, node(47, empty, empty), node(50, empty, empty)))), node(85, node(74, node(60, node(57, node(56, node(53, node(52, empty, empty), empty), empty), node(58, empty, empty)), node(69, node(63, empty, empty), node(72, empty, empty))), node(77, empty, node(82, empty, empty))), node(89, node(86, empty, node(88, empty, empty)), node(98, node(91, empty, empty), empty)))).
after_insertion_list23(L):- L = [1, 3, 12, 16, 18, 20, 22, 23, 24, 27, 28, 29, 32, 34, 35, 41, 43, 46, 47, 48, 50, 51, 52, 53, 56, 57, 58, 60, 63, 69, 72, 74, 77, 80, 81, 82, 85, 86, 88, 89, 91, 98].
after_deletion_list23(L):- L = [1, 12, 16, 18, 20, 22, 23, 24, 27, 28, 29, 32, 35, 41, 43, 46, 47, 51, 52, 53, 56, 57, 58, 60, 69, 72, 74, 80, 81, 82, 85, 86, 88, 89, 91, 98].
run_bst_test23:- build_bst23(BT0),
not(lookup(81, BT0)),
not(lookup(22, BT0)),
not(lookup(80, BT0)),
lookup(63, BT0),
lookup(48, BT0),
lookup(3, BT0),
lookup(50, BT0),
lookup(34, BT0),
lookup(77, BT0),
isBST(BT0),
insert(81, BT0, BT1),
insert(22, BT1, BT2),
insert(80, BT2, BT3),
isBST(BT3),
inorder(BT3, L1), 
after_insertion_list23(L1), 
delete(63, BT3, BT4), 
delete(48, BT4, BT5), 
delete(3, BT5, BT6), 
delete(50, BT6, BT7), 
delete(34, BT7, BT8), 
delete(77, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list23(L2). 
build_bst24(BT):- BT = node(15, node(8, node(1, empty, node(2, empty, empty)), node(13, node(12, empty, empty), node(14, empty, empty))), node(92, node(87, node(77, node(76, node(40, node(36, node(33, node(28, node(17, empty, node(18, empty, node(26, empty, empty))), node(29, empty, empty)), node(35, node(34, empty, empty), empty)), node(37, empty, node(38, empty, empty))), node(62, node(54, node(48, node(46, node(42, empty, node(44, empty, empty)), empty), node(49, empty, empty)), node(61, empty, empty)), node(75, node(69, empty, empty), empty))), empty), node(78, empty, node(81, node(79, empty, empty), node(84, empty, empty)))), node(88, empty, empty)), empty)).
after_insertion_list24(L):- L = [1, 2, 8, 12, 13, 14, 15, 17, 18, 26, 28, 29, 33, 34, 35, 36, 37, 38, 40, 42, 44, 46, 48, 49, 54, 56, 61, 62, 69, 71, 75, 76, 77, 78, 79, 81, 84, 87, 88, 92, 94, 98, 99].
after_deletion_list24(L):- L = [1, 2, 8, 12, 13, 14, 15, 17, 18, 26, 28, 29, 33, 34, 35, 36, 37, 38, 40, 42, 46, 48, 49, 56, 61, 62, 69, 71, 76, 78, 79, 81, 84, 87, 88, 92, 94, 98, 99].
run_bst_test24:- build_bst24(BT0),
not(lookup(98, BT0)),
not(lookup(56, BT0)),
not(lookup(99, BT0)),
not(lookup(71, BT0)),
not(lookup(94, BT0)),
lookup(44, BT0),
lookup(54, BT0),
lookup(75, BT0),
lookup(77, BT0),
isBST(BT0),
insert(98, BT0, BT1),
insert(56, BT1, BT2),
insert(99, BT2, BT3),
insert(71, BT3, BT4),
insert(94, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list24(L1), 
delete(44, BT5, BT6), 
delete(54, BT6, BT7), 
delete(75, BT7, BT8), 
delete(77, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list24(L2). 
build_bst25(BT):- BT = node(76, node(53, node(25, node(10, node(6, node(4, empty, empty), node(9, empty, empty)), node(12, empty, node(20, node(17, node(16, node(13, empty, empty), empty), empty), empty))), node(41, node(31, node(29, node(27, node(26, empty, empty), empty), empty), node(39, node(38, empty, empty), node(40, empty, empty))), node(43, empty, node(46, node(45, empty, empty), node(48, empty, node(49, empty, empty)))))), node(63, node(58, node(57, empty, empty), node(60, empty, node(62, empty, empty))), node(66, empty, node(74, empty, empty)))), node(94, node(90, node(80, node(78, node(77, empty, empty), node(79, empty, empty)), node(87, node(83, empty, node(84, empty, empty)), empty)), node(91, empty, empty)), empty)).
after_insertion_list25(L):- L = [4, 6, 9, 10, 12, 13, 14, 16, 17, 20, 25, 26, 27, 29, 30, 31, 38, 39, 40, 41, 43, 45, 46, 48, 49, 53, 57, 58, 60, 61, 62, 63, 66, 74, 76, 77, 78, 79, 80, 82, 83, 84, 87, 89, 90, 91, 94].
after_deletion_list25(L):- L = [4, 6, 10, 12, 13, 14, 16, 17, 20, 25, 26, 27, 29, 30, 31, 40, 41, 43, 45, 46, 48, 49, 53, 57, 58, 60, 61, 62, 63, 74, 76, 77, 78, 80, 82, 83, 84, 87, 89, 90, 91, 94].
run_bst_test25:- build_bst25(BT0),
not(lookup(82, BT0)),
not(lookup(61, BT0)),
not(lookup(89, BT0)),
not(lookup(30, BT0)),
not(lookup(14, BT0)),
lookup(79, BT0),
lookup(66, BT0),
lookup(39, BT0),
lookup(9, BT0),
lookup(38, BT0),
isBST(BT0),
insert(82, BT0, BT1),
insert(61, BT1, BT2),
insert(89, BT2, BT3),
insert(30, BT3, BT4),
insert(14, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list25(L1), 
delete(79, BT5, BT6), 
delete(66, BT6, BT7), 
delete(39, BT7, BT8), 
delete(9, BT8, BT9), 
delete(38, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list25(L2). 
build_bst26(BT):- BT = node(73, node(42, node(38, node(21, node(9, node(2, empty, node(8, node(6, empty, empty), empty)), node(10, empty, node(18, node(16, node(11, empty, empty), empty), node(19, empty, empty)))), node(35, node(22, empty, node(27, empty, node(29, empty, node(30, empty, node(31, empty, node(33, empty, empty)))))), empty)), node(41, empty, empty)), node(57, node(45, node(44, empty, empty), node(54, node(53, node(46, empty, empty), empty), node(55, empty, empty))), node(67, node(60, node(59, empty, empty), node(65, empty, empty)), node(69, empty, node(71, empty, node(72, empty, empty)))))), node(94, node(91, node(85, node(78, empty, empty), node(87, empty, empty)), node(93, empty, empty)), node(96, node(95, empty, empty), empty))).
after_insertion_list26(L):- L = [2, 6, 8, 9, 10, 11, 14, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 33, 35, 36, 38, 40, 41, 42, 44, 45, 46, 53, 54, 55, 57, 59, 60, 62, 63, 65, 67, 69, 71, 72, 73, 78, 85, 87, 91, 93, 94, 95, 96, 98].
after_deletion_list26(L):- L = [2, 6, 8, 9, 10, 11, 14, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 33, 35, 36, 38, 40, 41, 42, 44, 45, 46, 53, 54, 55, 57, 59, 62, 63, 65, 67, 69, 71, 72, 73, 78, 85, 87, 91, 93, 94, 95, 96, 98].
run_bst_test26:- build_bst26(BT0),
not(lookup(28, BT0)),
not(lookup(63, BT0)),
not(lookup(36, BT0)),
not(lookup(40, BT0)),
not(lookup(62, BT0)),
not(lookup(98, BT0)),
not(lookup(14, BT0)),
not(lookup(26, BT0)),
lookup(60, BT0),
isBST(BT0),
insert(28, BT0, BT1),
insert(63, BT1, BT2),
insert(36, BT2, BT3),
insert(40, BT3, BT4),
insert(62, BT4, BT5),
insert(98, BT5, BT6),
insert(14, BT6, BT7),
insert(26, BT7, BT8),
isBST(BT8),
inorder(BT8, L1), 
after_insertion_list26(L1), 
delete(60, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list26(L2). 
build_bst27(BT):- BT = node(83, node(23, node(6, node(2, node(1, empty, empty), empty), node(18, node(7, empty, node(14, node(9, node(8, empty, empty), empty), node(17, empty, empty))), empty)), node(49, node(45, node(26, node(25, empty, empty), node(44, node(31, node(28, empty, empty), node(32, empty, node(35, node(33, empty, empty), node(41, empty, empty)))), empty)), node(47, empty, empty)), node(75, node(56, node(54, empty, empty), node(71, node(69, node(68, node(67, node(58, empty, node(66, empty, empty)), empty), empty), node(70, empty, empty)), node(74, empty, empty))), node(78, node(77, node(76, empty, empty), empty), empty)))), node(90, node(85, empty, node(89, empty, empty)), node(97, node(96, node(91, empty, empty), empty), node(98, empty, empty)))).
after_insertion_list27(L):- L = [1, 2, 6, 7, 8, 9, 14, 17, 18, 19, 23, 25, 26, 28, 31, 32, 33, 35, 37, 41, 44, 45, 47, 48, 49, 54, 56, 58, 62, 63, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 83, 85, 89, 90, 91, 96, 97, 98].
after_deletion_list27(L):- L = [1, 2, 6, 7, 8, 9, 14, 17, 18, 19, 23, 25, 26, 28, 31, 32, 33, 35, 37, 41, 44, 45, 47, 48, 49, 54, 56, 58, 62, 63, 66, 67, 69, 70, 74, 75, 76, 77, 78, 83, 85, 96, 97, 98].
run_bst_test27:- build_bst27(BT0),
not(lookup(48, BT0)),
not(lookup(62, BT0)),
not(lookup(63, BT0)),
not(lookup(19, BT0)),
not(lookup(37, BT0)),
lookup(89, BT0),
lookup(90, BT0),
lookup(71, BT0),
lookup(68, BT0),
lookup(91, BT0),
isBST(BT0),
insert(48, BT0, BT1),
insert(62, BT1, BT2),
insert(63, BT2, BT3),
insert(19, BT3, BT4),
insert(37, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list27(L1), 
delete(89, BT5, BT6), 
delete(90, BT6, BT7), 
delete(71, BT7, BT8), 
delete(68, BT8, BT9), 
delete(91, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list27(L2). 
build_bst28(BT):- BT = node(8, node(4, node(1, empty, empty), empty), node(13, node(10, empty, node(11, empty, empty)), node(93, node(57, node(33, node(16, node(15, node(14, empty, empty), empty), node(25, node(22, empty, empty), node(27, empty, empty))), node(53, node(52, node(43, node(35, empty, empty), node(49, node(44, empty, node(45, empty, empty)), empty)), empty), node(56, empty, empty))), node(78, node(64, node(58, empty, node(60, node(59, empty, empty), node(63, empty, empty))), node(68, node(67, empty, empty), node(75, node(73, empty, empty), empty))), node(89, empty, node(90, empty, node(92, empty, empty))))), node(98, node(95, empty, empty), node(99, empty, empty))))).
after_insertion_list28(L):- L = [1, 4, 8, 9, 10, 11, 13, 14, 15, 16, 22, 25, 27, 32, 33, 35, 37, 43, 44, 45, 49, 52, 53, 56, 57, 58, 59, 60, 63, 64, 67, 68, 73, 74, 75, 78, 81, 89, 90, 92, 93, 95, 98, 99].
after_deletion_list28(L):- L = [1, 4, 8, 9, 10, 11, 13, 14, 15, 16, 22, 25, 27, 32, 35, 37, 43, 44, 49, 53, 56, 57, 58, 60, 63, 64, 67, 68, 73, 74, 75, 78, 81, 89, 90, 92, 93, 95, 98, 99].
run_bst_test28:- build_bst28(BT0),
not(lookup(32, BT0)),
not(lookup(9, BT0)),
not(lookup(37, BT0)),
not(lookup(81, BT0)),
not(lookup(74, BT0)),
lookup(45, BT0),
lookup(59, BT0),
lookup(52, BT0),
lookup(33, BT0),
isBST(BT0),
insert(32, BT0, BT1),
insert(9, BT1, BT2),
insert(37, BT2, BT3),
insert(81, BT3, BT4),
insert(74, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list28(L1), 
delete(45, BT5, BT6), 
delete(59, BT6, BT7), 
delete(52, BT7, BT8), 
delete(33, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list28(L2). 
build_bst29(BT):- BT = node(39, node(6, node(1, empty, node(5, empty, empty)), node(17, node(16, node(7, empty, node(14, node(9, empty, empty), empty)), empty), node(34, node(20, node(19, empty, empty), node(22, empty, node(27, node(25, empty, empty), node(29, empty, empty)))), node(35, empty, empty)))), node(81, node(49, node(42, empty, node(48, empty, empty)), node(57, node(52, empty, node(54, empty, empty)), node(59, empty, node(72, node(60, empty, empty), node(80, empty, empty))))), node(92, node(84, node(83, empty, empty), node(85, empty, empty)), node(99, node(93, empty, node(96, empty, empty)), empty)))).
after_insertion_list29(L):- L = [1, 5, 6, 7, 9, 12, 14, 16, 17, 19, 20, 22, 25, 27, 29, 34, 35, 38, 39, 42, 48, 49, 52, 54, 57, 59, 60, 63, 65, 67, 72, 74, 80, 81, 83, 84, 85, 88, 92, 93, 94, 96, 99].
after_deletion_list29(L):- L = [1, 5, 6, 7, 9, 12, 14, 16, 17, 19, 20, 22, 25, 27, 29, 34, 35, 38, 39, 42, 48, 49, 54, 59, 60, 63, 65, 67, 72, 74, 80, 81, 83, 84, 85, 88, 92, 93, 94, 96, 99].
run_bst_test29:- build_bst29(BT0),
not(lookup(65, BT0)),
not(lookup(74, BT0)),
not(lookup(67, BT0)),
not(lookup(94, BT0)),
not(lookup(88, BT0)),
not(lookup(38, BT0)),
not(lookup(63, BT0)),
not(lookup(12, BT0)),
lookup(52, BT0),
lookup(57, BT0),
isBST(BT0),
insert(65, BT0, BT1),
insert(74, BT1, BT2),
insert(67, BT2, BT3),
insert(94, BT3, BT4),
insert(88, BT4, BT5),
insert(38, BT5, BT6),
insert(63, BT6, BT7),
insert(12, BT7, BT8),
isBST(BT8),
inorder(BT8, L1), 
after_insertion_list29(L1), 
delete(52, BT8, BT9), 
delete(57, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list29(L2). 
build_bst30(BT):- BT = node(23, node(22, node(12, node(9, node(6, empty, empty), node(11, empty, empty)), node(14, empty, node(17, empty, empty))), empty), node(94, node(48, node(39, node(31, node(24, empty, node(26, empty, empty)), node(33, empty, node(38, node(36, empty, empty), empty))), node(41, empty, node(42, empty, empty))), node(91, node(72, node(56, empty, node(59, node(58, empty, empty), node(60, empty, empty))), node(78, node(73, empty, node(74, empty, empty)), node(87, node(85, node(82, empty, empty), node(86, empty, empty)), node(90, node(88, empty, empty), empty)))), empty)), node(95, empty, empty))).
after_insertion_list30(L):- L = [6, 9, 10, 11, 12, 14, 17, 22, 23, 24, 26, 31, 33, 36, 37, 38, 39, 41, 42, 46, 48, 56, 58, 59, 60, 71, 72, 73, 74, 77, 78, 82, 83, 85, 86, 87, 88, 90, 91, 94, 95, 96].
after_deletion_list30(L):- L = [6, 9, 10, 11, 12, 14, 17, 22, 23, 24, 26, 31, 33, 36, 37, 38, 39, 41, 42, 46, 48, 59, 60, 71, 72, 73, 74, 77, 78, 82, 83, 85, 87, 88, 90, 91, 94, 95, 96].
run_bst_test30:- build_bst30(BT0),
not(lookup(83, BT0)),
not(lookup(10, BT0)),
not(lookup(71, BT0)),
not(lookup(77, BT0)),
not(lookup(37, BT0)),
not(lookup(46, BT0)),
not(lookup(96, BT0)),
lookup(86, BT0),
lookup(56, BT0),
lookup(58, BT0),
isBST(BT0),
insert(83, BT0, BT1),
insert(10, BT1, BT2),
insert(71, BT2, BT3),
insert(77, BT3, BT4),
insert(37, BT4, BT5),
insert(46, BT5, BT6),
insert(96, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list30(L1), 
delete(86, BT7, BT8), 
delete(56, BT8, BT9), 
delete(58, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list30(L2). 
build_bst31(BT):- BT = node(21, node(6, node(5, node(3, empty, empty), empty), node(15, node(9, empty, empty), node(17, node(16, empty, empty), empty))), node(45, node(37, node(35, node(23, empty, node(28, empty, node(33, node(32, node(30, empty, empty), empty), empty))), empty), node(41, empty, node(42, empty, empty))), node(85, node(81, node(56, node(46, empty, node(52, node(49, empty, empty), empty)), node(72, node(58, empty, node(67, empty, node(68, empty, empty))), node(75, empty, empty))), node(83, empty, empty)), node(91, node(87, empty, empty), node(99, node(97, node(94, empty, empty), node(98, empty, empty)), empty))))).
after_insertion_list31(L):- L = [1, 3, 5, 6, 9, 15, 16, 17, 21, 22, 23, 25, 28, 30, 32, 33, 35, 37, 41, 42, 45, 46, 49, 52, 56, 58, 60, 67, 68, 72, 74, 75, 81, 83, 85, 86, 87, 91, 94, 97, 98, 99].
after_deletion_list31(L):- L = [1, 5, 6, 9, 15, 16, 17, 22, 23, 25, 28, 30, 32, 33, 35, 37, 41, 42, 45, 46, 49, 52, 56, 58, 60, 68, 72, 74, 75, 81, 83, 86, 87, 91, 94, 97, 98, 99].
run_bst_test31:- build_bst31(BT0),
not(lookup(74, BT0)),
not(lookup(1, BT0)),
not(lookup(25, BT0)),
not(lookup(22, BT0)),
not(lookup(60, BT0)),
not(lookup(86, BT0)),
lookup(3, BT0),
lookup(85, BT0),
lookup(21, BT0),
lookup(67, BT0),
isBST(BT0),
insert(74, BT0, BT1),
insert(1, BT1, BT2),
insert(25, BT2, BT3),
insert(22, BT3, BT4),
insert(60, BT4, BT5),
insert(86, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list31(L1), 
delete(3, BT6, BT7), 
delete(85, BT7, BT8), 
delete(21, BT8, BT9), 
delete(67, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list31(L2). 
build_bst32(BT):- BT = node(87, node(77, node(47, node(15, node(14, node(13, node(9, empty, node(10, empty, empty)), empty), empty), node(24, node(21, node(19, node(16, empty, empty), empty), empty), node(41, node(25, empty, node(30, empty, node(40, empty, empty))), node(42, empty, node(44, empty, node(46, empty, empty)))))), node(67, node(55, empty, node(56, empty, node(66, node(59, empty, node(63, empty, empty)), empty))), node(76, empty, empty))), node(79, empty, node(80, empty, node(85, empty, empty)))), node(98, node(93, empty, node(95, empty, empty)), empty)).
after_insertion_list32(L):- L = [7, 9, 10, 13, 14, 15, 16, 18, 19, 21, 22, 24, 25, 30, 32, 40, 41, 42, 44, 46, 47, 50, 54, 55, 56, 59, 63, 66, 67, 76, 77, 78, 79, 80, 85, 87, 93, 95, 98].
after_deletion_list32(L):- L = [7, 9, 10, 13, 14, 15, 16, 18, 21, 22, 24, 25, 30, 32, 40, 41, 42, 44, 46, 47, 50, 54, 55, 56, 59, 63, 67, 76, 77, 78, 79, 80, 85, 87, 95, 98].
run_bst_test32:- build_bst32(BT0),
not(lookup(78, BT0)),
not(lookup(7, BT0)),
not(lookup(50, BT0)),
not(lookup(22, BT0)),
not(lookup(18, BT0)),
not(lookup(54, BT0)),
not(lookup(32, BT0)),
lookup(66, BT0),
lookup(93, BT0),
lookup(19, BT0),
isBST(BT0),
insert(78, BT0, BT1),
insert(7, BT1, BT2),
insert(50, BT2, BT3),
insert(22, BT3, BT4),
insert(18, BT4, BT5),
insert(54, BT5, BT6),
insert(32, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list32(L1), 
delete(66, BT7, BT8), 
delete(93, BT8, BT9), 
delete(19, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list32(L2). 
build_bst33(BT):- BT = node(7, node(3, empty, node(5, empty, node(6, empty, empty))), node(33, node(25, node(23, node(16, node(13, node(9, empty, empty), empty), node(19, node(18, empty, empty), empty)), empty), node(27, empty, node(32, node(29, empty, node(30, empty, empty)), empty))), node(97, node(36, node(34, empty, node(35, empty, empty)), node(66, node(64, node(60, node(46, node(45, empty, empty), node(48, empty, node(51, empty, node(58, node(56, empty, empty), empty)))), empty), empty), node(73, node(69, node(67, empty, empty), node(71, empty, empty)), node(85, node(84, node(81, node(79, empty, empty), empty), empty), node(96, node(87, empty, node(90, node(89, empty, empty), empty)), empty))))), node(98, empty, node(99, empty, empty))))).
after_insertion_list33(L):- L = [3, 4, 5, 6, 7, 9, 13, 16, 18, 19, 23, 25, 27, 29, 30, 32, 33, 34, 35, 36, 45, 46, 48, 51, 56, 58, 59, 60, 64, 66, 67, 69, 71, 73, 77, 79, 81, 84, 85, 87, 88, 89, 90, 96, 97, 98, 99].
after_deletion_list33(L):- L = [3, 4, 5, 6, 7, 9, 13, 19, 23, 25, 27, 30, 33, 34, 35, 36, 45, 46, 48, 51, 56, 58, 59, 64, 66, 67, 69, 71, 73, 77, 79, 84, 85, 87, 88, 89, 90, 96, 97, 98, 99].
run_bst_test33:- build_bst33(BT0),
not(lookup(59, BT0)),
not(lookup(88, BT0)),
not(lookup(4, BT0)),
not(lookup(77, BT0)),
lookup(60, BT0),
lookup(16, BT0),
lookup(81, BT0),
lookup(32, BT0),
lookup(29, BT0),
lookup(18, BT0),
isBST(BT0),
insert(59, BT0, BT1),
insert(88, BT1, BT2),
insert(4, BT2, BT3),
insert(77, BT3, BT4),
isBST(BT4),
inorder(BT4, L1), 
after_insertion_list33(L1), 
delete(60, BT4, BT5), 
delete(16, BT5, BT6), 
delete(81, BT6, BT7), 
delete(32, BT7, BT8), 
delete(29, BT8, BT9), 
delete(18, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list33(L2). 
build_bst34(BT):- BT = node(56, node(7, node(2, empty, node(3, empty, empty)), node(40, node(36, node(24, node(14, empty, node(15, empty, node(16, empty, empty))), node(33, node(28, empty, node(30, empty, empty)), node(35, empty, empty))), empty), node(45, empty, node(53, node(49, empty, node(52, empty, empty)), empty)))), node(83, node(59, empty, node(73, node(63, empty, node(65, node(64, empty, empty), node(68, node(67, empty, empty), node(70, empty, node(72, node(71, empty, empty), empty))))), node(82, node(75, empty, node(77, node(76, empty, empty), empty)), empty))), node(87, node(85, empty, node(86, empty, empty)), node(89, empty, node(92, node(90, empty, empty), node(98, empty, empty)))))).
after_insertion_list34(L):- L = [2, 3, 6, 7, 14, 15, 16, 24, 28, 30, 33, 35, 36, 40, 41, 42, 45, 49, 50, 52, 53, 56, 57, 59, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 82, 83, 85, 86, 87, 89, 90, 92, 97, 98].
after_deletion_list34(L):- L = [2, 3, 6, 7, 14, 15, 16, 24, 28, 30, 33, 35, 36, 40, 41, 42, 45, 49, 50, 53, 56, 57, 59, 63, 64, 65, 67, 71, 72, 73, 75, 76, 82, 83, 85, 86, 87, 89, 90, 92, 97, 98].
run_bst_test34:- build_bst34(BT0),
not(lookup(42, BT0)),
not(lookup(57, BT0)),
not(lookup(41, BT0)),
not(lookup(6, BT0)),
not(lookup(97, BT0)),
not(lookup(50, BT0)),
lookup(77, BT0),
lookup(68, BT0),
lookup(70, BT0),
lookup(52, BT0),
isBST(BT0),
insert(42, BT0, BT1),
insert(57, BT1, BT2),
insert(41, BT2, BT3),
insert(6, BT3, BT4),
insert(97, BT4, BT5),
insert(50, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list34(L1), 
delete(77, BT6, BT7), 
delete(68, BT7, BT8), 
delete(70, BT8, BT9), 
delete(52, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list34(L2). 
build_bst35(BT):- BT = node(11, node(6, node(2, empty, empty), node(7, empty, node(9, empty, empty))), node(30, node(16, node(13, node(12, empty, empty), empty), node(20, empty, node(28, empty, empty))), node(50, node(31, empty, node(37, node(34, empty, empty), node(39, node(38, empty, empty), node(47, node(42, node(41, empty, empty), empty), node(49, empty, empty))))), node(80, node(53, node(51, empty, empty), node(75, node(62, node(54, empty, node(60, empty, empty)), node(70, node(66, empty, empty), node(72, empty, node(74, empty, empty)))), node(78, empty, empty))), node(98, node(95, node(86, node(82, empty, node(83, empty, empty)), node(92, node(88, empty, node(89, empty, empty)), empty)), empty), node(99, empty, empty)))))).
after_insertion_list35(L):- L = [2, 6, 7, 9, 11, 12, 13, 16, 20, 21, 28, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 46, 47, 49, 50, 51, 52, 53, 54, 60, 62, 66, 70, 72, 73, 74, 75, 78, 80, 82, 83, 84, 85, 86, 88, 89, 91, 92, 95, 98, 99].
after_deletion_list35(L):- L = [2, 6, 7, 9, 11, 12, 13, 16, 20, 21, 28, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 46, 47, 49, 50, 51, 52, 53, 54, 60, 62, 66, 70, 72, 73, 74, 75, 78, 80, 82, 83, 84, 85, 86, 88, 89, 91, 92, 95, 98, 99].
run_bst_test35:- build_bst35(BT0),
not(lookup(52, BT0)),
not(lookup(46, BT0)),
not(lookup(21, BT0)),
not(lookup(40, BT0)),
not(lookup(36, BT0)),
not(lookup(91, BT0)),
not(lookup(73, BT0)),
not(lookup(32, BT0)),
not(lookup(84, BT0)),
not(lookup(85, BT0)),
isBST(BT0),
insert(52, BT0, BT1),
insert(46, BT1, BT2),
insert(21, BT2, BT3),
insert(40, BT3, BT4),
insert(36, BT4, BT5),
insert(91, BT5, BT6),
insert(73, BT6, BT7),
insert(32, BT7, BT8),
insert(84, BT8, BT9),
insert(85, BT9, BT10),
isBST(BT10),
inorder(BT10, L1), 
after_insertion_list35(L1), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list35(L2). 
build_bst36(BT):- BT = node(55, node(38, node(23, node(11, node(5, empty, empty), node(12, empty, node(21, node(17, empty, empty), empty))), node(34, node(28, node(26, empty, empty), node(31, empty, empty)), node(35, empty, node(36, empty, node(37, empty, empty))))), node(47, node(40, empty, node(45, empty, empty)), node(54, node(52, node(48, empty, node(49, empty, empty)), node(53, empty, empty)), empty))), node(86, node(84, node(76, node(74, node(70, node(69, node(67, node(63, node(58, empty, empty), empty), empty), empty), node(71, empty, empty)), empty), node(78, empty, node(83, empty, empty))), node(85, empty, empty)), node(94, node(90, empty, empty), node(97, empty, node(99, empty, empty))))).
after_insertion_list36(L):- L = [1, 5, 11, 12, 16, 17, 18, 21, 23, 26, 28, 31, 34, 35, 36, 37, 38, 40, 45, 47, 48, 49, 52, 53, 54, 55, 58, 63, 67, 69, 70, 71, 74, 76, 77, 78, 83, 84, 85, 86, 90, 94, 97, 99].
after_deletion_list36(L):- L = [1, 5, 11, 12, 16, 18, 21, 23, 26, 28, 31, 34, 35, 37, 38, 40, 45, 48, 49, 52, 53, 54, 55, 58, 63, 67, 69, 70, 71, 74, 76, 77, 83, 84, 85, 86, 94, 97, 99].
run_bst_test36:- build_bst36(BT0),
not(lookup(1, BT0)),
not(lookup(77, BT0)),
not(lookup(16, BT0)),
not(lookup(18, BT0)),
lookup(36, BT0),
lookup(90, BT0),
lookup(47, BT0),
lookup(17, BT0),
lookup(78, BT0),
isBST(BT0),
insert(1, BT0, BT1),
insert(77, BT1, BT2),
insert(16, BT2, BT3),
insert(18, BT3, BT4),
isBST(BT4),
inorder(BT4, L1), 
after_insertion_list36(L1), 
delete(36, BT4, BT5), 
delete(90, BT5, BT6), 
delete(47, BT6, BT7), 
delete(17, BT7, BT8), 
delete(78, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list36(L2). 
build_bst37(BT):- BT = node(81, node(35, node(19, node(7, node(1, empty, node(4, empty, node(5, empty, empty))), node(16, node(14, empty, empty), node(17, empty, empty))), node(22, empty, node(32, node(23, empty, node(24, empty, empty)), node(33, empty, node(34, empty, empty))))), node(71, node(38, empty, node(40, empty, node(49, node(41, empty, node(48, empty, empty)), node(69, node(54, empty, node(55, empty, node(58, empty, empty))), empty)))), node(77, node(72, empty, empty), empty))), node(97, node(93, node(85, node(82, empty, empty), empty), node(94, empty, node(95, empty, empty))), node(98, empty, empty))).
after_insertion_list37(L):- L = [1, 4, 5, 7, 11, 12, 14, 16, 17, 18, 19, 22, 23, 24, 27, 32, 33, 34, 35, 38, 40, 41, 48, 49, 54, 55, 58, 60, 67, 69, 71, 72, 77, 78, 81, 82, 85, 93, 94, 95, 97, 98].
after_deletion_list37(L):- L = [1, 5, 7, 11, 12, 14, 16, 17, 18, 22, 23, 24, 27, 32, 33, 34, 35, 38, 40, 48, 49, 54, 55, 58, 60, 67, 69, 71, 72, 77, 78, 81, 82, 85, 93, 94, 95, 97, 98].
run_bst_test37:- build_bst37(BT0),
not(lookup(27, BT0)),
not(lookup(78, BT0)),
not(lookup(11, BT0)),
not(lookup(18, BT0)),
not(lookup(60, BT0)),
not(lookup(12, BT0)),
not(lookup(67, BT0)),
lookup(41, BT0),
lookup(4, BT0),
lookup(19, BT0),
isBST(BT0),
insert(27, BT0, BT1),
insert(78, BT1, BT2),
insert(11, BT2, BT3),
insert(18, BT3, BT4),
insert(60, BT4, BT5),
insert(12, BT5, BT6),
insert(67, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list37(L1), 
delete(41, BT7, BT8), 
delete(4, BT8, BT9), 
delete(19, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list37(L2). 
build_bst38(BT):- BT = node(76, node(43, node(14, node(5, node(4, empty, empty), node(8, empty, node(12, empty, empty))), node(21, node(18, node(15, empty, node(16, empty, empty)), node(19, empty, node(20, empty, empty))), node(42, node(28, node(25, node(23, empty, empty), empty), node(31, empty, node(36, node(34, empty, empty), node(39, empty, empty)))), empty))), node(71, node(68, node(60, node(52, node(44, empty, empty), node(57, node(54, empty, empty), empty)), node(63, node(61, empty, empty), empty)), empty), node(73, empty, node(74, empty, empty)))), node(98, node(95, node(85, node(82, empty, node(84, empty, empty)), node(93, node(88, node(87, node(86, empty, empty), empty), empty), node(94, empty, empty))), empty), empty)).
after_insertion_list38(L):- L = [4, 5, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 28, 31, 32, 34, 35, 36, 39, 42, 43, 44, 52, 54, 55, 57, 60, 61, 63, 68, 70, 71, 73, 74, 76, 81, 82, 84, 85, 86, 87, 88, 93, 94, 95, 98].
after_deletion_list38(L):- L = [4, 5, 8, 10, 12, 14, 16, 17, 18, 20, 21, 23, 25, 28, 32, 34, 35, 36, 39, 42, 43, 44, 52, 54, 55, 57, 60, 61, 63, 68, 70, 71, 73, 74, 76, 81, 82, 84, 85, 86, 87, 88, 93, 94, 95, 98].
run_bst_test38:- build_bst38(BT0),
not(lookup(35, BT0)),
not(lookup(70, BT0)),
not(lookup(81, BT0)),
not(lookup(10, BT0)),
not(lookup(55, BT0)),
not(lookup(17, BT0)),
not(lookup(32, BT0)),
lookup(15, BT0),
lookup(19, BT0),
lookup(31, BT0),
isBST(BT0),
insert(35, BT0, BT1),
insert(70, BT1, BT2),
insert(81, BT2, BT3),
insert(10, BT3, BT4),
insert(55, BT4, BT5),
insert(17, BT5, BT6),
insert(32, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list38(L1), 
delete(15, BT7, BT8), 
delete(19, BT8, BT9), 
delete(31, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list38(L2). 
build_bst39(BT):- BT = node(83, node(33, node(17, node(8, node(3, empty, node(4, empty, node(6, empty, empty))), node(15, node(11, empty, empty), empty)), node(27, node(24, empty, empty), node(28, empty, node(32, empty, empty)))), node(66, node(48, node(44, node(34, empty, node(36, empty, node(42, empty, empty))), node(46, empty, empty)), node(56, node(54, node(49, empty, node(51, empty, node(53, empty, empty))), empty), node(62, node(58, empty, node(60, empty, empty)), empty))), node(79, node(77, node(73, node(67, empty, node(72, node(71, empty, empty), empty)), node(76, empty, empty)), node(78, empty, empty)), empty))), node(97, node(96, node(90, empty, node(94, node(93, node(91, empty, empty), empty), empty)), empty), empty)).
after_insertion_list39(L):- L = [3, 4, 6, 8, 11, 15, 17, 24, 27, 28, 32, 33, 34, 36, 38, 42, 44, 46, 47, 48, 49, 51, 53, 54, 56, 58, 60, 62, 65, 66, 67, 71, 72, 73, 76, 77, 78, 79, 83, 88, 90, 91, 93, 94, 96, 97].
after_deletion_list39(L):- L = [3, 4, 6, 8, 11, 15, 24, 27, 28, 32, 33, 34, 36, 38, 42, 44, 46, 47, 48, 49, 53, 54, 58, 62, 65, 66, 67, 71, 72, 73, 76, 77, 78, 79, 83, 88, 91, 93, 94, 96, 97].
run_bst_test39:- build_bst39(BT0),
not(lookup(38, BT0)),
not(lookup(47, BT0)),
not(lookup(88, BT0)),
not(lookup(65, BT0)),
lookup(90, BT0),
lookup(60, BT0),
lookup(56, BT0),
lookup(51, BT0),
lookup(17, BT0),
isBST(BT0),
insert(38, BT0, BT1),
insert(47, BT1, BT2),
insert(88, BT2, BT3),
insert(65, BT3, BT4),
isBST(BT4),
inorder(BT4, L1), 
after_insertion_list39(L1), 
delete(90, BT4, BT5), 
delete(60, BT5, BT6), 
delete(56, BT6, BT7), 
delete(51, BT7, BT8), 
delete(17, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list39(L2). 
build_bst40(BT):- BT = node(27, node(7, node(4, node(1, empty, empty), node(5, empty, empty)), node(11, empty, node(21, node(16, node(12, empty, node(13, empty, empty)), node(17, empty, node(18, empty, empty))), node(24, empty, empty)))), node(59, node(50, node(36, node(31, node(29, empty, empty), node(35, node(32, empty, empty), empty)), node(43, node(38, empty, empty), node(47, empty, empty))), node(57, node(53, node(52, empty, empty), empty), empty)), node(98, node(64, node(63, node(60, empty, empty), empty), node(67, node(66, empty, empty), node(78, node(77, node(68, empty, empty), empty), node(96, node(94, node(87, node(85, node(80, empty, node(84, empty, empty)), empty), empty), empty), empty)))), node(99, empty, empty)))).
after_insertion_list40(L):- L = [1, 4, 5, 6, 7, 11, 12, 13, 16, 17, 18, 21, 24, 27, 29, 31, 32, 34, 35, 36, 38, 43, 44, 47, 50, 52, 53, 54, 57, 59, 60, 63, 64, 66, 67, 68, 69, 74, 77, 78, 80, 84, 85, 86, 87, 94, 96, 98, 99].
after_deletion_list40(L):- L = [1, 4, 6, 7, 11, 12, 13, 16, 17, 18, 21, 24, 27, 29, 31, 32, 34, 36, 38, 43, 44, 47, 50, 52, 53, 54, 57, 59, 60, 63, 64, 66, 67, 68, 69, 74, 77, 78, 80, 84, 85, 86, 87, 94, 96, 98, 99].
run_bst_test40:- build_bst40(BT0),
not(lookup(44, BT0)),
not(lookup(74, BT0)),
not(lookup(6, BT0)),
not(lookup(34, BT0)),
not(lookup(86, BT0)),
not(lookup(69, BT0)),
not(lookup(54, BT0)),
lookup(35, BT0),
lookup(5, BT0),
isBST(BT0),
insert(44, BT0, BT1),
insert(74, BT1, BT2),
insert(6, BT2, BT3),
insert(34, BT3, BT4),
insert(86, BT4, BT5),
insert(69, BT5, BT6),
insert(54, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list40(L1), 
delete(35, BT7, BT8), 
delete(5, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list40(L2). 
build_bst41(BT):- BT = node(84, node(68, node(13, node(2, empty, node(7, empty, node(8, empty, node(12, empty, empty)))), node(15, node(14, empty, empty), node(36, node(16, empty, node(30, node(20, node(19, empty, empty), node(28, node(26, node(24, empty, empty), empty), empty)), node(33, node(31, empty, empty), empty))), node(44, node(40, empty, node(42, empty, empty)), node(46, empty, node(52, node(50, empty, empty), node(66, node(61, node(60, node(55, empty, empty), empty), node(62, empty, empty)), node(67, empty, empty)))))))), node(72, node(71, node(70, empty, empty), empty), node(74, empty, node(76, empty, node(79, node(78, empty, empty), empty))))), node(97, node(89, node(88, empty, empty), node(92, empty, empty)), empty)).
after_insertion_list41(L):- L = [2, 7, 8, 12, 13, 14, 15, 16, 19, 20, 24, 26, 28, 30, 31, 33, 36, 40, 42, 44, 46, 48, 50, 52, 55, 59, 60, 61, 62, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 84, 88, 89, 92, 93, 97].
after_deletion_list41(L):- L = [2, 7, 8, 12, 13, 14, 15, 16, 19, 20, 24, 28, 30, 31, 33, 36, 44, 46, 48, 50, 52, 55, 59, 60, 61, 62, 66, 67, 68, 70, 71, 72, 74, 75, 77, 79, 84, 88, 89, 92, 93, 97].
run_bst_test41:- build_bst41(BT0),
not(lookup(77, BT0)),
not(lookup(48, BT0)),
not(lookup(75, BT0)),
not(lookup(59, BT0)),
not(lookup(93, BT0)),
lookup(26, BT0),
lookup(42, BT0),
lookup(76, BT0),
lookup(78, BT0),
lookup(40, BT0),
isBST(BT0),
insert(77, BT0, BT1),
insert(48, BT1, BT2),
insert(75, BT2, BT3),
insert(59, BT3, BT4),
insert(93, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list41(L1), 
delete(26, BT5, BT6), 
delete(42, BT6, BT7), 
delete(76, BT7, BT8), 
delete(78, BT8, BT9), 
delete(40, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list41(L2). 
build_bst42(BT):- BT = node(89, node(76, node(41, node(7, node(3, empty, empty), node(21, node(9, empty, empty), node(38, node(22, empty, node(37, node(33, node(23, empty, node(26, empty, node(31, empty, empty))), empty), empty)), empty))), node(42, empty, node(62, node(46, node(44, empty, empty), node(58, node(47, empty, node(52, node(48, empty, empty), node(53, empty, node(56, empty, empty)))), empty)), node(65, empty, node(75, node(67, empty, empty), empty))))), node(80, empty, empty)), node(99, node(91, empty, node(95, node(94, empty, empty), node(96, empty, empty))), empty)).
after_insertion_list42(L):- L = [3, 7, 9, 17, 21, 22, 23, 24, 26, 30, 31, 33, 37, 38, 41, 42, 44, 46, 47, 48, 52, 53, 56, 57, 58, 62, 65, 66, 67, 68, 75, 76, 80, 87, 89, 91, 94, 95, 96, 99].
after_deletion_list42(L):- L = [3, 7, 9, 17, 21, 24, 26, 30, 31, 33, 37, 38, 41, 42, 44, 46, 47, 48, 52, 53, 57, 58, 62, 65, 66, 67, 68, 75, 76, 80, 87, 89, 91, 94, 95, 96, 99].
run_bst_test42:- build_bst42(BT0),
not(lookup(57, BT0)),
not(lookup(66, BT0)),
not(lookup(17, BT0)),
not(lookup(87, BT0)),
not(lookup(24, BT0)),
not(lookup(30, BT0)),
not(lookup(68, BT0)),
lookup(22, BT0),
lookup(56, BT0),
lookup(23, BT0),
isBST(BT0),
insert(57, BT0, BT1),
insert(66, BT1, BT2),
insert(17, BT2, BT3),
insert(87, BT3, BT4),
insert(24, BT4, BT5),
insert(30, BT5, BT6),
insert(68, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list42(L1), 
delete(22, BT7, BT8), 
delete(56, BT8, BT9), 
delete(23, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list42(L2). 
build_bst43(BT):- BT = node(80, node(35, node(27, node(19, node(7, node(1, empty, node(6, node(5, node(4, empty, empty), empty), empty)), node(13, empty, node(15, node(14, empty, empty), empty))), node(25, node(23, empty, empty), empty)), node(30, node(28, empty, empty), node(32, empty, node(33, empty, empty)))), node(38, empty, node(76, node(51, node(49, node(48, node(41, node(39, empty, empty), empty), empty), node(50, empty, empty)), node(59, node(57, node(52, empty, empty), empty), node(75, node(67, empty, node(68, empty, node(73, empty, empty))), empty))), empty))), node(97, node(87, node(86, node(85, empty, empty), empty), node(93, node(90, node(88, empty, empty), empty), node(94, empty, empty))), empty)).
after_insertion_list43(L):- L = [1, 4, 5, 6, 7, 13, 14, 15, 19, 23, 25, 27, 28, 30, 32, 33, 35, 38, 39, 41, 43, 47, 48, 49, 50, 51, 52, 57, 59, 67, 68, 71, 73, 75, 76, 80, 81, 85, 86, 87, 88, 90, 93, 94, 97].
after_deletion_list43(L):- L = [4, 5, 6, 7, 13, 14, 19, 23, 25, 27, 28, 30, 32, 38, 41, 43, 47, 48, 49, 50, 51, 52, 57, 59, 67, 68, 71, 73, 76, 80, 81, 85, 86, 87, 88, 90, 93, 94, 97].
run_bst_test43:- build_bst43(BT0),
not(lookup(81, BT0)),
not(lookup(47, BT0)),
not(lookup(71, BT0)),
not(lookup(43, BT0)),
lookup(1, BT0),
lookup(33, BT0),
lookup(39, BT0),
lookup(75, BT0),
lookup(15, BT0),
lookup(35, BT0),
isBST(BT0),
insert(81, BT0, BT1),
insert(47, BT1, BT2),
insert(71, BT2, BT3),
insert(43, BT3, BT4),
isBST(BT4),
inorder(BT4, L1), 
after_insertion_list43(L1), 
delete(1, BT4, BT5), 
delete(33, BT5, BT6), 
delete(39, BT6, BT7), 
delete(75, BT7, BT8), 
delete(15, BT8, BT9), 
delete(35, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list43(L2). 
build_bst44(BT):- BT = node(47, node(23, node(12, node(8, node(2, empty, empty), empty), node(22, empty, empty)), node(41, node(33, node(24, empty, node(32, empty, empty)), node(37, empty, node(39, empty, empty))), empty)), node(80, node(54, node(53, node(49, empty, node(51, empty, empty)), empty), node(75, node(71, node(63, empty, node(70, empty, empty)), node(74, empty, empty)), node(79, node(77, empty, empty), empty))), node(90, node(86, node(85, node(84, empty, empty), empty), node(87, empty, empty)), node(96, empty, node(98, empty, empty))))).
after_insertion_list44(L):- L = [2, 6, 8, 11, 12, 14, 22, 23, 24, 32, 33, 37, 39, 41, 45, 47, 49, 51, 53, 54, 61, 63, 70, 71, 72, 74, 75, 76, 77, 79, 80, 84, 85, 86, 87, 90, 96, 98].
after_deletion_list44(L):- L = [2, 6, 8, 11, 12, 14, 22, 23, 24, 32, 33, 39, 41, 45, 47, 49, 51, 53, 54, 61, 63, 70, 71, 72, 74, 75, 76, 77, 79, 80, 84, 87, 90, 96, 98].
run_bst_test44:- build_bst44(BT0),
not(lookup(72, BT0)),
not(lookup(11, BT0)),
not(lookup(6, BT0)),
not(lookup(14, BT0)),
not(lookup(76, BT0)),
not(lookup(61, BT0)),
not(lookup(45, BT0)),
lookup(37, BT0),
lookup(85, BT0),
lookup(86, BT0),
isBST(BT0),
insert(72, BT0, BT1),
insert(11, BT1, BT2),
insert(6, BT2, BT3),
insert(14, BT3, BT4),
insert(76, BT4, BT5),
insert(61, BT5, BT6),
insert(45, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list44(L1), 
delete(37, BT7, BT8), 
delete(85, BT8, BT9), 
delete(86, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list44(L2). 
build_bst45(BT):- BT = node(23, node(3, empty, node(9, node(6, node(5, empty, empty), node(8, empty, empty)), node(15, node(10, empty, node(14, empty, empty)), node(21, empty, empty)))), node(83, node(72, node(29, empty, node(71, node(35, node(31, empty, empty), node(49, node(47, node(42, node(36, empty, empty), node(44, empty, empty)), empty), node(68, node(57, node(54, node(52, node(50, empty, node(51, empty, empty)), node(53, empty, empty)), node(55, empty, empty)), node(61, node(60, empty, empty), empty)), empty))), empty)), node(81, node(77, empty, node(78, empty, empty)), empty)), node(98, node(97, node(84, empty, node(89, empty, node(91, node(90, empty, empty), node(92, empty, empty)))), empty), empty))).
after_insertion_list45(L):- L = [3, 5, 6, 8, 9, 10, 14, 15, 17, 21, 23, 27, 28, 29, 31, 34, 35, 36, 42, 44, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 68, 71, 72, 77, 78, 79, 81, 82, 83, 84, 89, 90, 91, 92, 97, 98].
after_deletion_list45(L):- L = [3, 5, 6, 8, 9, 10, 14, 15, 17, 21, 23, 27, 28, 29, 31, 34, 35, 36, 44, 47, 49, 51, 52, 53, 54, 55, 57, 58, 60, 61, 68, 71, 72, 77, 79, 81, 82, 83, 84, 89, 90, 91, 92, 97, 98].
run_bst_test45:- build_bst45(BT0),
not(lookup(17, BT0)),
not(lookup(79, BT0)),
not(lookup(82, BT0)),
not(lookup(34, BT0)),
not(lookup(58, BT0)),
not(lookup(28, BT0)),
not(lookup(27, BT0)),
lookup(78, BT0),
lookup(42, BT0),
lookup(50, BT0),
isBST(BT0),
insert(17, BT0, BT1),
insert(79, BT1, BT2),
insert(82, BT2, BT3),
insert(34, BT3, BT4),
insert(58, BT4, BT5),
insert(28, BT5, BT6),
insert(27, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list45(L1), 
delete(78, BT7, BT8), 
delete(42, BT8, BT9), 
delete(50, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list45(L2). 
build_bst46(BT):- BT = node(89, node(33, node(29, node(25, node(13, node(12, node(1, empty, node(2, empty, node(6, empty, empty))), empty), node(22, node(19, empty, node(21, empty, empty)), node(24, empty, empty))), node(27, empty, empty)), node(31, empty, node(32, empty, empty))), node(42, node(41, node(37, empty, empty), empty), node(56, node(48, node(44, node(43, empty, empty), node(45, empty, empty)), node(49, empty, node(53, empty, empty))), node(60, node(58, empty, empty), node(86, node(65, empty, node(83, node(82, node(67, node(66, empty, empty), node(70, empty, node(72, empty, empty))), empty), empty)), empty))))), node(98, empty, empty)).
after_insertion_list46(L):- L = [1, 2, 3, 6, 12, 13, 19, 21, 22, 24, 25, 27, 29, 31, 32, 33, 37, 40, 41, 42, 43, 44, 45, 48, 49, 53, 54, 56, 58, 60, 62, 65, 66, 67, 70, 72, 81, 82, 83, 84, 85, 86, 89, 95, 98].
after_deletion_list46(L):- L = [1, 2, 3, 6, 12, 13, 19, 21, 22, 24, 25, 27, 29, 31, 32, 33, 37, 40, 41, 42, 44, 45, 48, 49, 53, 54, 56, 58, 60, 62, 65, 66, 67, 70, 72, 81, 82, 83, 84, 85, 86, 89, 95, 98].
run_bst_test46:- build_bst46(BT0),
not(lookup(62, BT0)),
not(lookup(54, BT0)),
not(lookup(95, BT0)),
not(lookup(40, BT0)),
not(lookup(85, BT0)),
not(lookup(81, BT0)),
not(lookup(84, BT0)),
not(lookup(3, BT0)),
lookup(43, BT0),
isBST(BT0),
insert(62, BT0, BT1),
insert(54, BT1, BT2),
insert(95, BT2, BT3),
insert(40, BT3, BT4),
insert(85, BT4, BT5),
insert(81, BT5, BT6),
insert(84, BT6, BT7),
insert(3, BT7, BT8),
isBST(BT8),
inorder(BT8, L1), 
after_insertion_list46(L1), 
delete(43, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list46(L2). 
build_bst47(BT):- BT = node(57, node(34, node(11, node(3, node(2, empty, empty), node(7, node(6, empty, empty), empty)), node(28, node(24, node(12, empty, node(18, node(13, empty, empty), empty)), empty), node(31, node(30, empty, empty), empty))), node(37, empty, node(53, node(40, empty, node(47, empty, empty)), empty))), node(88, node(75, node(63, node(61, empty, node(62, empty, empty)), node(65, empty, empty)), node(85, empty, node(86, empty, empty))), node(92, empty, node(95, empty, empty)))).
after_insertion_list47(L):- L = [2, 3, 6, 7, 11, 12, 13, 18, 24, 28, 29, 30, 31, 34, 37, 39, 40, 44, 47, 53, 57, 61, 62, 63, 65, 75, 85, 86, 87, 88, 90, 92, 95].
after_deletion_list47(L):- L = [2, 6, 7, 11, 13, 18, 24, 28, 29, 30, 31, 34, 37, 39, 40, 44, 47, 53, 57, 62, 65, 75, 85, 87, 88, 90, 92, 95].
run_bst_test47:- build_bst47(BT0),
not(lookup(87, BT0)),
not(lookup(39, BT0)),
not(lookup(29, BT0)),
not(lookup(44, BT0)),
not(lookup(90, BT0)),
lookup(61, BT0),
lookup(86, BT0),
lookup(3, BT0),
lookup(12, BT0),
lookup(63, BT0),
isBST(BT0),
insert(87, BT0, BT1),
insert(39, BT1, BT2),
insert(29, BT2, BT3),
insert(44, BT3, BT4),
insert(90, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list47(L1), 
delete(61, BT5, BT6), 
delete(86, BT6, BT7), 
delete(3, BT7, BT8), 
delete(12, BT8, BT9), 
delete(63, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list47(L2). 
build_bst48(BT):- BT = node(68, node(23, node(18, node(13, node(1, empty, empty), node(17, node(16, empty, empty), empty)), empty), node(25, node(24, empty, empty), node(60, node(37, node(36, node(33, node(29, empty, node(32, empty, empty)), empty), empty), node(56, node(41, empty, node(49, node(48, node(47, node(43, empty, empty), empty), empty), node(51, empty, node(53, node(52, empty, empty), node(55, empty, empty))))), node(58, empty, empty))), node(66, node(65, empty, empty), empty)))), node(94, node(78, node(76, empty, empty), node(86, node(83, empty, empty), node(92, empty, empty))), node(99, empty, empty))).
after_insertion_list48(L):- L = [1, 2, 12, 13, 16, 17, 18, 23, 24, 25, 29, 32, 33, 36, 37, 41, 42, 43, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 60, 65, 66, 68, 74, 76, 78, 83, 84, 86, 90, 92, 94, 99].
after_deletion_list48(L):- L = [1, 2, 12, 13, 16, 17, 18, 23, 24, 25, 29, 32, 33, 36, 37, 41, 42, 43, 46, 48, 49, 51, 52, 53, 55, 56, 58, 60, 65, 66, 68, 74, 76, 78, 84, 86, 90, 92, 94, 99].
run_bst_test48:- build_bst48(BT0),
not(lookup(12, BT0)),
not(lookup(84, BT0)),
not(lookup(42, BT0)),
not(lookup(74, BT0)),
not(lookup(90, BT0)),
not(lookup(46, BT0)),
not(lookup(2, BT0)),
lookup(47, BT0),
lookup(83, BT0),
isBST(BT0),
insert(12, BT0, BT1),
insert(84, BT1, BT2),
insert(42, BT2, BT3),
insert(74, BT3, BT4),
insert(90, BT4, BT5),
insert(46, BT5, BT6),
insert(2, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list48(L1), 
delete(47, BT7, BT8), 
delete(83, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list48(L2). 
build_bst49(BT):- BT = node(60, node(40, node(12, node(10, node(9, node(5, empty, empty), empty), empty), node(31, node(22, node(21, node(19, empty, empty), empty), node(29, node(23, empty, empty), empty)), node(32, empty, node(37, node(34, empty, empty), node(39, empty, empty))))), node(51, node(42, node(41, empty, empty), node(46, node(44, node(43, empty, empty), node(45, empty, empty)), node(49, empty, empty))), node(52, empty, node(57, empty, empty)))), node(79, node(77, node(74, node(62, node(61, empty, empty), node(66, node(64, empty, empty), node(73, node(72, empty, empty), empty))), node(75, empty, empty)), empty), node(92, node(91, node(80, empty, node(86, node(84, node(83, empty, empty), empty), empty)), empty), node(99, node(93, empty, empty), empty)))).
after_insertion_list49(L):- L = [5, 9, 10, 12, 19, 21, 22, 23, 27, 29, 31, 32, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 57, 60, 61, 62, 64, 66, 72, 73, 74, 75, 77, 79, 80, 83, 84, 86, 91, 92, 93, 94, 99].
after_deletion_list49(L):- L = [5, 9, 10, 12, 21, 22, 27, 29, 31, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 57, 60, 61, 62, 64, 66, 72, 73, 74, 75, 77, 79, 80, 83, 84, 86, 92, 93, 94, 99].
run_bst_test49:- build_bst49(BT0),
not(lookup(94, BT0)),
not(lookup(48, BT0)),
not(lookup(27, BT0)),
not(lookup(50, BT0)),
not(lookup(35, BT0)),
lookup(19, BT0),
lookup(32, BT0),
lookup(23, BT0),
lookup(91, BT0),
isBST(BT0),
insert(94, BT0, BT1),
insert(48, BT1, BT2),
insert(27, BT2, BT3),
insert(50, BT3, BT4),
insert(35, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list49(L1), 
delete(19, BT5, BT6), 
delete(32, BT6, BT7), 
delete(23, BT7, BT8), 
delete(91, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list49(L2). 
build_bst50(BT):- BT = node(34, node(20, node(6, node(1, empty, node(4, empty, empty)), node(11, empty, node(13, empty, node(14, empty, node(15, empty, empty))))), node(26, node(21, empty, node(25, node(23, empty, empty), empty)), node(27, empty, node(29, empty, node(31, empty, empty))))), node(47, node(45, node(39, empty, empty), empty), node(96, node(48, empty, node(88, node(49, empty, node(69, node(65, node(51, empty, node(56, empty, empty)), node(66, empty, empty)), node(72, empty, node(87, node(81, node(75, node(73, empty, empty), empty), node(85, empty, empty)), empty)))), node(95, empty, empty))), empty))).
after_insertion_list50(L):- L = [1, 4, 6, 10, 11, 13, 14, 15, 20, 21, 23, 25, 26, 27, 29, 31, 34, 35, 39, 44, 45, 47, 48, 49, 51, 56, 64, 65, 66, 69, 72, 73, 75, 81, 84, 85, 87, 88, 95, 96, 99].
after_deletion_list50(L):- L = [1, 4, 6, 10, 11, 13, 15, 20, 21, 23, 25, 26, 27, 29, 31, 34, 35, 39, 44, 45, 47, 48, 49, 56, 64, 65, 66, 69, 72, 73, 75, 81, 84, 85, 87, 95, 96, 99].
run_bst_test50:- build_bst50(BT0),
not(lookup(10, BT0)),
not(lookup(99, BT0)),
not(lookup(64, BT0)),
not(lookup(44, BT0)),
not(lookup(84, BT0)),
not(lookup(35, BT0)),
lookup(88, BT0),
lookup(14, BT0),
lookup(51, BT0),
isBST(BT0),
insert(10, BT0, BT1),
insert(99, BT1, BT2),
insert(64, BT2, BT3),
insert(44, BT3, BT4),
insert(84, BT4, BT5),
insert(35, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list50(L1), 
delete(88, BT6, BT7), 
delete(14, BT7, BT8), 
delete(51, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list50(L2). 
build_bst51(BT):- BT = node(84, node(7, node(6, node(1, empty, node(4, node(2, empty, empty), node(5, empty, empty))), empty), node(35, node(8, empty, node(33, node(30, node(13, node(12, node(9, empty, empty), empty), node(17, empty, node(26, empty, empty))), empty), empty)), node(69, node(63, node(56, node(46, node(37, empty, node(39, empty, empty)), node(50, node(47, empty, empty), node(52, node(51, empty, empty), empty))), node(60, node(58, empty, empty), empty)), node(67, empty, empty)), node(70, empty, node(71, empty, node(72, empty, node(77, node(74, empty, empty), empty))))))), node(93, node(89, node(86, empty, empty), empty), node(99, node(98, empty, empty), empty))).
after_insertion_list51(L):- L = [1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 17, 26, 30, 33, 35, 37, 39, 45, 46, 47, 50, 51, 52, 53, 56, 58, 60, 63, 65, 67, 69, 70, 71, 72, 74, 77, 84, 86, 89, 93, 94, 98, 99].
after_deletion_list51(L):- L = [1, 2, 4, 5, 6, 7, 8, 9, 12, 17, 26, 30, 33, 35, 37, 45, 46, 47, 50, 51, 52, 53, 56, 58, 60, 63, 65, 67, 69, 70, 71, 77, 84, 86, 89, 94, 98, 99].
run_bst_test51:- build_bst51(BT0),
not(lookup(45, BT0)),
not(lookup(53, BT0)),
not(lookup(65, BT0)),
not(lookup(94, BT0)),
lookup(13, BT0),
lookup(39, BT0),
lookup(72, BT0),
lookup(74, BT0),
lookup(93, BT0),
isBST(BT0),
insert(45, BT0, BT1),
insert(53, BT1, BT2),
insert(65, BT2, BT3),
insert(94, BT3, BT4),
isBST(BT4),
inorder(BT4, L1), 
after_insertion_list51(L1), 
delete(13, BT4, BT5), 
delete(39, BT5, BT6), 
delete(72, BT6, BT7), 
delete(74, BT7, BT8), 
delete(93, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list51(L2). 
build_bst52(BT):- BT = node(30, node(2, empty, node(22, node(9, node(7, node(6, empty, empty), node(8, empty, empty)), node(10, empty, empty)), node(27, node(24, node(23, empty, empty), node(26, empty, empty)), node(28, empty, node(29, empty, empty))))), node(98, node(38, node(35, node(34, node(33, node(32, empty, empty), empty), empty), empty), node(54, node(46, node(44, node(39, empty, node(40, empty, empty)), node(45, empty, empty)), node(47, empty, node(51, node(49, node(48, empty, empty), empty), node(53, empty, empty)))), node(67, node(62, empty, node(63, empty, node(65, empty, empty))), node(80, node(79, empty, empty), node(82, empty, node(95, node(88, empty, node(89, empty, empty)), node(96, empty, empty))))))), node(99, empty, empty))).
after_insertion_list52(L):- L = [2, 6, 7, 8, 9, 10, 14, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 44, 45, 46, 47, 48, 49, 51, 53, 54, 59, 62, 63, 65, 67, 75, 79, 80, 82, 88, 89, 95, 96, 98, 99].
after_deletion_list52(L):- L = [2, 6, 7, 8, 10, 14, 22, 24, 26, 27, 29, 30, 33, 34, 38, 39, 40, 45, 46, 47, 48, 49, 51, 53, 54, 59, 62, 63, 65, 67, 75, 79, 80, 82, 88, 95, 96, 98, 99].
run_bst_test52:- build_bst52(BT0),
not(lookup(59, BT0)),
not(lookup(75, BT0)),
not(lookup(14, BT0)),
lookup(28, BT0),
lookup(35, BT0),
lookup(89, BT0),
lookup(32, BT0),
lookup(23, BT0),
lookup(44, BT0),
lookup(9, BT0),
isBST(BT0),
insert(59, BT0, BT1),
insert(75, BT1, BT2),
insert(14, BT2, BT3),
isBST(BT3),
inorder(BT3, L1), 
after_insertion_list52(L1), 
delete(28, BT3, BT4), 
delete(35, BT4, BT5), 
delete(89, BT5, BT6), 
delete(32, BT6, BT7), 
delete(23, BT7, BT8), 
delete(44, BT8, BT9), 
delete(9, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list52(L2). 
build_bst53(BT):- BT = node(42, node(14, node(2, empty, node(6, empty, empty)), node(31, node(29, node(23, empty, empty), node(30, empty, empty)), node(32, empty, node(39, node(37, node(33, empty, empty), empty), empty)))), node(71, node(54, node(44, node(43, empty, empty), empty), node(60, empty, node(62, node(61, empty, empty), node(63, empty, empty)))), node(88, node(82, node(79, node(76, node(75, node(74, empty, empty), empty), empty), empty), node(83, empty, node(85, empty, node(87, empty, empty)))), node(89, empty, node(95, node(90, empty, node(94, empty, empty)), node(99, empty, empty)))))).
after_insertion_list53(L):- L = [2, 6, 7, 14, 15, 20, 23, 29, 30, 31, 32, 33, 37, 39, 42, 43, 44, 45, 54, 60, 61, 62, 63, 68, 71, 74, 75, 76, 77, 79, 82, 83, 85, 87, 88, 89, 90, 94, 95, 96, 99].
after_deletion_list53(L):- L = [2, 6, 7, 14, 15, 20, 23, 29, 30, 31, 32, 39, 42, 43, 44, 45, 54, 60, 61, 62, 63, 68, 71, 74, 75, 76, 77, 79, 82, 83, 85, 87, 88, 89, 90, 94, 95, 96, 99].
run_bst_test53:- build_bst53(BT0),
not(lookup(20, BT0)),
not(lookup(15, BT0)),
not(lookup(96, BT0)),
not(lookup(68, BT0)),
not(lookup(7, BT0)),
not(lookup(77, BT0)),
not(lookup(45, BT0)),
lookup(33, BT0),
lookup(37, BT0),
isBST(BT0),
insert(20, BT0, BT1),
insert(15, BT1, BT2),
insert(96, BT2, BT3),
insert(68, BT3, BT4),
insert(7, BT4, BT5),
insert(77, BT5, BT6),
insert(45, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list53(L1), 
delete(33, BT7, BT8), 
delete(37, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list53(L2). 
build_bst54(BT):- BT = node(71, node(27, node(2, node(1, empty, empty), node(8, node(3, empty, node(4, empty, node(7, empty, empty))), node(9, empty, node(24, node(20, node(11, node(10, empty, empty), node(14, empty, node(16, empty, node(18, empty, empty)))), node(23, node(22, empty, empty), empty)), node(26, empty, empty))))), node(65, node(62, node(59, node(30, empty, node(48, node(44, node(42, node(38, empty, node(41, node(39, empty, empty), empty)), empty), empty), node(49, empty, node(53, node(50, empty, empty), empty)))), empty), empty), node(66, empty, node(70, empty, empty)))), node(72, empty, node(84, node(83, node(78, node(73, empty, empty), empty), empty), node(96, node(90, empty, empty), empty)))).
after_insertion_list54(L):- L = [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 16, 18, 20, 22, 23, 24, 26, 27, 30, 35, 38, 39, 41, 42, 44, 48, 49, 50, 53, 54, 59, 62, 65, 66, 70, 71, 72, 73, 76, 78, 82, 83, 84, 87, 90, 96].
after_deletion_list54(L):- L = [1, 2, 3, 7, 8, 9, 10, 16, 18, 20, 22, 23, 24, 26, 27, 30, 35, 38, 39, 41, 42, 44, 48, 49, 50, 53, 54, 59, 62, 65, 66, 70, 71, 73, 76, 78, 82, 83, 84, 87, 90].
run_bst_test54:- build_bst54(BT0),
not(lookup(54, BT0)),
not(lookup(82, BT0)),
not(lookup(35, BT0)),
not(lookup(76, BT0)),
not(lookup(87, BT0)),
lookup(14, BT0),
lookup(11, BT0),
lookup(4, BT0),
lookup(72, BT0),
lookup(96, BT0),
isBST(BT0),
insert(54, BT0, BT1),
insert(82, BT1, BT2),
insert(35, BT2, BT3),
insert(76, BT3, BT4),
insert(87, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list54(L1), 
delete(14, BT5, BT6), 
delete(11, BT6, BT7), 
delete(4, BT7, BT8), 
delete(72, BT8, BT9), 
delete(96, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list54(L2). 
build_bst55(BT):- BT = node(3, node(1, empty, node(2, empty, empty)), node(15, node(4, empty, node(9, empty, node(10, empty, empty))), node(99, node(40, node(16, empty, node(31, node(24, node(17, empty, empty), node(25, empty, empty)), node(32, empty, empty))), node(93, node(62, node(55, node(46, node(43, empty, empty), node(49, empty, node(53, empty, empty))), node(60, node(58, empty, empty), empty)), node(80, node(79, node(67, empty, node(69, empty, node(71, empty, node(77, node(75, empty, node(76, empty, empty)), empty)))), empty), node(89, node(87, node(85, node(84, node(82, empty, empty), empty), empty), empty), node(91, empty, empty)))), node(97, empty, empty))), empty))).
after_insertion_list55(L):- L = [1, 2, 3, 4, 8, 9, 10, 15, 16, 17, 20, 22, 24, 25, 27, 31, 32, 40, 42, 43, 46, 47, 49, 53, 55, 56, 58, 60, 62, 67, 69, 71, 75, 76, 77, 79, 80, 82, 84, 85, 87, 89, 91, 93, 97, 99].
after_deletion_list55(L):- L = [1, 2, 3, 4, 8, 9, 10, 15, 16, 20, 22, 24, 25, 27, 31, 32, 40, 42, 43, 46, 47, 49, 53, 56, 58, 62, 67, 69, 71, 75, 76, 77, 79, 80, 82, 84, 85, 87, 89, 91, 93, 97, 99].
run_bst_test55:- build_bst55(BT0),
not(lookup(47, BT0)),
not(lookup(8, BT0)),
not(lookup(22, BT0)),
not(lookup(42, BT0)),
not(lookup(56, BT0)),
not(lookup(20, BT0)),
not(lookup(27, BT0)),
lookup(60, BT0),
lookup(17, BT0),
lookup(55, BT0),
isBST(BT0),
insert(47, BT0, BT1),
insert(8, BT1, BT2),
insert(22, BT2, BT3),
insert(42, BT3, BT4),
insert(56, BT4, BT5),
insert(20, BT5, BT6),
insert(27, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list55(L1), 
delete(60, BT7, BT8), 
delete(17, BT8, BT9), 
delete(55, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list55(L2). 
build_bst56(BT):- BT = node(78, node(30, node(17, node(5, node(4, node(3, empty, empty), empty), node(14, node(10, node(7, empty, empty), node(11, empty, empty)), node(16, node(15, empty, empty), empty))), node(26, node(24, node(20, node(18, empty, node(19, empty, empty)), empty), empty), node(29, node(28, empty, empty), empty))), node(49, node(35, node(32, empty, node(33, empty, empty)), node(46, node(36, empty, node(38, empty, empty)), empty)), node(73, node(62, node(53, empty, node(56, empty, empty)), node(64, empty, node(67, node(65, empty, empty), empty))), node(75, empty, empty)))), node(92, node(89, empty, node(91, empty, empty)), node(93, empty, node(97, empty, node(98, empty, empty))))).
after_insertion_list56(L):- L = [1, 3, 4, 5, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 24, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 46, 49, 53, 56, 62, 64, 65, 67, 73, 75, 78, 88, 89, 90, 91, 92, 93, 97, 98].
after_deletion_list56(L):- L = [1, 3, 4, 5, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 26, 28, 29, 30, 32, 33, 34, 35, 46, 49, 53, 56, 62, 65, 67, 73, 75, 88, 89, 90, 91, 92, 93, 97, 98].
run_bst_test56:- build_bst56(BT0),
not(lookup(90, BT0)),
not(lookup(1, BT0)),
not(lookup(34, BT0)),
not(lookup(88, BT0)),
not(lookup(12, BT0)),
lookup(36, BT0),
lookup(64, BT0),
lookup(78, BT0),
lookup(24, BT0),
lookup(38, BT0),
isBST(BT0),
insert(90, BT0, BT1),
insert(1, BT1, BT2),
insert(34, BT2, BT3),
insert(88, BT3, BT4),
insert(12, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list56(L1), 
delete(36, BT5, BT6), 
delete(64, BT6, BT7), 
delete(78, BT7, BT8), 
delete(24, BT8, BT9), 
delete(38, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list56(L2). 
build_bst57(BT):- BT = node(92, node(52, node(44, node(17, node(8, node(7, node(2, node(1, empty, empty), node(3, empty, empty)), empty), node(14, empty, empty)), node(26, node(24, node(23, empty, empty), empty), node(43, node(39, node(33, empty, node(35, empty, empty)), empty), empty))), node(45, empty, node(51, node(47, empty, empty), empty))), node(65, node(56, node(55, empty, empty), node(58, empty, empty)), node(75, node(70, node(67, empty, empty), node(73, empty, empty)), node(84, node(78, empty, empty), node(85, empty, node(89, node(86, empty, empty), empty)))))), node(98, node(95, empty, empty), empty)).
after_insertion_list57(L):- L = [1, 2, 3, 7, 8, 14, 17, 23, 24, 26, 33, 35, 37, 39, 43, 44, 45, 47, 48, 50, 51, 52, 55, 56, 58, 61, 63, 65, 67, 68, 70, 73, 75, 78, 84, 85, 86, 89, 92, 95, 98].
after_deletion_list57(L):- L = [1, 2, 3, 7, 14, 17, 23, 24, 26, 33, 35, 37, 43, 45, 47, 48, 50, 51, 52, 55, 56, 58, 61, 63, 65, 67, 68, 70, 73, 78, 84, 85, 86, 89, 92, 95, 98].
run_bst_test57:- build_bst57(BT0),
not(lookup(61, BT0)),
not(lookup(68, BT0)),
not(lookup(63, BT0)),
not(lookup(37, BT0)),
not(lookup(48, BT0)),
not(lookup(50, BT0)),
lookup(8, BT0),
lookup(44, BT0),
lookup(39, BT0),
lookup(75, BT0),
isBST(BT0),
insert(61, BT0, BT1),
insert(68, BT1, BT2),
insert(63, BT2, BT3),
insert(37, BT3, BT4),
insert(48, BT4, BT5),
insert(50, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list57(L1), 
delete(8, BT6, BT7), 
delete(44, BT7, BT8), 
delete(39, BT8, BT9), 
delete(75, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list57(L2). 
build_bst58(BT):- BT = node(18, node(11, node(3, node(2, empty, empty), node(9, empty, empty)), empty), node(91, node(52, node(32, node(25, node(24, node(23, empty, empty), empty), node(31, empty, empty)), node(48, node(36, node(35, node(33, empty, empty), empty), node(43, node(39, node(37, empty, empty), empty), empty)), node(51, empty, empty))), node(71, node(59, node(54, empty, node(56, empty, empty)), node(65, empty, empty)), node(77, node(76, empty, empty), node(87, node(83, node(80, node(79, empty, empty), node(81, empty, empty)), node(84, empty, empty)), node(89, empty, empty))))), node(98, node(95, node(93, empty, empty), empty), node(99, empty, empty)))).
after_insertion_list58(L):- L = [2, 3, 9, 11, 18, 23, 24, 25, 29, 31, 32, 33, 35, 36, 37, 39, 43, 48, 51, 52, 54, 56, 59, 65, 71, 76, 77, 79, 80, 81, 83, 84, 87, 89, 91, 92, 93, 95, 98, 99].
after_deletion_list58(L):- L = [3, 11, 18, 23, 24, 25, 29, 32, 33, 35, 36, 37, 43, 48, 51, 52, 56, 59, 65, 71, 76, 77, 79, 80, 81, 83, 84, 87, 89, 92, 93, 98, 99].
run_bst_test58:- build_bst58(BT0),
not(lookup(92, BT0)),
not(lookup(29, BT0)),
lookup(95, BT0),
lookup(54, BT0),
lookup(2, BT0),
lookup(9, BT0),
lookup(39, BT0),
lookup(31, BT0),
lookup(91, BT0),
isBST(BT0),
insert(92, BT0, BT1),
insert(29, BT1, BT2),
isBST(BT2),
inorder(BT2, L1), 
after_insertion_list58(L1), 
delete(95, BT2, BT3), 
delete(54, BT3, BT4), 
delete(2, BT4, BT5), 
delete(9, BT5, BT6), 
delete(39, BT6, BT7), 
delete(31, BT7, BT8), 
delete(91, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list58(L2). 
build_bst59(BT):- BT = node(25, node(4, empty, node(22, node(20, node(18, node(13, node(5, empty, node(8, node(7, empty, empty), empty)), node(17, node(14, empty, empty), empty)), empty), node(21, empty, empty)), node(24, node(23, empty, empty), empty))), node(68, node(36, node(30, node(28, empty, empty), empty), node(46, node(42, node(41, node(39, empty, empty), empty), empty), node(49, empty, node(50, empty, empty)))), node(85, node(69, empty, node(73, node(72, node(70, empty, empty), empty), node(77, empty, node(83, empty, empty)))), node(96, node(86, empty, empty), node(98, empty, node(99, empty, empty)))))).
after_insertion_list59(L):- L = [1, 4, 5, 7, 8, 13, 14, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 36, 39, 40, 41, 42, 46, 49, 50, 54, 65, 68, 69, 70, 72, 73, 76, 77, 83, 85, 86, 96, 98, 99].
after_deletion_list59(L):- L = [1, 4, 5, 7, 8, 13, 14, 17, 18, 20, 21, 23, 24, 25, 26, 28, 30, 36, 39, 40, 42, 46, 49, 50, 54, 65, 68, 69, 70, 72, 73, 76, 77, 85, 86, 96, 98, 99].
run_bst_test59:- build_bst59(BT0),
not(lookup(76, BT0)),
not(lookup(54, BT0)),
not(lookup(26, BT0)),
not(lookup(40, BT0)),
not(lookup(65, BT0)),
not(lookup(1, BT0)),
lookup(83, BT0),
lookup(22, BT0),
lookup(41, BT0),
isBST(BT0),
insert(76, BT0, BT1),
insert(54, BT1, BT2),
insert(26, BT2, BT3),
insert(40, BT3, BT4),
insert(65, BT4, BT5),
insert(1, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list59(L1), 
delete(83, BT6, BT7), 
delete(22, BT7, BT8), 
delete(41, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list59(L2). 
build_bst60(BT):- BT = node(30, node(14, node(6, node(1, empty, node(5, node(2, empty, empty), empty)), node(13, node(8, node(7, empty, empty), empty), empty)), node(16, empty, node(19, empty, node(28, node(23, node(21, empty, empty), node(24, empty, empty)), empty)))), node(85, node(61, node(54, node(39, node(31, empty, node(33, empty, node(35, empty, node(38, empty, empty)))), node(53, node(52, node(44, node(41, empty, node(43, empty, empty)), node(47, empty, empty)), empty), empty)), node(59, node(55, empty, empty), empty)), node(63, empty, node(78, node(74, node(71, node(66, empty, empty), empty), empty), node(83, node(79, empty, empty), empty)))), node(88, node(86, empty, empty), node(95, node(90, empty, empty), empty)))).
after_insertion_list60(L):- L = [1, 2, 5, 6, 7, 8, 13, 14, 16, 19, 21, 23, 24, 28, 29, 30, 31, 33, 35, 36, 38, 39, 41, 43, 44, 47, 52, 53, 54, 55, 59, 61, 63, 66, 71, 73, 74, 78, 79, 83, 85, 86, 88, 90, 95, 96].
after_deletion_list60(L):- L = [1, 2, 6, 8, 13, 14, 16, 19, 23, 24, 28, 29, 30, 31, 33, 35, 36, 38, 39, 41, 43, 44, 47, 52, 53, 54, 55, 59, 61, 63, 73, 74, 78, 79, 83, 85, 86, 90, 95, 96].
run_bst_test60:- build_bst60(BT0),
not(lookup(36, BT0)),
not(lookup(73, BT0)),
not(lookup(29, BT0)),
not(lookup(96, BT0)),
lookup(5, BT0),
lookup(21, BT0),
lookup(7, BT0),
lookup(88, BT0),
lookup(66, BT0),
lookup(71, BT0),
isBST(BT0),
insert(36, BT0, BT1),
insert(73, BT1, BT2),
insert(29, BT2, BT3),
insert(96, BT3, BT4),
isBST(BT4),
inorder(BT4, L1), 
after_insertion_list60(L1), 
delete(5, BT4, BT5), 
delete(21, BT5, BT6), 
delete(7, BT6, BT7), 
delete(88, BT7, BT8), 
delete(66, BT8, BT9), 
delete(71, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list60(L2). 
build_bst61(BT):- BT = node(19, node(5, node(2, node(1, empty, empty), node(3, empty, empty)), node(18, node(16, node(12, empty, empty), empty), empty)), node(53, node(38, node(31, node(27, node(21, empty, empty), empty), node(34, node(32, empty, empty), node(35, empty, empty))), node(48, node(43, node(42, empty, empty), empty), node(49, empty, empty))), node(83, node(62, node(60, node(59, node(54, empty, empty), empty), empty), node(77, node(64, empty, node(68, node(66, empty, empty), node(70, empty, node(75, node(74, empty, empty), empty)))), node(79, empty, node(81, empty, empty)))), node(86, node(85, empty, empty), node(99, node(92, node(89, node(87, empty, empty), empty), node(95, node(94, empty, empty), empty)), empty))))).
after_insertion_list61(L):- L = [1, 2, 3, 5, 12, 16, 17, 18, 19, 21, 26, 27, 31, 32, 34, 35, 38, 42, 43, 45, 48, 49, 52, 53, 54, 59, 60, 61, 62, 64, 66, 68, 70, 74, 75, 76, 77, 79, 81, 83, 85, 86, 87, 89, 92, 94, 95, 99].
after_deletion_list61(L):- L = [1, 2, 3, 12, 16, 17, 18, 19, 21, 26, 27, 32, 34, 35, 38, 42, 43, 45, 48, 49, 52, 53, 54, 59, 60, 61, 62, 64, 66, 68, 70, 75, 76, 77, 79, 81, 83, 85, 86, 87, 89, 92, 94, 95, 99].
run_bst_test61:- build_bst61(BT0),
not(lookup(61, BT0)),
not(lookup(52, BT0)),
not(lookup(45, BT0)),
not(lookup(17, BT0)),
not(lookup(26, BT0)),
not(lookup(76, BT0)),
lookup(31, BT0),
lookup(74, BT0),
lookup(5, BT0),
isBST(BT0),
insert(61, BT0, BT1),
insert(52, BT1, BT2),
insert(45, BT2, BT3),
insert(17, BT3, BT4),
insert(26, BT4, BT5),
insert(76, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list61(L1), 
delete(31, BT6, BT7), 
delete(74, BT7, BT8), 
delete(5, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list61(L2). 
build_bst62(BT):- BT = node(69, node(42, node(9, node(1, empty, node(8, node(2, empty, node(5, empty, empty)), empty)), node(20, node(13, node(11, empty, empty), node(15, node(14, empty, empty), empty)), node(38, node(36, node(33, node(23, empty, node(30, node(26, empty, empty), empty)), node(34, empty, empty)), empty), node(40, empty, empty)))), node(50, node(48, node(47, node(43, empty, empty), empty), empty), node(66, node(53, empty, node(55, empty, node(58, empty, empty))), node(67, empty, empty)))), node(75, node(73, node(72, node(71, empty, empty), empty), node(74, empty, empty)), node(95, node(88, node(83, node(81, empty, node(82, empty, empty)), node(87, empty, empty)), empty), empty))).
after_insertion_list62(L):- L = [1, 2, 5, 8, 9, 10, 11, 13, 14, 15, 20, 23, 26, 30, 33, 34, 36, 37, 38, 40, 41, 42, 43, 47, 48, 50, 51, 53, 55, 56, 58, 66, 67, 68, 69, 71, 72, 73, 74, 75, 81, 82, 83, 87, 88, 95].
after_deletion_list62(L):- L = [1, 2, 8, 9, 10, 11, 13, 14, 15, 20, 23, 26, 30, 33, 34, 36, 37, 38, 40, 41, 42, 43, 47, 48, 50, 51, 53, 55, 56, 58, 66, 67, 68, 71, 72, 73, 74, 75, 81, 87, 88, 95].
run_bst_test62:- build_bst62(BT0),
not(lookup(37, BT0)),
not(lookup(10, BT0)),
not(lookup(56, BT0)),
not(lookup(51, BT0)),
not(lookup(41, BT0)),
not(lookup(68, BT0)),
lookup(83, BT0),
lookup(5, BT0),
lookup(82, BT0),
lookup(69, BT0),
isBST(BT0),
insert(37, BT0, BT1),
insert(10, BT1, BT2),
insert(56, BT2, BT3),
insert(51, BT3, BT4),
insert(41, BT4, BT5),
insert(68, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list62(L1), 
delete(83, BT6, BT7), 
delete(5, BT7, BT8), 
delete(82, BT8, BT9), 
delete(69, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list62(L2). 
build_bst63(BT):- BT = node(48, node(1, empty, node(8, node(4, node(2, empty, empty), node(7, empty, empty)), node(24, node(22, node(11, node(10, empty, empty), node(18, node(15, node(14, empty, empty), empty), node(20, empty, empty))), empty), node(44, node(35, node(28, empty, node(30, empty, empty)), node(43, empty, empty)), node(47, empty, empty))))), node(49, empty, node(57, node(53, node(52, node(51, node(50, empty, empty), empty), empty), node(55, node(54, empty, empty), node(56, empty, empty))), node(83, node(80, node(68, node(58, empty, node(60, empty, empty)), node(76, node(70, node(69, empty, empty), node(74, node(71, empty, empty), empty)), empty)), node(82, empty, empty)), node(97, node(89, node(86, empty, node(88, empty, empty)), node(94, empty, empty)), node(98, empty, empty)))))).
after_insertion_list63(L):- L = [1, 2, 4, 5, 7, 8, 10, 11, 14, 15, 18, 20, 22, 24, 28, 30, 35, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 68, 69, 70, 71, 74, 76, 80, 82, 83, 86, 88, 89, 94, 97, 98].
after_deletion_list63(L):- L = [1, 2, 4, 5, 7, 8, 11, 14, 15, 22, 24, 28, 30, 35, 40, 43, 44, 47, 48, 49, 50, 51, 55, 56, 57, 58, 60, 68, 69, 71, 74, 76, 80, 82, 83, 86, 88, 89, 94, 97, 98].
run_bst_test63:- build_bst63(BT0),
not(lookup(5, BT0)),
not(lookup(40, BT0)),
lookup(18, BT0),
lookup(54, BT0),
lookup(10, BT0),
lookup(52, BT0),
lookup(70, BT0),
lookup(20, BT0),
lookup(53, BT0),
isBST(BT0),
insert(5, BT0, BT1),
insert(40, BT1, BT2),
isBST(BT2),
inorder(BT2, L1), 
after_insertion_list63(L1), 
delete(18, BT2, BT3), 
delete(54, BT3, BT4), 
delete(10, BT4, BT5), 
delete(52, BT5, BT6), 
delete(70, BT6, BT7), 
delete(20, BT7, BT8), 
delete(53, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list63(L2). 
build_bst64(BT):- BT = node(18, node(9, node(5, node(1, empty, empty), node(7, node(6, empty, empty), empty)), node(11, empty, empty)), node(64, node(28, node(19, empty, node(24, empty, node(26, empty, empty))), node(50, node(38, node(30, node(29, empty, empty), node(33, empty, node(37, node(36, empty, empty), empty))), node(43, node(39, empty, node(42, empty, empty)), node(48, empty, empty))), node(54, empty, node(61, empty, empty)))), node(96, node(81, node(66, empty, node(77, node(70, empty, node(74, node(73, empty, empty), node(75, empty, empty))), node(79, empty, empty))), node(89, node(86, empty, empty), node(93, node(92, empty, empty), node(94, empty, empty)))), node(99, node(97, empty, empty), empty)))).
after_insertion_list64(L):- L = [1, 5, 6, 7, 9, 11, 13, 18, 19, 24, 26, 28, 29, 30, 33, 36, 37, 38, 39, 42, 43, 48, 50, 51, 54, 61, 64, 66, 70, 73, 74, 75, 77, 79, 81, 85, 86, 89, 92, 93, 94, 96, 97, 99].
after_deletion_list64(L):- L = [1, 5, 6, 7, 9, 11, 13, 18, 19, 24, 26, 28, 29, 30, 33, 36, 37, 38, 39, 42, 43, 50, 51, 54, 64, 66, 70, 73, 74, 75, 77, 79, 81, 85, 89, 93, 94, 96, 97].
run_bst_test64:- build_bst64(BT0),
not(lookup(85, BT0)),
not(lookup(13, BT0)),
not(lookup(51, BT0)),
lookup(86, BT0),
lookup(99, BT0),
lookup(61, BT0),
lookup(92, BT0),
lookup(48, BT0),
isBST(BT0),
insert(85, BT0, BT1),
insert(13, BT1, BT2),
insert(51, BT2, BT3),
isBST(BT3),
inorder(BT3, L1), 
after_insertion_list64(L1), 
delete(86, BT3, BT4), 
delete(99, BT4, BT5), 
delete(61, BT5, BT6), 
delete(92, BT6, BT7), 
delete(48, BT7, BT8), 
isBST(BT8),
inorder(BT8, L2), 
after_deletion_list64(L2). 
build_bst65(BT):- BT = node(79, node(13, node(7, node(5, node(4, empty, empty), empty), empty), node(42, node(30, node(17, empty, node(21, empty, empty)), node(41, node(36, empty, empty), empty)), node(51, node(49, node(47, empty, empty), empty), node(71, node(61, node(52, empty, node(57, empty, empty)), node(67, node(66, empty, empty), node(68, empty, node(70, empty, empty)))), node(76, node(73, empty, node(74, empty, empty)), empty))))), node(89, node(87, node(85, empty, empty), empty), node(95, node(93, empty, node(94, empty, empty)), empty))).
after_insertion_list65(L):- L = [4, 5, 7, 12, 13, 17, 21, 30, 36, 41, 42, 47, 49, 51, 52, 55, 56, 57, 61, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 79, 85, 87, 89, 93, 94, 95].
after_deletion_list65(L):- L = [4, 5, 12, 13, 17, 21, 30, 36, 41, 42, 47, 49, 52, 55, 56, 57, 61, 65, 66, 67, 68, 70, 71, 73, 74, 77, 79, 87, 89, 93, 94, 95].
run_bst_test65:- build_bst65(BT0),
not(lookup(65, BT0)),
not(lookup(55, BT0)),
not(lookup(77, BT0)),
not(lookup(56, BT0)),
not(lookup(12, BT0)),
lookup(76, BT0),
lookup(7, BT0),
lookup(51, BT0),
lookup(85, BT0),
isBST(BT0),
insert(65, BT0, BT1),
insert(55, BT1, BT2),
insert(77, BT2, BT3),
insert(56, BT3, BT4),
insert(12, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list65(L1), 
delete(76, BT5, BT6), 
delete(7, BT6, BT7), 
delete(51, BT7, BT8), 
delete(85, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list65(L2). 
build_bst66(BT):- BT = node(13, node(2, empty, node(7, node(4, node(3, empty, empty), empty), node(12, node(9, empty, empty), empty))), node(65, node(40, node(36, node(14, empty, node(32, node(20, empty, node(26, node(21, empty, empty), node(27, empty, empty))), empty)), node(39, empty, empty)), node(57, node(47, node(41, empty, empty), node(55, node(48, empty, empty), empty)), node(64, node(59, node(58, empty, empty), node(61, empty, empty)), empty))), node(95, node(76, node(75, empty, empty), node(89, node(83, node(82, node(81, empty, empty), empty), node(87, empty, empty)), node(94, node(93, node(90, empty, empty), empty), empty))), node(96, empty, empty)))).
after_insertion_list66(L):- L = [1, 2, 3, 4, 7, 9, 10, 12, 13, 14, 20, 21, 26, 27, 32, 36, 39, 40, 41, 42, 47, 48, 55, 57, 58, 59, 61, 64, 65, 73, 75, 76, 81, 82, 83, 86, 87, 89, 90, 93, 94, 95, 96].
after_deletion_list66(L):- L = [1, 2, 3, 7, 9, 10, 12, 13, 14, 20, 32, 36, 39, 40, 41, 42, 47, 48, 55, 57, 58, 59, 61, 64, 65, 73, 75, 76, 81, 82, 86, 87, 89, 90, 93, 94, 95, 96].
run_bst_test66:- build_bst66(BT0),
not(lookup(73, BT0)),
not(lookup(86, BT0)),
not(lookup(10, BT0)),
not(lookup(42, BT0)),
not(lookup(1, BT0)),
lookup(27, BT0),
lookup(21, BT0),
lookup(4, BT0),
lookup(26, BT0),
lookup(83, BT0),
isBST(BT0),
insert(73, BT0, BT1),
insert(86, BT1, BT2),
insert(10, BT2, BT3),
insert(42, BT3, BT4),
insert(1, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list66(L1), 
delete(27, BT5, BT6), 
delete(21, BT6, BT7), 
delete(4, BT7, BT8), 
delete(26, BT8, BT9), 
delete(83, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list66(L2). 
build_bst67(BT):- BT = node(78, node(20, node(19, node(11, node(2, node(1, empty, empty), node(6, empty, node(10, empty, empty))), node(12, empty, empty)), empty), node(41, node(36, node(25, empty, node(31, empty, node(35, empty, empty))), node(39, empty, empty)), node(54, node(42, empty, node(45, empty, node(49, empty, empty))), node(74, node(66, node(56, node(55, empty, empty), node(60, node(59, node(57, empty, empty), empty), node(65, node(63, empty, empty), empty))), node(69, node(67, empty, node(68, empty, empty)), empty)), node(77, node(76, empty, empty), empty))))), node(91, node(89, node(79, empty, node(87, node(85, empty, empty), node(88, empty, empty))), empty), node(97, node(96, empty, empty), empty))).
after_insertion_list67(L):- L = [1, 2, 6, 10, 11, 12, 15, 19, 20, 25, 31, 35, 36, 39, 41, 42, 45, 47, 49, 54, 55, 56, 57, 59, 60, 63, 65, 66, 67, 68, 69, 72, 74, 76, 77, 78, 79, 83, 85, 87, 88, 89, 91, 95, 96, 97].
after_deletion_list67(L):- L = [1, 6, 10, 11, 12, 15, 19, 20, 25, 35, 36, 39, 41, 45, 47, 49, 54, 55, 56, 57, 59, 60, 63, 65, 66, 67, 68, 69, 72, 74, 76, 77, 78, 79, 83, 85, 87, 89, 91, 95, 96, 97].
run_bst_test67:- build_bst67(BT0),
not(lookup(15, BT0)),
not(lookup(83, BT0)),
not(lookup(47, BT0)),
not(lookup(72, BT0)),
not(lookup(95, BT0)),
lookup(31, BT0),
lookup(2, BT0),
lookup(88, BT0),
lookup(42, BT0),
isBST(BT0),
insert(15, BT0, BT1),
insert(83, BT1, BT2),
insert(47, BT2, BT3),
insert(72, BT3, BT4),
insert(95, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list67(L1), 
delete(31, BT5, BT6), 
delete(2, BT6, BT7), 
delete(88, BT7, BT8), 
delete(42, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list67(L2). 
build_bst68(BT):- BT = node(92, node(65, node(23, node(11, node(4, empty, node(9, empty, empty)), node(22, node(15, empty, node(19, empty, node(21, node(20, empty, empty), empty))), empty)), node(38, node(27, node(25, empty, empty), node(36, node(35, node(33, node(31, node(29, empty, empty), empty), empty), empty), empty)), node(47, node(42, empty, node(45, empty, empty)), node(61, node(49, node(48, empty, empty), node(58, node(55, empty, empty), empty)), node(62, empty, node(63, empty, empty)))))), node(91, node(73, node(69, empty, empty), node(76, node(75, empty, empty), node(90, node(82, empty, node(89, empty, empty)), empty))), empty)), node(93, empty, node(98, node(96, empty, empty), empty))).
after_insertion_list68(L):- L = [4, 9, 11, 13, 15, 19, 20, 21, 22, 23, 25, 27, 29, 30, 31, 32, 33, 35, 36, 38, 39, 42, 45, 47, 48, 49, 50, 55, 58, 61, 62, 63, 65, 69, 73, 75, 76, 77, 82, 88, 89, 90, 91, 92, 93, 96, 98].
after_deletion_list68(L):- L = [4, 9, 11, 13, 15, 19, 20, 21, 22, 23, 25, 27, 29, 30, 31, 32, 35, 36, 39, 42, 45, 47, 48, 49, 50, 55, 58, 61, 62, 63, 65, 69, 73, 75, 76, 77, 88, 89, 90, 91, 92, 93, 96, 98].
run_bst_test68:- build_bst68(BT0),
not(lookup(30, BT0)),
not(lookup(50, BT0)),
not(lookup(88, BT0)),
not(lookup(13, BT0)),
not(lookup(32, BT0)),
not(lookup(39, BT0)),
not(lookup(77, BT0)),
lookup(33, BT0),
lookup(82, BT0),
lookup(38, BT0),
isBST(BT0),
insert(30, BT0, BT1),
insert(50, BT1, BT2),
insert(88, BT2, BT3),
insert(13, BT3, BT4),
insert(32, BT4, BT5),
insert(39, BT5, BT6),
insert(77, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list68(L1), 
delete(33, BT7, BT8), 
delete(82, BT8, BT9), 
delete(38, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list68(L2). 
build_bst69(BT):- BT = node(23, node(18, node(2, empty, node(17, node(3, empty, node(13, node(12, empty, empty), empty)), empty)), node(21, node(20, empty, empty), empty)), node(60, node(56, node(42, node(29, node(24, empty, empty), node(32, empty, node(39, node(34, empty, node(38, empty, empty)), node(41, empty, empty)))), node(51, empty, node(53, empty, node(55, node(54, empty, empty), empty)))), node(59, empty, empty)), node(90, node(68, node(64, empty, node(65, empty, empty)), node(78, node(75, node(72, empty, empty), node(76, empty, empty)), node(79, empty, node(84, node(83, empty, empty), node(85, empty, empty))))), node(96, node(92, empty, node(93, empty, empty)), node(97, empty, empty))))).
after_insertion_list69(L):- L = [2, 3, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 29, 32, 34, 38, 39, 41, 42, 50, 51, 53, 54, 55, 56, 59, 60, 62, 64, 65, 68, 72, 75, 76, 77, 78, 79, 83, 84, 85, 90, 92, 93, 96, 97].
after_deletion_list69(L):- L = [2, 3, 12, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 29, 32, 34, 38, 39, 41, 42, 50, 51, 53, 54, 55, 56, 59, 60, 62, 64, 65, 68, 72, 75, 76, 77, 78, 79, 84, 85, 90, 92, 93, 96, 97].
run_bst_test69:- build_bst69(BT0),
not(lookup(77, BT0)),
not(lookup(22, BT0)),
not(lookup(25, BT0)),
not(lookup(15, BT0)),
not(lookup(14, BT0)),
not(lookup(50, BT0)),
not(lookup(62, BT0)),
lookup(13, BT0),
lookup(83, BT0),
isBST(BT0),
insert(77, BT0, BT1),
insert(22, BT1, BT2),
insert(25, BT2, BT3),
insert(15, BT3, BT4),
insert(14, BT4, BT5),
insert(50, BT5, BT6),
insert(62, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list69(L1), 
delete(13, BT7, BT8), 
delete(83, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list69(L2). 
build_bst70(BT):- BT = node(38, node(29, node(14, node(1, empty, node(3, empty, node(6, empty, node(7, empty, empty)))), node(20, node(17, empty, empty), node(27, node(26, empty, empty), empty))), node(34, node(30, empty, node(31, empty, empty)), node(35, empty, node(36, empty, empty)))), node(83, node(58, node(56, node(43, empty, node(44, empty, node(51, node(46, empty, empty), empty))), empty), node(67, node(61, empty, node(66, empty, empty)), node(81, node(69, empty, node(71, empty, node(74, empty, empty))), empty))), node(93, node(89, node(88, empty, empty), empty), node(98, empty, empty)))).
after_insertion_list70(L):- L = [1, 3, 6, 7, 14, 17, 20, 21, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 43, 44, 46, 49, 51, 56, 58, 61, 62, 65, 66, 67, 69, 71, 74, 80, 81, 83, 88, 89, 93, 98].
after_deletion_list70(L):- L = [3, 6, 7, 14, 17, 20, 21, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 43, 44, 49, 51, 56, 58, 61, 62, 65, 66, 67, 69, 71, 74, 80, 81, 83, 88, 93, 98].
run_bst_test70:- build_bst70(BT0),
not(lookup(21, BT0)),
not(lookup(49, BT0)),
not(lookup(37, BT0)),
not(lookup(65, BT0)),
not(lookup(32, BT0)),
not(lookup(62, BT0)),
not(lookup(80, BT0)),
lookup(89, BT0),
lookup(1, BT0),
lookup(46, BT0),
isBST(BT0),
insert(21, BT0, BT1),
insert(49, BT1, BT2),
insert(37, BT2, BT3),
insert(65, BT3, BT4),
insert(32, BT4, BT5),
insert(62, BT5, BT6),
insert(80, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list70(L1), 
delete(89, BT7, BT8), 
delete(1, BT8, BT9), 
delete(46, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list70(L2). 
build_bst71(BT):- BT = node(48, node(7, empty, node(19, node(18, node(12, empty, node(13, empty, node(17, empty, empty))), empty), node(30, node(25, node(21, empty, empty), empty), node(38, node(36, empty, node(37, empty, empty)), node(42, empty, node(46, node(44, empty, empty), empty)))))), node(58, node(52, node(50, node(49, empty, empty), node(51, empty, empty)), node(57, node(54, node(53, empty, empty), empty), empty)), node(74, node(65, node(59, empty, node(64, node(60, empty, node(63, empty, empty)), empty)), node(69, empty, node(70, empty, node(72, node(71, empty, empty), empty)))), node(88, node(86, node(79, node(77, node(76, empty, empty), empty), node(81, empty, node(85, node(84, empty, empty), empty))), empty), node(90, empty, node(91, empty, node(96, empty, empty))))))).
after_insertion_list71(L):- L = [1, 4, 7, 12, 13, 17, 18, 19, 21, 25, 30, 36, 37, 38, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 72, 74, 76, 77, 79, 81, 83, 84, 85, 86, 88, 90, 91, 93, 96].
after_deletion_list71(L):- L = [1, 4, 7, 12, 13, 17, 18, 19, 21, 25, 30, 36, 37, 38, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 64, 65, 68, 69, 70, 71, 72, 74, 76, 79, 81, 83, 84, 85, 86, 88, 90, 91, 93].
run_bst_test71:- build_bst71(BT0),
not(lookup(93, BT0)),
not(lookup(68, BT0)),
not(lookup(83, BT0)),
not(lookup(47, BT0)),
not(lookup(4, BT0)),
not(lookup(1, BT0)),
lookup(96, BT0),
lookup(63, BT0),
lookup(77, BT0),
lookup(44, BT0),
isBST(BT0),
insert(93, BT0, BT1),
insert(68, BT1, BT2),
insert(83, BT2, BT3),
insert(47, BT3, BT4),
insert(4, BT4, BT5),
insert(1, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list71(L1), 
delete(96, BT6, BT7), 
delete(63, BT7, BT8), 
delete(77, BT8, BT9), 
delete(44, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list71(L2). 
build_bst72(BT):- BT = node(46, node(39, node(13, node(6, node(4, empty, empty), node(8, empty, empty)), node(29, node(27, node(16, empty, empty), empty), node(34, node(31, empty, node(33, empty, empty)), empty))), node(40, empty, node(45, node(42, empty, empty), empty))), node(83, node(52, node(50, node(47, empty, empty), empty), node(62, node(54, empty, empty), node(73, node(66, empty, node(68, empty, node(69, empty, empty))), node(81, node(77, empty, empty), empty)))), node(91, node(85, empty, node(87, empty, empty)), node(95, empty, node(97, empty, node(99, node(98, empty, empty), empty)))))).
after_insertion_list72(L):- L = [1, 4, 6, 8, 13, 16, 18, 27, 29, 31, 33, 34, 37, 39, 40, 42, 43, 45, 46, 47, 48, 50, 52, 54, 62, 66, 68, 69, 72, 73, 76, 77, 81, 83, 85, 87, 89, 91, 95, 97, 98, 99].
after_deletion_list72(L):- L = [1, 4, 6, 8, 13, 16, 18, 27, 29, 31, 33, 34, 37, 39, 40, 42, 43, 45, 46, 47, 48, 50, 52, 54, 62, 66, 68, 69, 72, 73, 76, 77, 81, 83, 85, 89, 91, 95, 97, 98, 99].
run_bst_test72:- build_bst72(BT0),
not(lookup(18, BT0)),
not(lookup(76, BT0)),
not(lookup(89, BT0)),
not(lookup(37, BT0)),
not(lookup(1, BT0)),
not(lookup(72, BT0)),
not(lookup(48, BT0)),
not(lookup(43, BT0)),
lookup(87, BT0),
isBST(BT0),
insert(18, BT0, BT1),
insert(76, BT1, BT2),
insert(89, BT2, BT3),
insert(37, BT3, BT4),
insert(1, BT4, BT5),
insert(72, BT5, BT6),
insert(48, BT6, BT7),
insert(43, BT7, BT8),
isBST(BT8),
inorder(BT8, L1), 
after_insertion_list72(L1), 
delete(87, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list72(L2). 
build_bst73(BT):- BT = node(60, node(52, node(20, node(11, node(9, empty, empty), node(18, node(13, empty, node(17, empty, empty)), empty)), node(46, node(37, node(26, node(24, empty, empty), node(27, empty, node(28, empty, node(30, empty, node(36, empty, empty))))), node(41, node(38, empty, node(39, empty, empty)), empty)), empty)), node(55, node(54, node(53, empty, empty), empty), node(57, empty, empty))), node(65, node(61, empty, empty), node(73, node(67, empty, node(68, empty, node(70, node(69, empty, empty), empty))), node(95, node(85, node(79, node(75, empty, node(76, empty, empty)), node(81, empty, empty)), node(88, empty, node(92, empty, empty))), node(96, empty, empty))))).
after_insertion_list73(L):- L = [5, 7, 9, 10, 11, 13, 17, 18, 20, 24, 26, 27, 28, 30, 36, 37, 38, 39, 41, 46, 47, 52, 53, 54, 55, 57, 60, 61, 65, 67, 68, 69, 70, 73, 75, 76, 79, 81, 82, 85, 88, 92, 95, 96, 97, 99].
after_deletion_list73(L):- L = [5, 7, 9, 10, 11, 13, 17, 18, 20, 24, 26, 27, 28, 30, 36, 37, 38, 39, 41, 46, 47, 53, 54, 55, 57, 61, 65, 67, 68, 69, 70, 73, 75, 76, 79, 82, 85, 88, 92, 95, 96, 97, 99].
run_bst_test73:- build_bst73(BT0),
not(lookup(97, BT0)),
not(lookup(99, BT0)),
not(lookup(7, BT0)),
not(lookup(5, BT0)),
not(lookup(10, BT0)),
not(lookup(47, BT0)),
not(lookup(82, BT0)),
lookup(81, BT0),
lookup(52, BT0),
lookup(60, BT0),
isBST(BT0),
insert(97, BT0, BT1),
insert(99, BT1, BT2),
insert(7, BT2, BT3),
insert(5, BT3, BT4),
insert(10, BT4, BT5),
insert(47, BT5, BT6),
insert(82, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list73(L1), 
delete(81, BT7, BT8), 
delete(52, BT8, BT9), 
delete(60, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list73(L2). 
build_bst74(BT):- BT = node(52, node(45, node(12, node(6, empty, node(11, empty, empty)), node(23, node(14, empty, node(15, empty, empty)), node(27, node(24, empty, empty), node(40, node(29, empty, node(31, empty, node(36, node(32, empty, empty), empty))), node(43, empty, empty))))), node(49, node(48, empty, empty), node(51, empty, empty))), node(89, node(76, node(63, node(53, empty, node(58, node(57, empty, empty), empty)), node(71, node(66, node(64, empty, empty), node(69, node(68, empty, empty), node(70, empty, empty))), node(75, node(74, empty, empty), empty))), node(88, node(79, node(78, empty, empty), node(82, empty, node(83, empty, node(84, empty, empty)))), empty)), node(99, node(91, empty, node(98, empty, empty)), empty))).
after_insertion_list74(L):- L = [1, 6, 9, 11, 12, 14, 15, 20, 23, 24, 27, 29, 31, 32, 36, 40, 43, 45, 47, 48, 49, 51, 52, 53, 57, 58, 63, 64, 66, 68, 69, 70, 71, 74, 75, 76, 78, 79, 82, 83, 84, 86, 87, 88, 89, 91, 98, 99].
after_deletion_list74(L):- L = [1, 9, 11, 12, 14, 15, 20, 23, 24, 27, 29, 31, 32, 36, 40, 43, 45, 47, 49, 51, 52, 53, 57, 58, 63, 66, 68, 69, 70, 71, 74, 75, 76, 78, 82, 83, 84, 86, 87, 88, 89, 91, 98, 99].
run_bst_test74:- build_bst74(BT0),
not(lookup(87, BT0)),
not(lookup(86, BT0)),
not(lookup(9, BT0)),
not(lookup(20, BT0)),
not(lookup(1, BT0)),
not(lookup(47, BT0)),
lookup(48, BT0),
lookup(6, BT0),
lookup(64, BT0),
lookup(79, BT0),
isBST(BT0),
insert(87, BT0, BT1),
insert(86, BT1, BT2),
insert(9, BT2, BT3),
insert(20, BT3, BT4),
insert(1, BT4, BT5),
insert(47, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list74(L1), 
delete(48, BT6, BT7), 
delete(6, BT7, BT8), 
delete(64, BT8, BT9), 
delete(79, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list74(L2). 
build_bst75(BT):- BT = node(45, node(6, node(1, empty, empty), node(18, node(10, node(7, empty, empty), node(13, node(12, empty, empty), node(16, node(14, empty, empty), empty))), node(19, empty, node(23, node(22, empty, empty), node(35, node(30, empty, empty), node(43, empty, empty)))))), node(59, node(50, node(47, empty, empty), node(51, empty, node(55, empty, empty))), node(98, node(61, empty, node(83, node(72, node(68, empty, empty), node(76, empty, node(80, empty, empty))), node(88, node(87, empty, empty), node(92, node(90, empty, empty), node(94, empty, node(97, empty, empty)))))), empty))).
after_insertion_list75(L):- L = [1, 3, 5, 6, 7, 10, 12, 13, 14, 16, 18, 19, 20, 22, 23, 28, 30, 35, 42, 43, 45, 47, 50, 51, 55, 59, 61, 67, 68, 72, 76, 80, 82, 83, 86, 87, 88, 90, 92, 94, 97, 98, 99].
after_deletion_list75(L):- L = [1, 3, 5, 6, 7, 12, 13, 14, 16, 18, 19, 20, 22, 23, 28, 30, 35, 42, 43, 45, 47, 50, 51, 55, 59, 61, 67, 68, 72, 76, 80, 82, 83, 86, 87, 88, 90, 92, 94, 97, 98, 99].
run_bst_test75:- build_bst75(BT0),
not(lookup(20, BT0)),
not(lookup(67, BT0)),
not(lookup(28, BT0)),
not(lookup(86, BT0)),
not(lookup(82, BT0)),
not(lookup(99, BT0)),
not(lookup(5, BT0)),
not(lookup(42, BT0)),
not(lookup(3, BT0)),
lookup(10, BT0),
isBST(BT0),
insert(20, BT0, BT1),
insert(67, BT1, BT2),
insert(28, BT2, BT3),
insert(86, BT3, BT4),
insert(82, BT4, BT5),
insert(99, BT5, BT6),
insert(5, BT6, BT7),
insert(42, BT7, BT8),
insert(3, BT8, BT9),
isBST(BT9),
inorder(BT9, L1), 
after_insertion_list75(L1), 
delete(10, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list75(L2). 
build_bst76(BT):- BT = node(22, node(12, node(1, empty, empty), node(14, empty, node(15, empty, node(19, empty, empty)))), node(96, node(50, node(29, node(26, node(25, empty, empty), node(27, empty, empty)), node(33, node(30, empty, empty), node(40, node(35, empty, empty), node(43, empty, node(49, empty, empty))))), node(81, node(67, node(58, node(57, node(51, empty, empty), empty), node(63, node(59, empty, empty), empty)), node(76, node(69, empty, node(70, empty, node(71, empty, node(73, empty, empty)))), empty)), node(94, node(89, node(82, empty, empty), node(93, empty, empty)), node(95, empty, empty)))), node(98, empty, empty))).
after_insertion_list76(L):- L = [1, 4, 5, 6, 12, 14, 15, 19, 20, 22, 25, 26, 27, 29, 30, 33, 35, 40, 43, 49, 50, 51, 52, 57, 58, 59, 62, 63, 64, 67, 69, 70, 71, 73, 76, 81, 82, 89, 93, 94, 95, 96, 98, 99].
after_deletion_list76(L):- L = [1, 4, 5, 6, 12, 14, 15, 19, 20, 22, 25, 26, 27, 29, 33, 35, 40, 43, 49, 50, 51, 52, 57, 58, 59, 62, 63, 64, 67, 69, 70, 71, 76, 81, 82, 89, 93, 94, 95, 96, 98, 99].
run_bst_test76:- build_bst76(BT0),
not(lookup(62, BT0)),
not(lookup(5, BT0)),
not(lookup(6, BT0)),
not(lookup(20, BT0)),
not(lookup(99, BT0)),
not(lookup(64, BT0)),
not(lookup(4, BT0)),
not(lookup(52, BT0)),
lookup(73, BT0),
lookup(30, BT0),
isBST(BT0),
insert(62, BT0, BT1),
insert(5, BT1, BT2),
insert(6, BT2, BT3),
insert(20, BT3, BT4),
insert(99, BT4, BT5),
insert(64, BT5, BT6),
insert(4, BT6, BT7),
insert(52, BT7, BT8),
isBST(BT8),
inorder(BT8, L1), 
after_insertion_list76(L1), 
delete(73, BT8, BT9), 
delete(30, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list76(L2). 
build_bst77(BT):- BT = node(83, node(15, node(14, node(1, empty, node(13, node(10, node(6, empty, empty), empty), empty)), empty), node(26, node(18, empty, node(24, node(23, empty, empty), empty)), node(70, node(36, node(35, node(27, empty, node(32, empty, empty)), empty), node(66, node(38, empty, node(59, node(48, node(40, empty, node(46, empty, empty)), node(57, node(53, node(50, empty, empty), node(56, empty, empty)), empty)), empty)), node(69, empty, empty))), node(79, node(78, node(74, empty, empty), empty), node(80, empty, node(82, empty, empty)))))), node(86, empty, node(91, node(88, empty, empty), node(94, node(93, empty, empty), empty)))).
after_insertion_list77(L):- L = [1, 4, 5, 6, 9, 10, 13, 14, 15, 18, 21, 23, 24, 26, 27, 32, 35, 36, 37, 38, 40, 46, 48, 50, 53, 56, 57, 59, 64, 66, 69, 70, 74, 78, 79, 80, 82, 83, 86, 88, 91, 93, 94].
after_deletion_list77(L):- L = [1, 4, 5, 9, 10, 13, 14, 15, 18, 21, 23, 24, 26, 27, 35, 36, 37, 38, 40, 46, 48, 50, 53, 56, 57, 59, 64, 66, 69, 74, 78, 79, 80, 82, 83, 86, 88, 91, 93, 94].
run_bst_test77:- build_bst77(BT0),
not(lookup(37, BT0)),
not(lookup(5, BT0)),
not(lookup(9, BT0)),
not(lookup(4, BT0)),
not(lookup(64, BT0)),
not(lookup(21, BT0)),
lookup(32, BT0),
lookup(70, BT0),
lookup(6, BT0),
isBST(BT0),
insert(37, BT0, BT1),
insert(5, BT1, BT2),
insert(9, BT2, BT3),
insert(4, BT3, BT4),
insert(64, BT4, BT5),
insert(21, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list77(L1), 
delete(32, BT6, BT7), 
delete(70, BT7, BT8), 
delete(6, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list77(L2). 
build_bst78(BT):- BT = node(46, node(1, empty, node(27, node(9, empty, node(17, node(12, empty, empty), node(26, node(19, empty, empty), empty))), node(32, node(29, node(28, empty, empty), node(30, empty, empty)), node(34, empty, node(37, empty, empty))))), node(66, node(54, node(52, node(49, empty, empty), empty), node(64, node(59, empty, node(62, empty, empty)), node(65, empty, empty))), node(85, node(81, node(80, node(69, empty, node(71, empty, node(74, empty, empty))), empty), node(83, empty, empty)), node(87, node(86, empty, empty), node(88, empty, node(91, empty, node(97, node(93, empty, empty), empty))))))).
after_insertion_list78(L):- L = [1, 7, 9, 11, 12, 15, 17, 18, 19, 25, 26, 27, 28, 29, 30, 32, 34, 37, 46, 49, 52, 54, 59, 62, 64, 65, 66, 69, 71, 74, 80, 81, 83, 85, 86, 87, 88, 91, 93, 95, 97].
after_deletion_list78(L):- L = [1, 7, 9, 11, 12, 15, 17, 18, 19, 25, 26, 27, 28, 30, 32, 34, 37, 46, 49, 52, 59, 62, 64, 65, 66, 71, 74, 80, 81, 83, 85, 86, 87, 88, 91, 93, 95, 97].
run_bst_test78:- build_bst78(BT0),
not(lookup(7, BT0)),
not(lookup(18, BT0)),
not(lookup(15, BT0)),
not(lookup(11, BT0)),
not(lookup(95, BT0)),
not(lookup(25, BT0)),
lookup(29, BT0),
lookup(69, BT0),
lookup(54, BT0),
isBST(BT0),
insert(7, BT0, BT1),
insert(18, BT1, BT2),
insert(15, BT2, BT3),
insert(11, BT3, BT4),
insert(95, BT4, BT5),
insert(25, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list78(L1), 
delete(29, BT6, BT7), 
delete(69, BT7, BT8), 
delete(54, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list78(L2). 
build_bst79(BT):- BT = node(89, node(34, node(14, node(4, node(2, empty, empty), node(6, empty, empty)), node(29, node(20, node(18, empty, empty), node(28, empty, empty)), node(30, empty, empty))), node(36, empty, node(44, node(41, node(40, empty, empty), node(43, empty, empty)), node(68, node(53, node(51, empty, node(52, empty, empty)), node(64, node(57, empty, node(59, empty, empty)), empty)), node(69, empty, node(74, node(73, node(70, empty, empty), empty), node(83, node(80, node(78, node(75, empty, node(77, empty, empty)), empty), empty), node(87, node(86, node(84, empty, empty), empty), empty)))))))), node(94, node(92, node(91, empty, empty), node(93, empty, empty)), node(98, node(97, empty, empty), empty))).
after_insertion_list79(L):- L = [2, 4, 6, 7, 8, 14, 18, 20, 25, 28, 29, 30, 34, 36, 38, 40, 41, 43, 44, 47, 51, 52, 53, 57, 59, 64, 68, 69, 70, 73, 74, 75, 76, 77, 78, 80, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 97, 98].
after_deletion_list79(L):- L = [2, 4, 6, 7, 8, 18, 20, 25, 28, 29, 30, 34, 36, 38, 40, 41, 43, 44, 47, 51, 52, 53, 57, 64, 68, 69, 73, 74, 75, 76, 77, 78, 80, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 97, 98].
run_bst_test79:- build_bst79(BT0),
not(lookup(25, BT0)),
not(lookup(8, BT0)),
not(lookup(47, BT0)),
not(lookup(38, BT0)),
not(lookup(7, BT0)),
not(lookup(76, BT0)),
not(lookup(90, BT0)),
lookup(70, BT0),
lookup(59, BT0),
lookup(14, BT0),
isBST(BT0),
insert(25, BT0, BT1),
insert(8, BT1, BT2),
insert(47, BT2, BT3),
insert(38, BT3, BT4),
insert(7, BT4, BT5),
insert(76, BT5, BT6),
insert(90, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list79(L1), 
delete(70, BT7, BT8), 
delete(59, BT8, BT9), 
delete(14, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list79(L2). 
build_bst80(BT):- BT = node(35, node(12, node(8, node(5, node(2, empty, empty), node(7, empty, empty)), node(9, empty, node(10, empty, empty))), node(31, node(15, empty, node(19, empty, empty)), node(34, node(32, empty, empty), empty))), node(98, node(90, node(81, node(40, empty, node(65, empty, node(68, node(66, empty, empty), node(78, node(72, empty, node(75, node(74, empty, empty), empty)), empty)))), node(87, node(85, node(83, empty, empty), empty), empty)), node(97, node(96, node(95, node(92, empty, empty), empty), empty), empty)), empty)).
after_insertion_list80(L):- L = [2, 5, 7, 8, 9, 10, 12, 15, 19, 31, 32, 34, 35, 37, 39, 40, 44, 63, 65, 66, 68, 72, 74, 75, 78, 81, 83, 85, 87, 90, 92, 93, 95, 96, 97, 98, 99].
after_deletion_list80(L):- L = [2, 5, 7, 8, 9, 10, 12, 15, 19, 31, 34, 37, 39, 40, 44, 63, 66, 68, 72, 74, 75, 78, 81, 83, 85, 87, 90, 92, 93, 95, 96, 97, 98, 99].
run_bst_test80:- build_bst80(BT0),
not(lookup(93, BT0)),
not(lookup(44, BT0)),
not(lookup(63, BT0)),
not(lookup(37, BT0)),
not(lookup(99, BT0)),
not(lookup(39, BT0)),
lookup(35, BT0),
lookup(32, BT0),
lookup(65, BT0),
isBST(BT0),
insert(93, BT0, BT1),
insert(44, BT1, BT2),
insert(63, BT2, BT3),
insert(37, BT3, BT4),
insert(99, BT4, BT5),
insert(39, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list80(L1), 
delete(35, BT6, BT7), 
delete(32, BT7, BT8), 
delete(65, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list80(L2). 
build_bst81(BT):- BT = node(13, node(8, node(2, empty, node(6, empty, empty)), node(10, empty, empty)), node(41, node(32, node(22, node(19, node(14, empty, empty), node(21, node(20, empty, empty), empty)), node(24, empty, node(27, empty, empty))), node(33, empty, node(36, empty, node(38, empty, node(40, empty, empty))))), node(60, node(44, empty, node(48, empty, node(49, empty, node(55, node(53, empty, empty), empty)))), node(81, node(74, node(68, node(67, empty, empty), node(71, empty, empty)), node(75, empty, empty)), node(95, node(86, empty, node(87, empty, node(88, empty, node(92, empty, empty)))), node(97, empty, empty)))))).
after_insertion_list81(L):- L = [2, 6, 7, 8, 10, 13, 14, 16, 19, 20, 21, 22, 24, 27, 32, 33, 36, 38, 39, 40, 41, 43, 44, 48, 49, 53, 54, 55, 60, 61, 67, 68, 71, 74, 75, 76, 81, 86, 87, 88, 92, 95, 97, 99].
after_deletion_list81(L):- L = [2, 6, 7, 8, 10, 13, 14, 16, 19, 20, 21, 22, 24, 27, 32, 33, 36, 38, 39, 40, 41, 43, 44, 48, 49, 53, 54, 60, 61, 67, 68, 71, 74, 75, 76, 81, 86, 87, 88, 95, 97, 99].
run_bst_test81:- build_bst81(BT0),
not(lookup(76, BT0)),
not(lookup(7, BT0)),
not(lookup(43, BT0)),
not(lookup(39, BT0)),
not(lookup(61, BT0)),
not(lookup(54, BT0)),
not(lookup(16, BT0)),
not(lookup(99, BT0)),
lookup(92, BT0),
lookup(55, BT0),
isBST(BT0),
insert(76, BT0, BT1),
insert(7, BT1, BT2),
insert(43, BT2, BT3),
insert(39, BT3, BT4),
insert(61, BT4, BT5),
insert(54, BT5, BT6),
insert(16, BT6, BT7),
insert(99, BT7, BT8),
isBST(BT8),
inorder(BT8, L1), 
after_insertion_list81(L1), 
delete(92, BT8, BT9), 
delete(55, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list81(L2). 
build_bst82(BT):- BT = node(20, node(7, node(4, node(2, empty, empty), node(6, empty, empty)), node(10, node(9, empty, empty), node(18, node(12, node(11, empty, empty), node(15, empty, empty)), empty))), node(60, node(35, node(31, node(24, empty, empty), node(32, empty, empty)), node(47, node(44, node(43, node(38, empty, empty), empty), empty), node(58, node(53, node(49, empty, node(52, node(50, empty, empty), empty)), node(55, node(54, empty, empty), empty)), empty))), node(82, node(69, empty, node(78, node(77, empty, empty), node(81, empty, empty))), node(99, node(83, empty, node(92, node(84, empty, node(86, node(85, empty, empty), empty)), node(94, empty, empty))), empty)))).
after_insertion_list82(L):- L = [2, 4, 6, 7, 9, 10, 11, 12, 15, 18, 20, 24, 31, 32, 35, 38, 39, 43, 44, 47, 49, 50, 52, 53, 54, 55, 58, 60, 69, 71, 74, 77, 78, 81, 82, 83, 84, 85, 86, 92, 94, 97, 99].
after_deletion_list82(L):- L = [2, 4, 6, 9, 10, 11, 12, 15, 18, 20, 24, 31, 32, 35, 38, 39, 43, 44, 47, 49, 50, 52, 53, 54, 55, 58, 60, 69, 71, 74, 77, 78, 82, 85, 86, 92, 97, 99].
run_bst_test82:- build_bst82(BT0),
not(lookup(74, BT0)),
not(lookup(97, BT0)),
not(lookup(39, BT0)),
not(lookup(71, BT0)),
lookup(83, BT0),
lookup(84, BT0),
lookup(94, BT0),
lookup(81, BT0),
lookup(7, BT0),
isBST(BT0),
insert(74, BT0, BT1),
insert(97, BT1, BT2),
insert(39, BT2, BT3),
insert(71, BT3, BT4),
isBST(BT4),
inorder(BT4, L1), 
after_insertion_list82(L1), 
delete(83, BT4, BT5), 
delete(84, BT5, BT6), 
delete(94, BT6, BT7), 
delete(81, BT7, BT8), 
delete(7, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list82(L2). 
build_bst83(BT):- BT = node(90, node(8, node(4, node(3, node(1, empty, empty), empty), empty), node(40, node(14, node(9, empty, node(12, empty, empty)), node(37, node(25, node(23, node(15, empty, node(20, node(19, empty, empty), empty)), empty), node(30, node(29, node(26, empty, empty), empty), node(31, empty, node(34, empty, empty)))), node(39, empty, empty))), node(86, node(50, node(43, empty, node(49, node(48, node(47, empty, empty), empty), empty)), node(85, node(69, node(62, node(60, node(52, empty, empty), empty), node(68, node(66, node(65, empty, empty), empty), empty)), node(72, node(70, empty, empty), node(76, node(74, empty, empty), node(77, empty, node(84, empty, empty))))), empty)), node(89, node(88, empty, empty), empty)))), node(96, node(95, node(94, empty, empty), empty), node(99, empty, empty))).
after_insertion_list83(L):- L = [1, 3, 4, 8, 9, 12, 14, 15, 19, 20, 23, 25, 26, 29, 30, 31, 32, 34, 37, 39, 40, 42, 43, 47, 48, 49, 50, 52, 60, 62, 65, 66, 68, 69, 70, 71, 72, 74, 76, 77, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 96, 99].
after_deletion_list83(L):- L = [1, 3, 4, 8, 9, 12, 14, 15, 19, 20, 23, 25, 26, 29, 30, 31, 32, 34, 37, 40, 42, 43, 47, 48, 49, 50, 52, 62, 65, 66, 68, 69, 70, 71, 72, 74, 76, 77, 82, 83, 84, 88, 89, 90, 95, 96, 99].
run_bst_test83:- build_bst83(BT0),
not(lookup(83, BT0)),
not(lookup(82, BT0)),
not(lookup(32, BT0)),
not(lookup(71, BT0)),
not(lookup(42, BT0)),
lookup(86, BT0),
lookup(39, BT0),
lookup(60, BT0),
lookup(94, BT0),
lookup(85, BT0),
isBST(BT0),
insert(83, BT0, BT1),
insert(82, BT1, BT2),
insert(32, BT2, BT3),
insert(71, BT3, BT4),
insert(42, BT4, BT5),
isBST(BT5),
inorder(BT5, L1), 
after_insertion_list83(L1), 
delete(86, BT5, BT6), 
delete(39, BT6, BT7), 
delete(60, BT7, BT8), 
delete(94, BT8, BT9), 
delete(85, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list83(L2). 
build_bst84(BT):- BT = node(49, node(2, empty, node(3, empty, node(48, node(33, node(4, empty, node(26, node(25, node(16, node(8, node(5, empty, empty), node(14, node(12, node(11, empty, empty), empty), empty)), node(22, empty, empty)), empty), node(29, empty, node(32, empty, empty)))), node(41, node(37, node(35, empty, empty), node(39, empty, node(40, empty, empty))), empty)), empty))), node(87, node(54, node(53, node(50, empty, empty), empty), node(62, node(61, node(57, node(56, empty, empty), node(60, empty, empty)), empty), node(68, node(65, empty, empty), node(77, node(69, empty, empty), node(79, empty, empty))))), node(94, node(91, empty, empty), node(98, node(97, empty, empty), node(99, empty, empty))))).
after_insertion_list84(L):- L = [2, 3, 4, 5, 8, 11, 12, 14, 16, 22, 25, 26, 29, 32, 33, 35, 37, 39, 40, 41, 42, 48, 49, 50, 53, 54, 55, 56, 57, 60, 61, 62, 65, 68, 69, 75, 77, 79, 83, 87, 91, 94, 97, 98, 99].
after_deletion_list84(L):- L = [2, 3, 4, 8, 11, 12, 14, 16, 22, 25, 26, 32, 33, 35, 37, 40, 42, 48, 49, 50, 53, 54, 55, 57, 60, 61, 62, 65, 68, 69, 75, 77, 79, 83, 87, 91, 97, 98, 99].
run_bst_test84:- build_bst84(BT0),
not(lookup(42, BT0)),
not(lookup(83, BT0)),
not(lookup(55, BT0)),
not(lookup(75, BT0)),
lookup(5, BT0),
lookup(29, BT0),
lookup(56, BT0),
lookup(41, BT0),
lookup(39, BT0),
lookup(94, BT0),
isBST(BT0),
insert(42, BT0, BT1),
insert(83, BT1, BT2),
insert(55, BT2, BT3),
insert(75, BT3, BT4),
isBST(BT4),
inorder(BT4, L1), 
after_insertion_list84(L1), 
delete(5, BT4, BT5), 
delete(29, BT5, BT6), 
delete(56, BT6, BT7), 
delete(41, BT7, BT8), 
delete(39, BT8, BT9), 
delete(94, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list84(L2). 
build_bst85(BT):- BT = node(28, node(9, node(3, empty, node(4, empty, empty)), node(16, node(14, node(13, node(12, empty, empty), empty), empty), empty)), node(66, node(52, node(48, node(46, node(35, node(30, empty, empty), node(40, empty, node(41, empty, node(45, empty, empty)))), node(47, empty, empty)), node(50, empty, empty)), node(64, node(61, empty, node(63, empty, empty)), node(65, empty, empty))), node(85, node(80, node(77, node(75, empty, empty), empty), node(83, node(81, empty, empty), empty)), node(86, empty, node(87, empty, node(97, node(92, empty, empty), node(99, empty, empty))))))).
after_insertion_list85(L):- L = [3, 4, 9, 10, 11, 12, 13, 14, 16, 28, 30, 35, 36, 40, 41, 43, 45, 46, 47, 48, 50, 52, 56, 61, 63, 64, 65, 66, 69, 75, 77, 80, 81, 83, 85, 86, 87, 92, 97, 99].
after_deletion_list85(L):- L = [3, 4, 9, 10, 11, 12, 13, 14, 16, 28, 30, 35, 36, 40, 41, 43, 45, 46, 47, 50, 52, 56, 61, 63, 64, 65, 69, 75, 77, 80, 81, 83, 85, 87, 92, 97, 99].
run_bst_test85:- build_bst85(BT0),
not(lookup(69, BT0)),
not(lookup(43, BT0)),
not(lookup(36, BT0)),
not(lookup(10, BT0)),
not(lookup(11, BT0)),
not(lookup(56, BT0)),
lookup(66, BT0),
lookup(86, BT0),
lookup(48, BT0),
isBST(BT0),
insert(69, BT0, BT1),
insert(43, BT1, BT2),
insert(36, BT2, BT3),
insert(10, BT3, BT4),
insert(11, BT4, BT5),
insert(56, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list85(L1), 
delete(66, BT6, BT7), 
delete(86, BT7, BT8), 
delete(48, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list85(L2). 
build_bst86(BT):- BT = node(13, node(12, node(11, node(3, node(1, empty, empty), node(9, node(6, empty, node(8, empty, empty)), empty)), empty), empty), node(81, node(67, node(36, node(21, node(18, empty, empty), node(35, node(23, empty, node(33, node(24, empty, node(32, empty, empty)), empty)), empty)), node(43, node(39, node(37, empty, empty), empty), node(54, empty, node(55, empty, empty)))), node(73, empty, node(79, node(77, empty, node(78, empty, empty)), node(80, empty, empty)))), node(98, node(85, node(84, empty, empty), node(89, empty, node(96, node(95, empty, empty), empty))), empty))).
after_insertion_list86(L):- L = [1, 3, 4, 6, 8, 9, 11, 12, 13, 15, 18, 21, 23, 24, 27, 32, 33, 35, 36, 37, 39, 41, 43, 54, 55, 67, 69, 73, 77, 78, 79, 80, 81, 84, 85, 87, 89, 92, 93, 95, 96, 98, 99].
after_deletion_list86(L):- L = [1, 3, 4, 6, 8, 9, 11, 12, 13, 15, 18, 21, 23, 24, 27, 32, 33, 35, 36, 37, 39, 41, 43, 54, 55, 67, 69, 73, 77, 78, 79, 80, 81, 84, 85, 87, 89, 92, 93, 95, 96, 98, 99].
run_bst_test86:- build_bst86(BT0),
not(lookup(87, BT0)),
not(lookup(99, BT0)),
not(lookup(69, BT0)),
not(lookup(27, BT0)),
not(lookup(15, BT0)),
not(lookup(4, BT0)),
not(lookup(93, BT0)),
not(lookup(41, BT0)),
not(lookup(92, BT0)),
isBST(BT0),
insert(87, BT0, BT1),
insert(99, BT1, BT2),
insert(69, BT2, BT3),
insert(27, BT3, BT4),
insert(15, BT4, BT5),
insert(4, BT5, BT6),
insert(93, BT6, BT7),
insert(41, BT7, BT8),
insert(92, BT8, BT9),
isBST(BT9),
inorder(BT9, L1), 
after_insertion_list86(L1), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list86(L2). 
build_bst87(BT):- BT = node(14, node(4, node(1, empty, empty), node(6, empty, node(7, empty, empty))), node(91, node(32, node(30, node(16, node(15, empty, empty), empty), empty), node(70, node(45, node(35, node(33, empty, empty), node(38, empty, node(41, empty, empty))), node(60, node(47, empty, node(57, node(49, empty, empty), node(59, empty, empty))), node(67, node(66, empty, empty), empty))), node(72, empty, node(82, node(78, node(77, empty, empty), empty), node(88, node(83, empty, empty), node(89, empty, node(90, empty, empty))))))), empty)).
after_insertion_list87(L):- L = [1, 4, 5, 6, 7, 14, 15, 16, 20, 30, 32, 33, 35, 36, 38, 41, 45, 47, 49, 57, 59, 60, 66, 67, 69, 70, 72, 73, 77, 78, 82, 83, 87, 88, 89, 90, 91, 97].
after_deletion_list87(L):- L = [1, 4, 5, 6, 7, 14, 15, 16, 20, 30, 32, 33, 35, 36, 38, 45, 47, 59, 60, 66, 67, 69, 70, 72, 73, 77, 78, 82, 83, 87, 88, 89, 90, 91, 97].
run_bst_test87:- build_bst87(BT0),
not(lookup(73, BT0)),
not(lookup(36, BT0)),
not(lookup(20, BT0)),
not(lookup(97, BT0)),
not(lookup(5, BT0)),
not(lookup(87, BT0)),
not(lookup(69, BT0)),
lookup(41, BT0),
lookup(57, BT0),
lookup(49, BT0),
isBST(BT0),
insert(73, BT0, BT1),
insert(36, BT1, BT2),
insert(20, BT2, BT3),
insert(97, BT3, BT4),
insert(5, BT4, BT5),
insert(87, BT5, BT6),
insert(69, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list87(L1), 
delete(41, BT7, BT8), 
delete(57, BT8, BT9), 
delete(49, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list87(L2). 
build_bst88(BT):- BT = node(17, node(4, empty, node(10, node(6, empty, node(9, node(7, empty, empty), empty)), node(11, empty, node(14, node(12, empty, empty), node(15, empty, empty))))), node(68, node(40, node(20, empty, node(32, node(30, node(24, empty, empty), empty), empty)), node(50, node(42, empty, node(45, empty, node(47, empty, node(49, empty, empty)))), node(62, node(57, node(51, empty, node(55, node(54, empty, empty), empty)), node(58, empty, node(59, empty, empty))), node(65, node(63, empty, empty), empty)))), node(87, node(75, node(70, empty, node(73, empty, empty)), node(79, empty, node(86, node(83, empty, empty), empty))), node(93, empty, node(98, empty, empty))))).
after_insertion_list88(L):- L = [4, 6, 7, 9, 10, 11, 12, 14, 15, 17, 20, 21, 24, 29, 30, 32, 34, 36, 39, 40, 42, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 62, 63, 65, 68, 70, 73, 75, 79, 83, 86, 87, 93, 98, 99].
after_deletion_list88(L):- L = [4, 6, 7, 9, 11, 12, 14, 15, 17, 21, 24, 29, 30, 32, 34, 36, 39, 40, 42, 45, 47, 48, 49, 50, 51, 55, 57, 58, 59, 62, 63, 65, 68, 70, 73, 75, 79, 83, 86, 87, 93, 98, 99].
run_bst_test88:- build_bst88(BT0),
not(lookup(21, BT0)),
not(lookup(29, BT0)),
not(lookup(36, BT0)),
not(lookup(99, BT0)),
not(lookup(34, BT0)),
not(lookup(48, BT0)),
not(lookup(39, BT0)),
lookup(10, BT0),
lookup(20, BT0),
lookup(54, BT0),
isBST(BT0),
insert(21, BT0, BT1),
insert(29, BT1, BT2),
insert(36, BT2, BT3),
insert(99, BT3, BT4),
insert(34, BT4, BT5),
insert(48, BT5, BT6),
insert(39, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list88(L1), 
delete(10, BT7, BT8), 
delete(20, BT8, BT9), 
delete(54, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list88(L2). 
build_bst89(BT):- BT = node(18, node(9, node(1, empty, node(3, empty, node(4, empty, node(6, empty, empty)))), node(17, node(16, node(15, empty, empty), empty), empty)), node(91, node(19, empty, node(21, empty, node(57, node(47, node(23, node(22, empty, empty), node(34, node(30, node(25, empty, empty), node(32, empty, empty)), node(45, node(40, node(39, empty, empty), node(44, node(41, empty, empty), empty)), empty))), node(49, empty, node(53, node(50, empty, empty), empty))), node(83, node(76, node(73, node(63, empty, node(68, node(65, empty, empty), empty)), node(74, empty, empty)), node(82, node(80, empty, empty), empty)), node(84, empty, node(85, empty, node(88, empty, empty))))))), node(92, empty, node(93, empty, node(94, empty, node(97, empty, empty)))))).
after_insertion_list89(L):- L = [1, 3, 4, 6, 9, 15, 16, 17, 18, 19, 21, 22, 23, 25, 29, 30, 32, 34, 39, 40, 41, 43, 44, 45, 47, 49, 50, 53, 57, 60, 62, 63, 65, 68, 73, 74, 76, 80, 81, 82, 83, 84, 85, 88, 91, 92, 93, 94, 96, 97].
after_deletion_list89(L):- L = [1, 3, 4, 6, 9, 15, 16, 17, 18, 19, 21, 22, 23, 25, 29, 32, 34, 39, 41, 43, 44, 45, 47, 49, 50, 53, 57, 60, 62, 65, 68, 73, 74, 76, 80, 81, 82, 83, 85, 88, 91, 92, 93, 94, 96, 97].
run_bst_test89:- build_bst89(BT0),
not(lookup(81, BT0)),
not(lookup(96, BT0)),
not(lookup(29, BT0)),
not(lookup(60, BT0)),
not(lookup(62, BT0)),
not(lookup(43, BT0)),
lookup(40, BT0),
lookup(63, BT0),
lookup(30, BT0),
lookup(84, BT0),
isBST(BT0),
insert(81, BT0, BT1),
insert(96, BT1, BT2),
insert(29, BT2, BT3),
insert(60, BT3, BT4),
insert(62, BT4, BT5),
insert(43, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list89(L1), 
delete(40, BT6, BT7), 
delete(63, BT7, BT8), 
delete(30, BT8, BT9), 
delete(84, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list89(L2). 
build_bst90(BT):- BT = node(35, node(19, node(18, node(1, empty, node(16, node(11, node(4, empty, empty), node(14, empty, empty)), empty)), empty), node(34, node(27, node(26, node(22, node(21, empty, empty), node(23, empty, empty)), empty), node(32, empty, empty)), empty)), node(80, node(55, node(45, node(42, node(38, node(37, empty, empty), empty), empty), node(49, empty, empty)), node(63, node(60, empty, empty), node(65, empty, node(76, node(68, empty, node(75, empty, empty)), empty)))), node(88, node(84, empty, empty), node(93, node(90, node(89, empty, empty), node(92, empty, empty)), node(97, node(94, empty, empty), empty))))).
after_insertion_list90(L):- L = [1, 2, 4, 10, 11, 14, 16, 18, 19, 21, 22, 23, 25, 26, 27, 32, 34, 35, 37, 38, 42, 45, 49, 55, 60, 63, 65, 68, 75, 76, 80, 81, 84, 86, 88, 89, 90, 92, 93, 94, 95, 97].
after_deletion_list90(L):- L = [1, 2, 4, 10, 11, 14, 16, 19, 21, 22, 23, 25, 26, 27, 32, 34, 35, 37, 38, 42, 45, 49, 60, 63, 65, 68, 75, 76, 81, 84, 86, 88, 89, 90, 92, 93, 94, 95, 97].
run_bst_test90:- build_bst90(BT0),
not(lookup(81, BT0)),
not(lookup(10, BT0)),
not(lookup(2, BT0)),
not(lookup(95, BT0)),
not(lookup(86, BT0)),
not(lookup(25, BT0)),
lookup(18, BT0),
lookup(55, BT0),
lookup(80, BT0),
isBST(BT0),
insert(81, BT0, BT1),
insert(10, BT1, BT2),
insert(2, BT2, BT3),
insert(95, BT3, BT4),
insert(86, BT4, BT5),
insert(25, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list90(L1), 
delete(18, BT6, BT7), 
delete(55, BT7, BT8), 
delete(80, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list90(L2). 
build_bst91(BT):- BT = node(24, node(8, node(2, empty, empty), node(16, node(14, node(9, empty, empty), empty), node(18, empty, empty))), node(92, node(58, node(52, node(49, node(27, empty, node(38, node(29, empty, node(36, node(34, empty, empty), node(37, empty, empty))), node(39, empty, node(40, empty, node(46, empty, empty))))), node(51, empty, empty)), node(56, node(54, empty, empty), empty)), node(63, node(60, node(59, empty, empty), empty), node(87, node(78, node(75, node(69, node(68, node(64, empty, node(67, empty, empty)), empty), node(70, empty, empty)), node(76, empty, empty)), node(81, node(79, empty, empty), empty)), empty))), node(93, empty, node(95, empty, node(96, empty, empty))))).
after_insertion_list91(L):- L = [2, 3, 8, 9, 12, 14, 16, 18, 20, 22, 24, 27, 29, 34, 36, 37, 38, 39, 40, 46, 49, 51, 52, 54, 56, 58, 59, 60, 63, 64, 67, 68, 69, 70, 72, 75, 76, 78, 79, 81, 87, 92, 93, 95, 96, 97].
after_deletion_list91(L):- L = [2, 3, 8, 9, 12, 14, 16, 18, 20, 22, 24, 27, 29, 34, 36, 37, 38, 39, 40, 49, 51, 52, 54, 56, 58, 59, 60, 63, 64, 67, 68, 69, 70, 72, 75, 76, 78, 79, 81, 92, 93, 95, 96, 97].
run_bst_test91:- build_bst91(BT0),
not(lookup(3, BT0)),
not(lookup(20, BT0)),
not(lookup(12, BT0)),
not(lookup(97, BT0)),
not(lookup(72, BT0)),
not(lookup(22, BT0)),
lookup(46, BT0),
lookup(87, BT0),
isBST(BT0),
insert(3, BT0, BT1),
insert(20, BT1, BT2),
insert(12, BT2, BT3),
insert(97, BT3, BT4),
insert(72, BT4, BT5),
insert(22, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list91(L1), 
delete(46, BT6, BT7), 
delete(87, BT7, BT8), 
isBST(BT8),
inorder(BT8, L2), 
after_deletion_list91(L2). 
build_bst92(BT):- BT = node(52, node(15, node(4, node(2, empty, empty), node(7, node(5, empty, node(6, empty, empty)), node(9, empty, node(14, node(13, empty, empty), empty)))), node(49, node(45, node(39, node(29, node(24, node(17, empty, node(23, empty, empty)), node(25, empty, node(27, empty, empty))), node(32, empty, node(38, empty, empty))), node(40, empty, empty)), empty), empty)), node(78, node(77, node(65, node(60, node(58, node(55, empty, node(56, empty, empty)), empty), node(63, empty, empty)), node(74, node(73, node(71, node(68, node(66, empty, empty), empty), empty), empty), empty)), empty), node(81, node(80, empty, empty), node(98, node(87, node(83, empty, empty), node(88, empty, empty)), empty)))).
after_insertion_list92(L):- L = [2, 4, 5, 6, 7, 9, 13, 14, 15, 17, 23, 24, 25, 27, 29, 32, 38, 39, 40, 43, 45, 47, 49, 50, 52, 55, 56, 58, 60, 63, 65, 66, 68, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 98].
after_deletion_list92(L):- L = [2, 4, 6, 7, 9, 13, 15, 17, 23, 24, 25, 27, 29, 32, 38, 39, 40, 43, 45, 47, 49, 50, 52, 56, 58, 60, 63, 65, 66, 68, 71, 73, 74, 76, 78, 79, 80, 81, 82, 83, 87, 88, 98].
run_bst_test92:- build_bst92(BT0),
not(lookup(50, BT0)),
not(lookup(43, BT0)),
not(lookup(79, BT0)),
not(lookup(82, BT0)),
not(lookup(76, BT0)),
not(lookup(47, BT0)),
lookup(5, BT0),
lookup(14, BT0),
lookup(77, BT0),
lookup(55, BT0),
isBST(BT0),
insert(50, BT0, BT1),
insert(43, BT1, BT2),
insert(79, BT2, BT3),
insert(82, BT3, BT4),
insert(76, BT4, BT5),
insert(47, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list92(L1), 
delete(5, BT6, BT7), 
delete(14, BT7, BT8), 
delete(77, BT8, BT9), 
delete(55, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list92(L2). 
build_bst93(BT):- BT = node(75, node(68, node(46, node(14, node(13, node(12, node(5, empty, node(8, empty, node(11, node(10, empty, empty), empty))), empty), empty), node(25, node(18, empty, node(20, empty, empty)), node(30, empty, node(42, node(41, empty, empty), empty)))), node(50, node(47, empty, empty), node(65, node(54, empty, node(58, empty, node(61, empty, empty))), empty))), node(69, empty, node(72, node(70, empty, empty), node(74, empty, empty)))), node(96, node(78, node(76, empty, empty), node(82, node(80, empty, empty), node(92, node(89, node(87, empty, node(88, empty, empty)), node(91, empty, empty)), node(93, empty, node(94, empty, empty))))), empty)).
after_insertion_list93(L):- L = [5, 8, 10, 11, 12, 13, 14, 18, 20, 21, 25, 30, 41, 42, 46, 47, 50, 52, 54, 57, 58, 61, 62, 65, 67, 68, 69, 70, 72, 74, 75, 76, 78, 80, 82, 86, 87, 88, 89, 91, 92, 93, 94, 96].
after_deletion_list93(L):- L = [8, 10, 11, 12, 13, 14, 18, 20, 21, 25, 30, 41, 42, 46, 47, 50, 52, 54, 57, 61, 62, 65, 67, 68, 69, 70, 72, 74, 75, 76, 78, 80, 82, 86, 87, 88, 91, 92, 93, 94, 96].
run_bst_test93:- build_bst93(BT0),
not(lookup(57, BT0)),
not(lookup(52, BT0)),
not(lookup(67, BT0)),
not(lookup(86, BT0)),
not(lookup(62, BT0)),
not(lookup(21, BT0)),
lookup(89, BT0),
lookup(58, BT0),
lookup(5, BT0),
isBST(BT0),
insert(57, BT0, BT1),
insert(52, BT1, BT2),
insert(67, BT2, BT3),
insert(86, BT3, BT4),
insert(62, BT4, BT5),
insert(21, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list93(L1), 
delete(89, BT6, BT7), 
delete(58, BT7, BT8), 
delete(5, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list93(L2). 
build_bst94(BT):- BT = node(26, node(23, node(5, empty, node(15, empty, node(17, empty, empty))), node(25, node(24, empty, empty), empty)), node(48, node(38, node(31, empty, node(33, empty, empty)), node(44, node(43, node(41, empty, empty), empty), node(47, empty, empty))), node(86, node(62, node(52, node(51, node(49, empty, empty), empty), node(59, node(54, empty, node(55, empty, empty)), node(61, empty, empty))), node(76, node(68, node(67, empty, empty), node(74, node(72, empty, empty), empty)), node(85, node(79, empty, node(83, empty, empty)), empty))), node(90, node(88, empty, empty), node(98, node(91, empty, node(92, empty, empty)), empty))))).
after_insertion_list94(L):- L = [1, 5, 14, 15, 17, 23, 24, 25, 26, 31, 32, 33, 37, 38, 41, 43, 44, 47, 48, 49, 51, 52, 54, 55, 59, 61, 62, 67, 68, 72, 74, 76, 79, 83, 85, 86, 88, 90, 91, 92, 98].
after_deletion_list94(L):- L = [1, 5, 14, 17, 23, 24, 26, 31, 32, 33, 37, 38, 43, 44, 47, 48, 51, 52, 54, 55, 59, 61, 62, 67, 68, 72, 76, 79, 83, 85, 86, 88, 90, 91, 92, 98].
run_bst_test94:- build_bst94(BT0),
not(lookup(14, BT0)),
not(lookup(1, BT0)),
not(lookup(32, BT0)),
not(lookup(37, BT0)),
lookup(49, BT0),
lookup(74, BT0),
lookup(15, BT0),
lookup(41, BT0),
lookup(25, BT0),
isBST(BT0),
insert(14, BT0, BT1),
insert(1, BT1, BT2),
insert(32, BT2, BT3),
insert(37, BT3, BT4),
isBST(BT4),
inorder(BT4, L1), 
after_insertion_list94(L1), 
delete(49, BT4, BT5), 
delete(74, BT5, BT6), 
delete(15, BT6, BT7), 
delete(41, BT7, BT8), 
delete(25, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list94(L2). 
build_bst95(BT):- BT = node(96, node(58, node(30, node(4, empty, node(20, node(16, node(7, node(6, empty, empty), node(15, node(8, empty, empty), empty)), node(18, empty, empty)), empty)), node(44, node(39, node(34, node(33, empty, empty), node(37, empty, empty)), node(40, empty, node(43, node(42, node(41, empty, empty), empty), empty))), node(47, empty, node(55, node(53, empty, empty), node(56, empty, empty))))), node(85, node(79, node(71, node(69, node(68, empty, empty), empty), node(73, empty, node(75, empty, empty))), node(80, empty, node(83, empty, empty))), node(89, node(86, empty, empty), node(92, empty, node(95, empty, empty))))), node(97, empty, node(99, empty, empty))).
after_insertion_list95(L):- L = [4, 6, 7, 8, 15, 16, 18, 20, 26, 30, 33, 34, 37, 39, 40, 41, 42, 43, 44, 47, 53, 54, 55, 56, 58, 61, 68, 69, 71, 73, 75, 79, 80, 83, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 99].
after_deletion_list95(L):- L = [4, 7, 8, 15, 16, 18, 20, 26, 30, 33, 34, 37, 39, 40, 41, 42, 43, 47, 53, 54, 55, 56, 58, 61, 68, 69, 71, 73, 75, 79, 80, 83, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 99].
run_bst_test95:- build_bst95(BT0),
not(lookup(26, BT0)),
not(lookup(54, BT0)),
not(lookup(93, BT0)),
not(lookup(94, BT0)),
not(lookup(61, BT0)),
not(lookup(87, BT0)),
not(lookup(90, BT0)),
lookup(44, BT0),
lookup(6, BT0),
isBST(BT0),
insert(26, BT0, BT1),
insert(54, BT1, BT2),
insert(93, BT2, BT3),
insert(94, BT3, BT4),
insert(61, BT4, BT5),
insert(87, BT5, BT6),
insert(90, BT6, BT7),
isBST(BT7),
inorder(BT7, L1), 
after_insertion_list95(L1), 
delete(44, BT7, BT8), 
delete(6, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list95(L2). 
build_bst96(BT):- BT = node(3, empty, node(74, node(9, node(4, empty, node(7, empty, empty)), node(48, node(23, node(15, node(11, empty, empty), node(21, node(19, node(18, empty, empty), empty), node(22, empty, empty))), node(27, node(24, empty, node(25, empty, empty)), node(40, node(36, node(34, empty, empty), node(38, empty, empty)), empty))), node(62, node(52, node(49, empty, node(51, empty, empty)), node(58, node(55, node(53, empty, empty), empty), empty)), node(72, node(71, node(70, node(68, node(64, node(63, empty, empty), node(67, empty, empty)), node(69, empty, empty)), empty), empty), empty)))), node(99, node(81, node(80, empty, empty), node(91, node(89, node(85, empty, empty), empty), node(95, node(92, empty, empty), empty))), empty))).
after_insertion_list96(L):- L = [3, 4, 7, 9, 11, 12, 15, 18, 19, 21, 22, 23, 24, 25, 27, 30, 34, 36, 38, 40, 48, 49, 51, 52, 53, 55, 56, 57, 58, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 80, 81, 85, 89, 91, 92, 93, 95, 99].
after_deletion_list96(L):- L = [3, 4, 7, 9, 11, 12, 15, 18, 19, 21, 22, 23, 24, 25, 27, 30, 34, 38, 40, 48, 49, 51, 52, 53, 56, 57, 58, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 80, 81, 85, 89, 91, 92, 93, 95, 99].
run_bst_test96:- build_bst96(BT0),
not(lookup(56, BT0)),
not(lookup(66, BT0)),
not(lookup(93, BT0)),
not(lookup(57, BT0)),
not(lookup(30, BT0)),
not(lookup(12, BT0)),
lookup(55, BT0),
lookup(36, BT0),
isBST(BT0),
insert(56, BT0, BT1),
insert(66, BT1, BT2),
insert(93, BT2, BT3),
insert(57, BT3, BT4),
insert(30, BT4, BT5),
insert(12, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list96(L1), 
delete(55, BT6, BT7), 
delete(36, BT7, BT8), 
isBST(BT8),
inorder(BT8, L2), 
after_deletion_list96(L2). 
build_bst97(BT):- BT = node(35, node(30, node(22, node(17, node(8, node(6, node(1, empty, empty), empty), node(11, empty, empty)), node(19, empty, node(20, empty, empty))), node(28, node(25, empty, empty), empty)), node(32, empty, empty)), node(41, node(37, empty, node(40, empty, empty)), node(92, node(44, node(43, node(42, empty, empty), empty), node(86, node(73, node(65, node(62, node(59, node(56, node(49, empty, node(55, empty, empty)), node(58, empty, empty)), empty), node(64, node(63, empty, empty), empty)), node(70, node(67, empty, empty), node(71, empty, empty))), node(84, node(81, node(76, empty, node(79, node(77, empty, empty), empty)), empty), empty)), node(89, node(88, empty, empty), empty))), node(98, node(97, empty, empty), node(99, empty, empty))))).
after_insertion_list97(L):- L = [1, 6, 8, 11, 13, 17, 19, 20, 21, 22, 25, 27, 28, 30, 32, 35, 37, 40, 41, 42, 43, 44, 49, 52, 55, 56, 58, 59, 62, 63, 64, 65, 67, 70, 71, 73, 76, 77, 79, 81, 84, 86, 88, 89, 92, 97, 98, 99].
after_deletion_list97(L):- L = [1, 11, 13, 17, 19, 20, 21, 22, 25, 27, 28, 32, 35, 37, 40, 41, 42, 43, 44, 49, 52, 55, 56, 58, 59, 62, 63, 64, 65, 67, 71, 73, 76, 77, 79, 81, 84, 86, 89, 92, 97, 98, 99].
run_bst_test97:- build_bst97(BT0),
not(lookup(27, BT0)),
not(lookup(52, BT0)),
not(lookup(13, BT0)),
not(lookup(21, BT0)),
lookup(8, BT0),
lookup(88, BT0),
lookup(6, BT0),
lookup(30, BT0),
lookup(70, BT0),
isBST(BT0),
insert(27, BT0, BT1),
insert(52, BT1, BT2),
insert(13, BT2, BT3),
insert(21, BT3, BT4),
isBST(BT4),
inorder(BT4, L1), 
after_insertion_list97(L1), 
delete(8, BT4, BT5), 
delete(88, BT5, BT6), 
delete(6, BT6, BT7), 
delete(30, BT7, BT8), 
delete(70, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list97(L2). 
build_bst98(BT):- BT = node(58, node(28, node(25, node(4, node(2, empty, empty), node(16, node(13, node(7, empty, empty), empty), node(21, empty, node(24, empty, empty)))), node(27, node(26, empty, empty), empty)), node(51, node(42, node(35, node(30, node(29, empty, empty), node(32, empty, node(34, empty, empty))), node(41, node(40, node(37, empty, empty), empty), empty)), node(45, empty, node(48, empty, empty))), node(57, node(55, node(54, empty, empty), empty), empty))), node(99, node(87, node(81, node(62, node(59, empty, empty), node(64, node(63, empty, empty), node(71, empty, node(73, empty, node(78, empty, empty))))), node(83, empty, empty)), node(93, node(92, empty, empty), empty)), empty)).
after_insertion_list98(L):- L = [2, 4, 5, 7, 13, 14, 16, 21, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 40, 41, 42, 45, 48, 49, 51, 54, 55, 57, 58, 59, 62, 63, 64, 71, 73, 78, 81, 83, 87, 92, 93, 99].
after_deletion_list98(L):- L = [2, 5, 7, 13, 14, 16, 21, 25, 28, 29, 30, 34, 37, 40, 42, 45, 48, 49, 51, 54, 55, 57, 58, 59, 62, 63, 64, 71, 73, 78, 81, 83, 87, 92, 93, 99].
run_bst_test98:- build_bst98(BT0),
not(lookup(14, BT0)),
not(lookup(49, BT0)),
not(lookup(5, BT0)),
lookup(35, BT0),
lookup(24, BT0),
lookup(41, BT0),
lookup(32, BT0),
lookup(4, BT0),
lookup(27, BT0),
lookup(26, BT0),
isBST(BT0),
insert(14, BT0, BT1),
insert(49, BT1, BT2),
insert(5, BT2, BT3),
isBST(BT3),
inorder(BT3, L1), 
after_insertion_list98(L1), 
delete(35, BT3, BT4), 
delete(24, BT4, BT5), 
delete(41, BT5, BT6), 
delete(32, BT6, BT7), 
delete(4, BT7, BT8), 
delete(27, BT8, BT9), 
delete(26, BT9, BT10), 
isBST(BT10),
inorder(BT10, L2), 
after_deletion_list98(L2). 
build_bst99(BT):- BT = node(76, node(1, empty, node(39, node(34, node(5, empty, node(15, node(8, empty, empty), node(26, node(17, node(16, empty, empty), empty), node(33, node(30, empty, node(31, empty, empty)), empty)))), empty), node(65, node(55, node(40, empty, node(43, empty, node(51, node(46, empty, empty), node(54, node(52, empty, node(53, empty, empty)), empty)))), node(57, empty, empty)), node(66, empty, node(74, node(71, node(70, node(69, empty, empty), empty), empty), node(75, empty, empty)))))), node(84, node(82, node(79, empty, empty), node(83, empty, empty)), node(97, node(88, node(86, empty, empty), node(94, node(93, node(89, empty, empty), empty), empty)), empty))).
after_insertion_list99(L):- L = [1, 4, 5, 8, 15, 16, 17, 26, 29, 30, 31, 33, 34, 39, 40, 43, 46, 51, 52, 53, 54, 55, 57, 59, 62, 65, 66, 69, 70, 71, 72, 74, 75, 76, 79, 82, 83, 84, 86, 88, 89, 92, 93, 94, 97].
after_deletion_list99(L):- L = [1, 4, 5, 8, 15, 16, 17, 26, 29, 30, 34, 39, 40, 43, 46, 52, 53, 54, 55, 57, 59, 62, 65, 66, 69, 70, 71, 72, 74, 75, 76, 79, 82, 83, 84, 86, 88, 89, 92, 93, 94, 97].
run_bst_test99:- build_bst99(BT0),
not(lookup(62, BT0)),
not(lookup(4, BT0)),
not(lookup(92, BT0)),
not(lookup(29, BT0)),
not(lookup(72, BT0)),
not(lookup(59, BT0)),
lookup(31, BT0),
lookup(51, BT0),
lookup(33, BT0),
isBST(BT0),
insert(62, BT0, BT1),
insert(4, BT1, BT2),
insert(92, BT2, BT3),
insert(29, BT3, BT4),
insert(72, BT4, BT5),
insert(59, BT5, BT6),
isBST(BT6),
inorder(BT6, L1), 
after_insertion_list99(L1), 
delete(31, BT6, BT7), 
delete(51, BT7, BT8), 
delete(33, BT8, BT9), 
isBST(BT9),
inorder(BT9, L2), 
after_deletion_list99(L2). 
run_all_bst_tests:-run_bst_test0, 
run_bst_test1, 
run_bst_test2, 
run_bst_test3, 
run_bst_test4, 
run_bst_test5, 
run_bst_test6, 
run_bst_test7, 
run_bst_test8, 
run_bst_test9, 
run_bst_test10, 
run_bst_test11, 
run_bst_test12, 
run_bst_test13, 
run_bst_test14, 
run_bst_test15, 
run_bst_test16, 
run_bst_test17, 
run_bst_test18, 
run_bst_test19, 
run_bst_test20, 
run_bst_test21, 
run_bst_test22, 
run_bst_test23, 
run_bst_test24, 
run_bst_test25, 
run_bst_test26, 
run_bst_test27, 
run_bst_test28, 
run_bst_test29, 
run_bst_test30, 
run_bst_test31, 
run_bst_test32, 
run_bst_test33, 
run_bst_test34, 
run_bst_test35, 
run_bst_test36, 
run_bst_test37, 
run_bst_test38, 
run_bst_test39, 
run_bst_test40, 
run_bst_test41, 
run_bst_test42, 
run_bst_test43, 
run_bst_test44, 
run_bst_test45, 
run_bst_test46, 
run_bst_test47, 
run_bst_test48, 
run_bst_test49, 
run_bst_test50, 
run_bst_test51, 
run_bst_test52, 
run_bst_test53, 
run_bst_test54, 
run_bst_test55, 
run_bst_test56, 
run_bst_test57, 
run_bst_test58, 
run_bst_test59, 
run_bst_test60, 
run_bst_test61, 
run_bst_test62, 
run_bst_test63, 
run_bst_test64, 
run_bst_test65, 
run_bst_test66, 
run_bst_test67, 
run_bst_test68, 
run_bst_test69, 
run_bst_test70, 
run_bst_test71, 
run_bst_test72, 
run_bst_test73, 
run_bst_test74, 
run_bst_test75, 
run_bst_test76, 
run_bst_test77, 
run_bst_test78, 
run_bst_test79, 
run_bst_test80, 
run_bst_test81, 
run_bst_test82, 
run_bst_test83, 
run_bst_test84, 
run_bst_test85, 
run_bst_test86, 
run_bst_test87, 
run_bst_test88, 
run_bst_test89, 
run_bst_test90, 
run_bst_test91, 
run_bst_test92, 
run_bst_test93, 
run_bst_test94, 
run_bst_test95, 
run_bst_test96, 
run_bst_test97, 
run_bst_test98, 
run_bst_test99. 
run_tests:- run_all_BT_tests, 
                    write(" size correct
 height correct
 preorder correct
 postorder correct
 inorder correct
 trPreorder correct
 trPostorder correct
 trInorder correct
 eulerTour correct
 preET correct
 inET correct
 postET correct
 toString correct
 isBalanced correct
"), 
                    run_all_make_bst_tests, 
                    write(" makeBST correct 
"),
                    run_all_bst_tests,
                    write(" isBST correct 
 lookup correct 
 insert correct 
 delete correct 
 All correct 
").
